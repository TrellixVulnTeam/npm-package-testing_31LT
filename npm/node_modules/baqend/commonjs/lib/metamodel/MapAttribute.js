"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MapAttribute = void 0;
var PluralAttribute_1 = require("./PluralAttribute");
var Attribute_1 = require("./Attribute");
var error_1 = require("../error");
var MapAttribute = /** @class */ (function (_super) {
    __extends(MapAttribute, _super);
    /**
     * @param name
     * @param keyType
     * @param elementType
     */
    function MapAttribute(name, keyType, elementType) {
        var _this = _super.call(this, name, Map, elementType) || this;
        _this.keyType = keyType;
        return _this;
    }
    Object.defineProperty(MapAttribute, "ref", {
        /**
         * Get the type id for this map type
         * @return
         */
        get: function () {
            return '/db/collection.Map';
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(MapAttribute.prototype, "collectionType", {
        /**
         * @inheritDoc
         */
        get: function () {
            return PluralAttribute_1.CollectionType.MAP;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @inheritDoc
     */
    MapAttribute.prototype.getJsonValue = function (state, object, options) {
        var value = this.getValue(object);
        if (!(value instanceof this.typeConstructor)) {
            return null;
        }
        var persisting = {};
        var persistedState = Attribute_1.Attribute.attachState(value) || {};
        var changed = Attribute_1.Attribute.attachSize(value) !== value.size;
        var json = {};
        var iter = value.entries();
        for (var el = iter.next(); !el.done; el = iter.next()) {
            var entry = el.value;
            if (entry[0] === null || entry[0] === undefined) {
                throw new error_1.PersistentError('Map keys can\'t be null nor undefined.');
            }
            var jsonKey = this.keyValue(this.keyType.toJsonValue(state, entry[0], options));
            json[jsonKey] = this.elementType.toJsonValue(state, entry[1], options);
            persisting[jsonKey] = [entry[0], entry[1]];
            changed = changed || (persistedState[jsonKey] || [])[1] !== entry[1];
        }
        if (options.persisting) {
            Attribute_1.Attribute.attachState(value, persisting, true);
            Attribute_1.Attribute.attachSize(value, value.size);
        }
        if (changed) {
            state.setDirty();
        }
        return json;
    };
    /**
     * @inheritDoc
     */
    MapAttribute.prototype.setJsonValue = function (state, object, json, options) {
        var value = null;
        if (json) {
            value = this.getValue(object);
            if (!(value instanceof this.typeConstructor)) {
                // eslint-disable-next-line new-cap
                value = new this.typeConstructor();
            }
            var persisting = {};
            var persistedState = Attribute_1.Attribute.attachState(value) || {};
            value.clear();
            var jsonKeys = Object.keys(json);
            for (var i = 0, len = jsonKeys.length; i < len; i += 1) {
                var jsonKey = jsonKeys[i];
                var persistedEntry = persistedState[jsonKey] || [];
                // ensures that "false" keys will be converted to false, disallow null as keys
                var key = this.keyType.fromJsonValue(state, jsonKey, persistedEntry[0], options);
                var val = this.elementType.fromJsonValue(state, json[jsonKey], persistedEntry[1], options);
                persisting[jsonKey] = [key, val];
                value.set(key, val);
            }
            if (options.persisting) {
                Attribute_1.Attribute.attachState(value, persisting, true);
                Attribute_1.Attribute.attachSize(value, value.size);
            }
        }
        this.setValue(object, value);
    };
    /**
     * @inheritDoc
     */
    MapAttribute.prototype.toJSON = function () {
        return __assign({ type: MapAttribute.ref + "[" + this.keyType.ref + "," + this.elementType.ref + "]" }, _super.prototype.toJSON.call(this));
    };
    return MapAttribute;
}(PluralAttribute_1.PluralAttribute));
exports.MapAttribute = MapAttribute;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwQXR0cmlidXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL21ldGFtb2RlbC9NYXBBdHRyaWJ1dGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEscURBQW9FO0FBQ3BFLHlDQUF3QztBQUN4QyxrQ0FBMkM7QUFNM0M7SUFBd0MsZ0NBQTJDO0lBa0JqRjs7OztPQUlHO0lBQ0gsc0JBQVksSUFBWSxFQUFFLE9BQWdCLEVBQUUsV0FBb0I7UUFBaEUsWUFDRSxrQkFBTSxJQUFJLEVBQUUsR0FBRyxFQUFFLFdBQVcsQ0FBQyxTQUU5QjtRQURDLEtBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDOztJQUN6QixDQUFDO0lBbkJELHNCQUFXLG1CQUFHO1FBSmQ7OztXQUdHO2FBQ0g7WUFDRSxPQUFPLG9CQUFvQixDQUFDO1FBQzlCLENBQUM7OztPQUFBO0lBS0Qsc0JBQUksd0NBQWM7UUFIbEI7O1dBRUc7YUFDSDtZQUNFLE9BQU8sZ0NBQWMsQ0FBQyxHQUFHLENBQUM7UUFDNUIsQ0FBQzs7O09BQUE7SUFZRDs7T0FFRztJQUNILG1DQUFZLEdBQVosVUFBYSxLQUFtQixFQUFFLE1BQWUsRUFDL0MsT0FBcUY7UUFDckYsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVwQyxJQUFJLENBQUMsQ0FBQyxLQUFLLFlBQVksSUFBSSxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQzVDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxJQUFNLFVBQVUsR0FBMEMsRUFBRSxDQUFDO1FBQzdELElBQU0sY0FBYyxHQUEwQyxxQkFBUyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDakcsSUFBSSxPQUFPLEdBQUcscUJBQVMsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxDQUFDLElBQUksQ0FBQztR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