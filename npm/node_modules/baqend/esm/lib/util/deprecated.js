/* eslint-disable no-console */
const alreadyWarned = {};
export function deprecated(alternativeSignature) {
    return function decorateProperty(target, name, descriptor = {
        writable: true,
        enumerable: false,
        configurable: true,
    }) {
        const type = typeof target === 'string' ? target : target.constructor.name;
        const deprecatedSignature = `${type}.${name}`;
        const logWarning = () => {
            if (!alreadyWarned[deprecatedSignature]) {
                alreadyWarned[deprecatedSignature] = true;
                console.warn(`Usage of ${deprecatedSignature} is deprecated, use ${alternativeSignature} instead.`);
            }
        };
        const deprecatedDescriptor = {
            enumerable: descriptor.enumerable,
            configurable: descriptor.configurable,
        };
        if (descriptor.get || descriptor.set) {
            if (descriptor.get) {
                deprecatedDescriptor.get = function get() {
                    logWarning();
                    return descriptor.get.call(this);
                };
            }
            if (descriptor.set) {
                deprecatedDescriptor.set = function set(value) {
                    logWarning();
                    return descriptor.set.call(this, value);
                };
            }
        }
        else {
            let propertyValue = descriptor.value;
            deprecatedDescriptor.get = function get() {
                logWarning();
                return propertyValue;
            };
            if (descriptor.writable) {
                deprecatedDescriptor.set = function set(value) {
                    logWarning();
                    propertyValue = value;
                };
            }
        }
        return deprecatedDescriptor;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwcmVjYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi91dGlsL2RlcHJlY2F0ZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0JBQStCO0FBQy9CLE1BQU0sYUFBYSxHQUFtQyxFQUFFLENBQUM7QUFDekQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxvQkFBNEI7SUFDckQsT0FBTyxTQUFTLGdCQUFnQixDQUM5QixNQUF1QixFQUN2QixJQUFZLEVBQ1osYUFBaUM7UUFDL0IsUUFBUSxFQUFFLElBQUk7UUFDZCxVQUFVLEVBQUUsS0FBSztRQUNqQixZQUFZLEVBQUUsSUFBSTtLQUNuQjtRQUVELE1BQU0sSUFBSSxHQUFHLE9BQU8sTUFBTSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQztRQUMzRSxNQUFNLG1CQUFtQixHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksRUFBRSxDQUFDO1FBQzlDLE1BQU0sVUFBVSxHQUFHLEdBQUcsRUFBRTtZQUN0QixJQUFJLENBQUMsYUFBYSxDQUFDLG1CQUFtQixDQUFDLEVBQUU7Z0JBQ3ZDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLElBQUksQ0FBQztnQkFDMUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLG1CQUFtQix1QkFBdUIsb0JBQW9CLFdBQVcsQ0FBQyxDQUFDO2FBQ3JHO1FBQ0gsQ0FBQyxDQUFDO1FBRUYsTUFBTSxvQkFBb0IsR0FBdUI7WUFDL0MsVUFBVSxFQUFFLFVBQVUsQ0FBQyxVQUFVO1lBQ2pDLFlBQVksRUFBRSxVQUFVLENBQUMsWUFBWTtTQUN0QyxDQUFDO1FBRUYsSUFBSSxVQUFVLENBQUMsR0FBRyxJQUFJLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDcEMsSUFBSSxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNsQixvQkFBb0IsQ0FBQyxHQUFHLEdBQUcsU0FBUyxHQUFHO29CQUNyQyxVQUFVLEVBQUUsQ0FBQztvQkFDYixPQUFPLFVBQVUsQ0FBQyxHQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNwQyxDQUFDLENBQUM7YUFDSDtZQUVELElBQUksVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDbEIsb0JBQW9CLENBQUMsR0FBRyxHQUFHLFNBQVMsR0FBRyxDQUFDLEtBQUs7b0JBQzNDLFVBQVUsRUFBRSxDQUFDO29CQUNiLE9BQU8sVUFBVSxDQUFDLEdBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUMzQyxDQUFDLENBQUM7YUFDSDtTQUNGO2FBQU07WUFDTCxJQUFJLGFBQWEsR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDO1lBRXJDLG9CQUFvQixDQUFDLEdBQUcsR0FBRyxTQUFTLEdBQUc7Z0JBQ3JDLFVBQVUsRUFBRSxDQUFDO2dCQUNiLE9BQU8sYUFBYSxDQUFDO1lBQ3ZCLENBQUMsQ0FBQztZQUVGLElBQUksVUFBVSxDQUFDLFFBQVEsRUFBRTtnQkFDdkIsb0JBQW9CLENBQUMsR0FBRyxHQUFHLFNBQVMsR0FBRyxDQUFDLEtBQUs7b0JBQzNDLFVBQVUsRUFBRSxDQUFDO29CQUNiLGFBQWEsR0FBRyxLQUFLLENBQUM7Z0JBQ3hCLENBQUMsQ0FBQzthQUNIO1NBQ0Y7UUFFRCxPQUFPLG9CQUFvQixDQUFDO0lBQzlCLENBQUMsQ0FBQztBQUNKLENBQUMifQ==