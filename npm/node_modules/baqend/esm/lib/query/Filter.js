import { Node } from './Node';
import { Condition } from './Condition';
export class Filter extends Node {
    constructor() {
        super(...arguments);
        /**
         * The actual filters of this node
         */
        this.filter = {};
    }
    /**
     * @inheritDoc
     */
    addFilter(field, filter, value) {
        if (field !== null) {
            if (typeof field !== 'string') {
                throw new Error('Field must be a string.');
            }
            if (filter) {
                const currentFilter = this.filter[field];
                let fieldFilter;
                if (typeof currentFilter === 'object' && Object.getPrototypeOf(currentFilter) === Object.prototype) {
                    fieldFilter = currentFilter;
                }
                else {
                    fieldFilter = {};
                    this.filter[field] = fieldFilter;
                }
                fieldFilter[filter] = value;
            }
            else {
                this.filter[field] = value;
            }
        }
        else {
            Object.assign(this.filter, value);
        }
        return this;
    }
    toJSON() {
        return this.filter;
    }
}
Object.assign(Filter.prototype, Condition);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL3F1ZXJ5L0ZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzlCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFXeEMsTUFBTSxPQUFPLE1BQXlCLFNBQVEsSUFBTztJQUFyRDs7UUFDRTs7V0FFRztRQUNhLFdBQU0sR0FBaUIsRUFBRSxDQUFDO0lBbUM1QyxDQUFDO0lBakNDOztPQUVHO0lBQ0gsU0FBUyxDQUFDLEtBQW9CLEVBQUUsTUFBcUIsRUFBRSxLQUFVO1FBQy9ELElBQUksS0FBSyxLQUFLLElBQUksRUFBRTtZQUNsQixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtnQkFDN0IsTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO2FBQzVDO1lBRUQsSUFBSSxNQUFNLEVBQUU7Z0JBQ1YsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDekMsSUFBSSxXQUF5QixDQUFDO2dCQUM5QixJQUFJLE9BQU8sYUFBYSxLQUFLLFFBQVEsSUFBSSxNQUFNLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxLQUFLLE1BQU0sQ0FBQyxTQUFTLEVBQUU7b0JBQ2xHLFdBQVcsR0FBRyxhQUE2QixDQUFDO2lCQUM3QztxQkFBTTtvQkFDTCxXQUFXLEdBQUcsRUFBRSxDQUFDO29CQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLFdBQVcsQ0FBQztpQkFDbEM7Z0JBRUQsV0FBVyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQzthQUM3QjtpQkFBTTtnQkFDTCxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEtBQUssQ0FBQzthQUM1QjtTQUNGO2FBQU07WUFDTCxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDbkM7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxNQUFNO1FBQ0osT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3JCLENBQUM7Q0FDRjtBQUVELE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQyJ9