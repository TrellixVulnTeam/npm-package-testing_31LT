/* DO NOT TOUCH THIS AUTO-GENERATED FILE */
/* eslint-disable max-len */
import { Message } from './connector';
export const ListAllResources = Message.create({
    method: 'GET',
    path: '/',
    status: [200],
});
export const ApiVersion = Message.create({
    method: 'GET',
    path: '/version',
    status: [200],
});
export const Specification = Message.create({
    method: 'GET',
    path: '/spec',
    status: [200],
});
export const GetBloomFilter = Message.create({
    method: 'GET',
    path: '/bloomfilter?rules=false',
    status: [200],
});
export const GetBloomFilterExpirations = Message.create({
    method: 'GET',
    path: '/bloomfilter/expirations',
    status: [200],
});
export const DeleteBloomFilter = Message.create({
    method: 'DELETE',
    path: '/bloomfilter?flush=true',
    status: [204],
});
export const GetOrestesConfig = Message.create({
    method: 'GET',
    path: '/config',
    status: [200],
});
export const UpdateOrestesConfig = Message.create({
    method: 'PUT',
    path: '/config',
    status: [200, 202],
});
export const Connect = Message.create({
    method: 'GET',
    path: '/connect',
    status: [200],
});
export const Status = Message.create({
    method: 'GET',
    path: '/status',
    status: [200],
});
export const EventsUrl = Message.create({
    method: 'GET',
    path: '/events-url',
    status: [200],
});
export const BannedIp = Message.create({
    method: 'GET',
    path: '/banned/:ip',
    status: [204],
});
export const Banned = Message.create({
    method: 'GET',
    path: '/banned',
    status: [],
});
export const Unban = Message.create({
    method: 'DELETE',
    path: '/banned',
    status: [204],
});
export const UnbanIp = Message.create({
    method: 'DELETE',
    path: '/banned/:ip',
    status: [204],
});
export const GetBucketNames = Message.create({
    method: 'GET',
    path: '/db',
    status: [200],
});
export const GetBucketIds = Message.create({
    method: 'GET',
    path: '/db/:bucket/ids?start=0&count=-1',
    status: [200],
});
export const ExportBucket = Message.create({
    method: 'GET',
    path: '/db/:bucket',
    status: [200],
});
export const ImportBucket = Message.create({
    method: 'PUT',
    path: '/db/:bucket',
    status: [200],
});
export const TruncateBucket = Message.create({
    method: 'DELETE',
    path: '/db/:bucket',
    status: [200],
});
export const CreateObject = Message.create({
    method: 'POST',
    path: '/db/:bucket',
    status: [201, 202],
});
export const GetObject = Message.create({
    method: 'GET',
    path: '/db/:bucket/:oid',
    status: [200, 304],
});
export const ReplaceObject = Message.create({
    method: 'PUT',
    path: '/db/:bucket/:oid',
    status: [200, 202],
});
export const DeleteObject = Message.create({
    method: 'DELETE',
    path: '/db/:bucket/:oid',
    status: [202, 204],
});
export const GetAllSchemas = Message.create({
    method: 'GET',
    path: '/schema',
    status: [200],
});
export const UpdateAllSchemas = Message.create({
    method: 'POST',
    path: '/schema',
    status: [200],
});
export const ReplaceAllSchemas = Message.create({
    method: 'PUT',
    path: '/schema',
    status: [200],
});
export const GetSchema = Message.create({
    method: 'GET',
    path: '/schema/:bucket',
    status: [200],
});
export const UpdateSchema = Message.create({
    method: 'POST',
    path: '/schema/:bucket',
    status: [200],
});
export const ReplaceSchema = Message.create({
    method: 'PUT',
    path: '/schema/:bucket',
    status: [200],
});
export const DeleteSchema = Message.create({
    method: 'DELETE',
    path: '/schema/:bucket',
    status: [204],
});
export const AdhocQuery = Message.create({
    method: 'GET',
    path: '/db/:bucket/query?q&start=0&count=-1&sort=&eager=&hinted=',
    status: [200],
});
export const AdhocQueryPOST = Message.create({
    method: 'POST',
    path: '/db/:bucket/query?start=0&count=-1&sort=',
    status: [200],
});
export const AdhocCountQuery = Message.create({
    method: 'GET',
    path: '/db/:bucket/count?q',
    status: [200],
});
export const AdhocCountQueryPOST = Message.create({
    method: 'POST',
    path: '/db/:bucket/count',
    status: [200],
});
export const ListQueryResources = Message.create({
    method: 'GET',
    path: '/query',
    status: [200],
});
export const CreateQuery = Message.create({
    method: 'POST',
    path: '/query',
    status: [201],
});
export const ListThisQueryResources = Message.create({
    method: 'GET',
    path: '/query/:qid',
    status: [200],
});
export const GetQueryCode = Message.create({
    method: 'GET',
    path: '/query/:qid/source',
    status: [200],
});
export const RunQuery = Message.create({
    method: 'GET',
    path: '/query/:qid/result?start=0&count=-1',
    status: [200],
});
export const GetQueryParameters = Message.create({
    method: 'GET',
    path: '/query/:qid/parameters',
    status: [200],
});
export const NewTransaction = Message.create({
    method: 'POST',
    path: '/transaction',
    status: [201],
});
export const CommitTransaction = Message.create({
    method: 'PUT',
    path: '/transaction/:tid/committed',
    status: [200],
});
export const UpdatePartially = Message.create({
    method: 'POST',
    path: '/db/:bucket/:oid',
    status: [200],
});
export const UpdateField = Message.create({
    method: 'POST',
    path: '/db/:bucket/:oid/:field',
    status: [200],
});
export const Login = Message.create({
    method: 'POST',
    path: '/db/User/login',
    status: [200],
});
export const Register = Message.create({
    method: 'POST',
    path: '/db/User/register',
    status: [200, 204],
});
export const Me = Message.create({
    method: 'GET',
    path: '/db/User/me',
    status: [200],
});
export const ValidateUser = Message.create({
    method: 'GET',
    path: '/db/User/validate',
    status: [200],
});
export const Logout = Message.create({
    method: 'GET',
    path: '/db/User/logout',
    status: [204],
});
export const NewPassword = Message.create({
    method: 'POST',
    path: '/db/User/password',
    status: [200],
});
export const ResetPassword = Message.create({
    method: 'POST',
    path: '/db/User/reset',
    status: [200],
});
export const Verify = Message.create({
    method: 'GET',
    path: '/db/User/verify?token=',
    status: [204],
});
export const ChangeUsername = Message.create({
    method: 'POST',
    path: '/db/User/changeUsername',
    status: [204],
});
export const VerifyUsername = Message.create({
    method: 'GET',
    path: '/db/User/verifyUsername?token=',
    status: [204],
});
export const OAuth2 = Message.create({
    method: 'GET',
    path: '/db/User/OAuth/:provider?state=&code=&oauth_verifier=&oauth_token=&error_description=',
    status: [200],
});
export const OAuth1 = Message.create({
    method: 'GET',
    path: '/db/User/OAuth1/:provider',
    status: [200],
});
export const UserToken = Message.create({
    method: 'POST',
    path: '/db/User/:oid/token',
    status: [200],
});
export const RevokeUserToken = Message.create({
    method: 'DELETE',
    path: '/db/User/:oid/token',
    status: [204],
});
export const GetBaqendCode = Message.create({
    method: 'GET',
    path: '/code/:bucket/:type',
    status: [200],
});
export const SetBaqendCode = Message.create({
    method: 'PUT',
    path: '/code/:bucket/:type',
    status: [200, 202],
});
export const DeleteBaqendCode = Message.create({
    method: 'DELETE',
    path: '/code/:bucket/:type',
    status: [202, 204],
});
export const PostBaqendModule = Message.create({
    method: 'POST',
    path: '/code/:bucket',
    status: [200, 204],
});
export const GetBaqendModule = Message.create({
    method: 'GET',
    path: '/code/:bucket',
    status: [200, 204],
});
export const GetAllModules = Message.create({
    method: 'GET',
    path: '/code',
    status: [200],
});
export const ListFiles = Message.create({
    method: 'GET',
    path: '/file/:bucket/ids?path=/&start=&count=-1&deep=false',
    status: [200],
});
export const ListBuckets = Message.create({
    method: 'GET',
    path: '/file/buckets',
    status: [200],
});
export const DownloadArchive = Message.create({
    method: 'GET',
    path: '/file',
    status: [200],
});
export const UploadPatchArchive = Message.create({
    method: 'POST',
    path: '/file',
    status: [200],
});
export const GetFileBucketMetadata = Message.create({
    method: 'GET',
    path: '/file/:bucket',
    status: [200],
});
export const SetFileBucketMetadata = Message.create({
    method: 'PUT',
    path: '/file/:bucket',
    status: [204],
});
export const DeleteFileBucket = Message.create({
    method: 'DELETE',
    path: '/file/:bucket',
    status: [204],
});
export const CreateFile = Message.create({
    method: 'POST',
    path: '/file/:bucket',
    status: [200],
});
export const DownloadFile = Message.create({
    method: 'GET',
    path: '/file/:bucket/*oid',
    status: [200, 304],
});
export const UploadFile = Message.create({
    method: 'PUT',
    path: '/file/:bucket/*oid',
    status: [200],
});
export const GetFileMetadata = Message.create({
    method: 'HEAD',
    path: '/file/:bucket/*oid',
    status: [200],
});
export const UpdateFileMetadata = Message.create({
    method: 'POST',
    path: '/file/:bucket/*oid',
    status: [200],
});
export const DeleteFile = Message.create({
    method: 'DELETE',
    path: '/file/:bucket/*oid',
    status: [200, 204],
});
export const CreateManifest = Message.create({
    method: 'POST',
    path: '/pwa/manifest',
    status: [202],
});
export const DownloadAsset = Message.create({
    method: 'GET',
    path: '/asset/*url',
    status: [200, 304],
});
export const RevalidateAssets = Message.create({
    method: 'POST',
    path: '/asset/revalidate',
    status: [202],
});
export const GetRevalidationStatus = Message.create({
    method: 'GET',
    path: '/asset/revalidate/:id',
    status: [200, 202],
});
export const CancelRevalidation = Message.create({
    method: 'DELETE',
    path: '/asset/revalidate/:id',
    status: [202],
});
export const GetAllRevalidationStatus = Message.create({
    method: 'GET',
    path: '/asset/revalidate?state=',
    status: [200],
});
export const CleanUpAssets = Message.create({
    method: 'POST',
    path: '/asset/cleanup',
    status: [202],
});
export const ListIndexes = Message.create({
    method: 'GET',
    path: '/index/:bucket',
    status: [200],
});
export const CreateDropIndex = Message.create({
    method: 'POST',
    path: '/index/:bucket',
    status: [202],
});
export const DropAllIndexes = Message.create({
    method: 'DELETE',
    path: '/index/:bucket',
    status: [202],
});
export const DeviceRegister = Message.create({
    method: 'POST',
    path: '/db/Device/register',
    status: [200],
});
export const DevicePush = Message.create({
    method: 'POST',
    path: '/db/Device/push',
    status: [204],
});
export const DeviceRegistered = Message.create({
    method: 'GET',
    path: '/db/Device/registered',
    status: [200],
});
export const VAPIDKeys = Message.create({
    method: 'POST',
    path: '/config/VAPIDKeys',
    status: [200],
});
export const VAPIDPublicKey = Message.create({
    method: 'GET',
    path: '/config/VAPIDPublicKey',
    status: [200],
});
export const GCMAKey = Message.create({
    method: 'POST',
    path: '/config/GCMKey',
    status: [204],
});
export const UploadAPNSCertificate = Message.create({
    method: 'POST',
    path: '/config/APNSCert',
    status: [204],
});
export const Install = Message.create({
    method: 'GET',
    path: '/speedkit?d=',
    status: [200],
});
export const SW = Message.create({
    method: 'GET',
    path: '/speedkit?r=&v=',
    status: [200],
});
export const Beacon = Message.create({
    method: 'POST',
    path: '/rum/pi',
    status: [200],
});
//# sourceMappingURL=data:application/json;base64,