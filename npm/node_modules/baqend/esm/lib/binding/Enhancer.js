const BAQEND_ID = Symbol('BaqendId');
const BAQEND_TYPE = Symbol('BaqendType');
export class Enhancer {
    /**
     * @param superClass
     * @return typeConstructor
     */
    createProxy(superClass) {
        return class Proxy extends superClass {
        };
    }
    /**
     * @param typeConstructor
     * @returns type the managed type metadata for this class
     */
    static getBaqendType(typeConstructor) {
        return typeConstructor[BAQEND_TYPE];
    }
    /**
     * @param typeConstructor
     * @return
     */
    static getIdentifier(typeConstructor) {
        return typeConstructor[BAQEND_ID];
    }
    /**
     * @param typeConstructor
     * @param identifier
     */
    static setIdentifier(typeConstructor, identifier) {
        typeConstructor[BAQEND_ID] = identifier;
    }
    /**
     * @param type
     * @param typeConstructor
     */
    enhance(type, typeConstructor) {
        if (typeConstructor[BAQEND_TYPE] === type) {
            return;
        }
        if (Object.prototype.hasOwnProperty.call(typeConstructor, BAQEND_TYPE)) {
            throw new Error('Type is already used by a different manager');
        }
        typeConstructor[BAQEND_TYPE] = type;
        Enhancer.setIdentifier(typeConstructor, type.ref);
        this.enhancePrototype(typeConstructor.prototype, type);
    }
    /**
     * Enhance the prototype of the type
     * @param proto
     * @param type
     */
    enhancePrototype(proto, type) {
        if (type.isEmbeddable) {
            return; // we do not need to enhance the prototype of embeddable
        }
        if (proto.toString === Object.prototype.toString) {
            // implements a better convenience toString method
            Object.defineProperty(proto, 'toString', {
                value: function toString() {
                    return this._metadata.id || this._metadata.bucket;
                },
                enumerable: false,
            });
        }
        // enhance all persistent object properties
        if (type.superType && type.superType.name === 'Object') {
            type.superType.declaredAttributes.forEach((attr) => {
                if (!attr.isMetadata) {
                    this.enhanceProperty(proto, attr);
                }
            });
        }
        // enhance all persistent properties
        type.declaredAttributes.forEach((attr) => {
            this.enhanceProperty(proto, attr);
        });
    }
    /**
     * @param proto
     * @param attribute
     */
    enhanceProperty(proto, attribute) {
        const { name } = attribute;
        Object.defineProperty(proto, name, {
            get() {
                this._metadata.throwUnloadedPropertyAccess(name);
                return null;
            },
            set(value) {
                this._metadata.throwUnloadedPropertyAccess(name);
                Object.defineProperty(this, name, {
                    value,
                    writable: true,
                    enumerable: true,
                    configurable: true,
                });
            },
            configurable: true,
            enumerable: true,
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5oYW5jZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvYmluZGluZy9FbmhhbmNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDckMsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBRXpDLE1BQU0sT0FBTyxRQUFRO0lBQ25COzs7T0FHRztJQUNILFdBQVcsQ0FBaUIsVUFBb0I7UUFDOUMsT0FBTyxNQUFNLEtBQU0sU0FBUyxVQUFrQjtTQUFlLENBQUM7SUFDaEUsQ0FBQztJQUVEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxhQUFhLENBQUMsZUFBc0M7UUFDekQsT0FBUSxlQUF1QixDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRDs7O09BR0c7SUFDSCxNQUFNLENBQUMsYUFBYSxDQUFDLGVBQXNDO1FBQ3pELE9BQVEsZUFBdUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsTUFBTSxDQUFDLGFBQWEsQ0FBQyxlQUEyQixFQUFFLFVBQWtCO1FBQ2pFLGVBQXVCLENBQUMsU0FBUyxDQUFDLEdBQUcsVUFBVSxDQUFDO0lBQ25ELENBQUM7SUFFRDs7O09BR0c7SUFDSCxPQUFPLENBQW9CLElBQW9CLEVBQUUsZUFBeUI7UUFDeEUsSUFBSyxlQUF1QixDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksRUFBRTtZQUNsRCxPQUFPO1NBQ1I7UUFFRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsV0FBVyxDQUFDLEVBQUU7WUFDdEUsTUFBTSxJQUFJLEtBQUssQ0FBQyw2Q0FBNkMsQ0FBQyxDQUFDO1NBQ2hFO1FBRUEsZUFBdUIsQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUM7UUFFN0MsUUFBUSxDQUFDLGFBQWEsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsZ0JBQWdCLENBQW9CLEtBQVEsRUFBRSxJQUFvQjtRQUNoRSxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsT0FBTyxDQUFDLHdEQUF3RDtTQUNqRTtRQUVELElBQUksS0FBSyxDQUFDLFFBQVEsS0FBSyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRTtZQUNoRCxrREFBa0Q7WUFDbEQsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFO2dCQUN2QyxLQUFLLEVBQUUsU0FBUyxRQUFRO29CQUN0QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDO2dCQUNwRCxDQUFDO2dCQUNELFVBQVUsRUFBRSxLQUFLO2FBQ2xCLENBQUMsQ0FBQztTQUNKO1FBRUQsMkNBQTJDO1FBQzNDLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDakQsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7b0JBQ3BCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUNuQztZQUNILENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxvQ0FBb0M7UUFDcEMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNILGVBQWUsQ0FBSSxLQUFRLEVBQUUsU0FBeUI7UUFDcEQsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLFNBQVMsQ0FBQztRQUMzQixNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUU7WUFDakMsR0FBRztnQkFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLDJCQUEyQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNqRCxPQUFPLElBQUksQ0FBQztZQUNkLENBQUM7WUFDRCxHQUFHLENBQUMsS0FBSztnQkFDUCxJQUFJLENBQUMsU0FBUyxDQUFDLDJCQUEyQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNqRCxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUU7b0JBQ2hDLEtBQUs7b0JBQ0wsUUFBUSxFQUFFLElBQUk7b0JBQ2QsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFlBQVksRUFBRSxJQUFJO2lCQUNuQixDQUFDLENBQUM7WUFDTCxDQUFDO1lBQ0QsWUFBWSxFQUFFLElBQUk7WUFDbEIsVUFBVSxFQUFFLElBQUk7U0FDakIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGIn0=