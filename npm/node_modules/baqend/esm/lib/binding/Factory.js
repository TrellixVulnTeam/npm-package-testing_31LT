// @ts-ignore
export class Factory {
    constructor() {
        this.type = null;
        this.prototype = null;
    }
    static extend(target, proto) {
        if (proto !== Factory.prototype) {
            this.extend(target, Object.getPrototypeOf(proto));
        }
        const properties = Object.getOwnPropertyNames(proto);
        for (let j = 0, len = properties.length; j < len; j += 1) {
            const prop = properties[j];
            Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(proto, prop));
        }
        return target;
    }
    /**
     * Creates a new Factory for the given type
     * @param type - the type constructor of T
     * @return A new object factory to created instances of T
     */
    static createFactory(type) {
        // We want te explicitly name the created factory and give the constructor a properly argument name
        const factory = Factory.extend((function FactoryConstructor(...args) {
            return factory.newInstance(args);
        }), this.prototype);
        // lets instanceof work properly
        factory.prototype = type.prototype;
        factory.type = type;
        return factory;
    }
    /**
     * Creates a new instance of the factory type
     * @param args Constructor arguments used for instantiation
     * @return A new created instance of *
     * @instance
     */
    new(...args) {
        return this.newInstance(args);
    }
    /**
     * Creates a new instance of the factory type
     * @param args Constructor arguments used for instantiation
     * @return A new created instance of *
     * @instance
     */
    newInstance(args) {
        if (!args || args.length === 0) {
            // eslint-disable-next-line new-cap
            return new this.type();
        }
        // es6 constructors can't be called, therefore bind all arguments and invoke the constructor
        // then with the bounded parameters
        // The first argument is shift out by invocation with `new`.
        const a = [null];
        Array.prototype.push.apply(a, args);
        const boundConstructor = (Function.prototype.bind.apply(this.type, a));
        // eslint-disable-next-line new-cap
        return new boundConstructor();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9iaW5kaW5nL0ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0JBLGFBQWE7QUFDYixNQUFNLE9BQU8sT0FBTztJQUFwQjtRQWlDUyxTQUFJLEdBQWEsSUFBVyxDQUFDO1FBRTdCLGNBQVMsR0FBTSxJQUFXLENBQUM7SUFpQ3BDLENBQUM7SUFuRVMsTUFBTSxDQUFDLE1BQU0sQ0FBNEIsTUFBUyxFQUFFLEtBQVE7UUFDbEUsSUFBSSxLQUFLLEtBQUssT0FBTyxDQUFDLFNBQVMsRUFBRTtZQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDbkQ7UUFFRCxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3hELE1BQU0sSUFBSSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzQixNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLHdCQUF3QixDQUFDLEtBQUssRUFBRSxJQUFJLENBQUUsQ0FBQyxDQUFDO1NBQ3BGO1FBRUQsT0FBTyxNQUFlLENBQUM7SUFDekIsQ0FBQztJQUVEOzs7O09BSUc7SUFDTyxNQUFNLENBQUMsYUFBYSxDQUEwQyxJQUFjO1FBQ3BGLG1HQUFtRztRQUNuRyxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxrQkFBa0IsQ0FBQyxHQUFHLElBQVc7WUFDeEUsT0FBTyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLENBQUMsQ0FBYSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUVoQyxnQ0FBZ0M7UUFDaEMsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ25DLE9BQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBRXBCLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFNRDs7Ozs7T0FLRztJQUNILEdBQUcsQ0FBQyxHQUFHLElBQVc7UUFDaEIsT0FBTyxJQUFJLENBQUMsV0FBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILFdBQVcsQ0FBQyxJQUF5QjtRQUNuQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQzlCLG1DQUFtQztZQUNuQyxPQUFPLElBQUksSUFBSSxDQUFDLElBQUssRUFBRSxDQUFDO1NBQ3pCO1FBRUQsNEZBQTRGO1FBQzVGLG1DQUFtQztRQUNuQyw0REFBNEQ7UUFDNUQsTUFBTSxDQUFDLEdBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QixLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQWEsQ0FBQyxDQUFDO1FBQzdDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hFLG1DQUFtQztRQUNuQyxPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0NBQ0YifQ==