"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var Validator = /*#__PURE__*/function () {
  function Validator(src, dest, options) {
    (0, _classCallCheck2["default"])(this, Validator);

    this._determineExtenstions(src, dest);

    this._handleOptions(options);
  }

  (0, _createClass2["default"])(Validator, [{
    key: "_determineExtenstions",
    value: function _determineExtenstions(src, dest) {
      this._src = src;
      this._dest = dest;

      if (!this._src || !this._dest) {
        throw new Error('A source and destination are required');
      }
    }
  }, {
    key: "_handleOptions",
    value: function _handleOptions() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if ((0, _typeof2["default"])(options) !== 'object') {
        throw new Error('When supplied options they must be an object');
      }

      var excludes = options.excludes,
          override = options.override,
          _options$path = options.path,
          path = _options$path === void 0 ? '.' : _options$path;
      this.path = path;
      if (excludes) this._handleExcludes(excludes);
      if (override) this._handleOverride(override);
    }
  }, {
    key: "_handleExcludes",
    value: function _handleExcludes(excludes) {
      if (excludes && excludes.constructor !== Set) {
        throw new Error('Excludes must be a set');
      }

      this.excludes = excludes;
    }
  }, {
    key: "_handleOverride",
    value: function _handleOverride(override) {
      if (typeof override !== 'boolean') {
        throw new Error('Override must be a boolean');
      }

      this.override = override;
    }
  }, {
    key: "src",
    get: function get() {
      return this._src;
    }
  }, {
    key: "dest",
    get: function get() {
      return this._dest;
    }
  }]);
  return Validator;
}();

var _default = Validator;
exports["default"] = _default;