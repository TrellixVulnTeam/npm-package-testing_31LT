"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Validator = void 0;
var FallBachValLib = {};
var valLib = FallBachValLib;
try {
    // we load this module as an optional external dependency
    // eslint-disable-next-line global-require
    valLib = require('validator');
}
catch (e) {
    // ignore loading optional module error
}
var Validator = /** @class */ (function () {
    function Validator(key, entity) {
        /**
         * The cached errors of the validation
         */
        this.errors = [];
        this.key = key;
        this.entity = entity;
    }
    /**
     * Compiles the given validation code for the managedType
     * @param managedType The managedType of the code
     * @param validationCode The validation code
     * @return the parsed validation function
     */
    Validator.compile = function (managedType, validationCode) {
        var keys = [];
        var iter = managedType.attributes();
        for (var el = iter.next(); !el.done; el = iter.next()) {
            var attr = el.value;
            keys.push(attr.name);
        }
        // eslint-disable-next-line @typescript-eslint/no-implied-eval,no-new-func
        var fn = new (Function.bind.apply(Function, __spreadArrays([void 0], keys, [validationCode])))();
        return function onValidate(argObj) {
            if (valLib === FallBachValLib) {
                throw new Error('Validation code will not be executed. Make sure that the validator package is correctly provided as an external dependency.');
            }
            var args = keys.map(function (name) { return argObj[name]; });
            return fn.apply({}, args);
        };
    };
    Object.defineProperty(Validator.prototype, "value", {
        /**
         * Gets the value of the attribute
         * @return Value
         */
        get: function () {
            return this.entity[this.key];
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Validator.prototype, "isValid", {
        /**
         * Checks if the attribute is valid
         * @return
         */
        get: function () {
            return this.errors.length === 0;
        },
        enumerable: false,
        configurable: true
    });
    Validator.prototype.is = function (error, fn) {
        if (error instanceof Function) {
            return this.is('is', error);
        }
        if (fn(this.value, valLib) === false) {
            this.errors.push(error);
        }
        return this;
    };
    Validator.prototype.callMethod = function (method, errorMessage, argumentList) {
        var args = argumentList || [];
        try {
            args.unshift(this.toStringValue());
            if (valLib[method].apply(this, args) === false) {
                this.errors.push(errorMessage || method);
            }
        }
        catch (e) {
            this.errors.push(errorMessage || e.message);
        }
        return this;
    };
    Validator.prototype.toStringValue = function () {
        var value = this.value;
        if (typeof value === 'string' || value instanceof Date) {
            return value;
        }
        return JSON.stringify(value);
    };
    Validator.prototype.toJSON = function () {
        return {
            isValid: this.isValid,
            errors: this.errors,
        };
    };
    return Validator;
}());
exports.Validator = Validator;
var OTHER_VALIDATORS = ['contains', 'equals', 'matches'];
Object.keys(valLib).forEach(function (name) {
    if (name.startsWith('is') || OTHER_VALIDATORS.includes(name)) {
        // use function here to keep the correct this context
        Validator.prototype[name] = function validate() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var error = typeof args[0] === 'string' ? args.shift() : null;
            return this.callMethod(name, error, args);
        };
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL2ludGVyc2VjdGlvbi9WYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUlBLElBQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUMxQixJQUFJLE1BQU0sR0FBOEIsY0FBYyxDQUFDO0FBQ3ZELElBQUk7SUFDRix5REFBeUQ7SUFDekQsMENBQTBDO0lBQzFDLE1BQU0sR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7Q0FDL0I7QUFBQyxPQUFPLENBQUMsRUFBRTtJQUNWLHVDQUF1QztDQUN4QztBQVNEO0lBK0ZFLG1CQUFZLEdBQVcsRUFBRSxNQUFjO1FBcEV2Qzs7V0FFRztRQUNLLFdBQU0sR0FBYSxFQUFFLENBQUM7UUFrRTVCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQWpHRDs7Ozs7T0FLRztJQUNJLGlCQUFPLEdBQWQsVUFBZSxXQUE2QixFQUFFLGNBQXNCO1FBQ2xFLElBQU0sSUFBSSxHQUFhLEVBQUUsQ0FBQztRQUMxQixJQUFNLElBQUksR0FBRyxXQUFXLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDdEMsS0FBSyxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDckQsSUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQztZQUN0QixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN0QjtRQUVELDBFQUEwRTtRQUMxRSxJQUFNLEVBQUUsUUFBTyxRQUFRLFlBQVIsUUFBUSwyQkFBSSxJQUFJLEdBQUUsY0FBYyxNQUFDLENBQUM7UUFDakQsT0FB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