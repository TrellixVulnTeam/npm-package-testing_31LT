{"version":3,"sources":["webpack://Baqend/webpack/bootstrap","webpack://Baqend/./lib/connector/Message.ts","webpack://Baqend/./lib/connector/Connector.ts","webpack://Baqend/./lib/connector/XMLHttpConnector.ts","webpack://Baqend/./lib/connector/IFrameConnector.ts","webpack://Baqend/./lib/util/websocket-browser.ts","webpack://Baqend/./lib/connector/WebSocketConnector.ts","webpack://Baqend/./lib/connector/index.ts","webpack://Baqend/./lib/intersection/Metadata.ts","webpack://Baqend/./lib/intersection/Validator.ts","webpack://Baqend/./lib/intersection/ValidationResult.ts","webpack://Baqend/./lib/intersection/Code.ts","webpack://Baqend/./lib/intersection/Modules.ts","webpack://Baqend/./lib/intersection/Logger.ts","webpack://Baqend/./lib/intersection/PushMessage.ts","webpack://Baqend/./lib/intersection/TokenStorage.ts","webpack://Baqend/./lib/intersection/GlobalStorage.ts","webpack://Baqend/./lib/intersection/WebStorage.ts","webpack://Baqend/./lib/intersection/index.ts","webpack://Baqend/./lib/message.ts","webpack://Baqend/./lib/binding/Accessor.ts","webpack://Baqend/./lib/binding/Enhancer.ts","webpack://Baqend/./lib/binding/Factory.ts","webpack://Baqend/./lib/binding/ManagedFactory.ts","webpack://Baqend/./lib/binding/EntityFactory.ts","webpack://Baqend/./lib/binding/UserFactory.ts","webpack://Baqend/./lib/binding/DeviceFactory.ts","webpack://Baqend/./lib/binding/File.ts","webpack://Baqend/./lib/binding/FileFactory.ts","webpack://Baqend/./lib/util/enumerable.ts","webpack://Baqend/./lib/binding/Managed.ts","webpack://Baqend/./lib/binding/Entity.ts","webpack://Baqend/./lib/binding/User.ts","webpack://Baqend/./lib/binding/Role.ts","webpack://Baqend/./lib/binding/index.ts","webpack://Baqend/./lib/util/is-node-browser.ts","webpack://Baqend/./lib/util/atob-browser.ts","webpack://Baqend/./lib/util/hmac-browser.ts","webpack://Baqend/./lib/util/Lockable.ts","webpack://Baqend/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Baqend/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Baqend/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Baqend/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Baqend/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Baqend/./lib/util/uuid.ts","webpack://Baqend/./lib/util/deprecated.ts","webpack://Baqend/./lib/util/trailingSlashIt.ts","webpack://Baqend/./lib/util/index.ts","webpack://Baqend/./lib/error/PersistentError.ts","webpack://Baqend/./lib/error/CommunicationError.ts","webpack://Baqend/./lib/error/IllegalEntityError.ts","webpack://Baqend/./lib/error/EntityExistsError.ts","webpack://Baqend/./lib/error/RollbackError.ts","webpack://Baqend/./lib/error/index.ts","webpack://Baqend/./lib/metamodel/Type.ts","webpack://Baqend/./lib/metamodel/ManagedType.ts","webpack://Baqend/./lib/metamodel/BasicType.ts","webpack://Baqend/./lib/metamodel/Attribute.ts","webpack://Baqend/./lib/metamodel/SingularAttribute.ts","webpack://Baqend/./lib/metamodel/PluralAttribute.ts","webpack://Baqend/./lib/metamodel/EntityType.ts","webpack://Baqend/./lib/metamodel/EmbeddableType.ts","webpack://Baqend/./lib/metamodel/ListAttribute.ts","webpack://Baqend/./lib/metamodel/MapAttribute.ts","webpack://Baqend/./lib/metamodel/SetAttribute.ts","webpack://Baqend/./lib/metamodel/ModelBuilder.ts","webpack://Baqend/./lib/metamodel/DbIndex.ts","webpack://Baqend/./lib/metamodel/Metamodel.ts","webpack://Baqend/./lib/metamodel/CollectionAttribute.ts","webpack://Baqend/./lib/metamodel/index.ts","webpack://Baqend/./lib/Acl.ts","webpack://Baqend/./lib/GeoPoint.ts","webpack://Baqend/./lib/baqend.ts","webpack://Baqend/./lib/EntityManager.ts","webpack://Baqend/./lib/EntityManagerFactory.ts","webpack://Baqend/./lib/query/Query.ts","webpack://Baqend/./lib/query/Stream.ts","webpack://Baqend/./lib/query/Node.ts","webpack://Baqend/./lib/query/Condition.ts","webpack://Baqend/./lib/query/Filter.ts","webpack://Baqend/./lib/query/Operator.ts","webpack://Baqend/./lib/query/Builder.ts","webpack://Baqend/./lib/query/index.ts","webpack://Baqend/./lib/partialupdate/UpdateOperation.ts","webpack://Baqend/./lib/partialupdate/PartialUpdateBuilder.ts","webpack://Baqend/./lib/partialupdate/EntityPartialUpdateBuilder.ts","webpack://Baqend/./lib/partialupdate/index.ts","webpack://Baqend/./lib/caching/BloomFilter.ts","webpack://Baqend/./lib/caching/index.ts","webpack://Baqend/./lib/intersection/Permission.ts","webpack://Baqend/./lib/util/observable.ts","webpack://Baqend/./FetchConnector (ignored)","webpack://Baqend/./NodeConnector (ignored)","webpack://Baqend/./lib/model/index.ts","webpack://Baqend/external \"rxjs\"","webpack://Baqend/external \"validator\"","webpack://Baqend/./lib/deperecated-exports.ts","webpack://Baqend/./lib/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA,cAAc,SAAI,IAAI,SAAI;AAC1B;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;AAC8C;AAC9C;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB,GAAG,wBAAwB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,oCAAoC,+BAA+B;AACnE;AACA;AACA;AACA,kCAAkC,eAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAO,kCAAkC,eAAO;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,UAAU,GAAG,+BAA+B;AACpF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAAkB;AACxC;AACA;AACA;AACA,eAAO;AACP,eAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,eAAO;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,QAAQ;AACzC,aAAa;AACb,SAAS;AACT,KAAK;AACL,cAAc,eAAO;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,QAAQ;AACzC,aAAa;AACb,SAAS;AACT,KAAK;AACL,YAAY,eAAO;AACnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,QAAQ;AACzC,aAAa;AACb,SAAS;AACT,KAAK;AACL,cAAc,eAAO;AACrB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,QAAQ;AACzC,aAAa;AACb,SAAS;AACT,KAAK;AACL,aAAa,eAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mCAAmC,QAAQ;AAC3C,SAAS;AACT,KAAK;AACL,gBAAgB,eAAO;AACvB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC,QAAQ;AACzC,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,2CAA2C,uia;;ACvX3C;AAC2C;AACpC,MAAM,mBAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mBAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,EAAE;AAC7D;AACA;AACA;AACA;AACA,iBAAiB,mBAAS;AAC1B;AACA;AACA;AACA;AACA,oBAAoB,mBAAS;AAC7B;AACA;AACA;AACA,oDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,KAAK;AAC3F,4EAA4E,KAAK;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT,4BAA4B,gBAAgB,EAAE;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,4BAAe;AACjC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA,mDAAmD;AACnD;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qDAAqD;AACpG;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA,uDAAuD,MAAM;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT,sDAAsD,KAAK,IAAI,UAAU;AACzE,SAAS;AACT;AACA;AACA,mBAAS;AACT,mBAAS;AACT;AACA;AACA;AACA,mBAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAS;AACT;AACA;AACA;AACA,mBAAS;AACT,2CAA2C,+8S;;;;;;;;AC3P3C;AACA;AACyC;AACV;AACxB,MAAM,iCAAgB,SAAS,mBAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yBAAyB,YAAY,2CAA2C,GAAG;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,gBAAgB,mBAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,UAAU;AACzB;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,oBAAI;AAC1C;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,KAAK;AACrE;AACA;AACA;AACA;AACA;AACA,mBAAS,iBAAiB,iCAAgB;AAC1C,2CAA2C,2/M;;AC7J3C;AACA;AACwC;AACc;AAC/C,MAAM,+BAAe,SAAS,iCAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+BAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+BAAe,oBAAoB,WAAW,kBAAkB,UAAU,WAAW;AACrF,mBAAS,iBAAiB,+BAAe;AACzC,2CAA2C,20J;;;;;ACnHpC,OAAO,YAAY;AAC1B,2CAA2C,uO;;;;;ACDG;AACA;AACE;AACzC,MAAM,qCAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qCAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,+CAA+C,+BAAkB,sBAAsB,uBAAuB,EAAE,8BAA8B,QAAQ;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+BAAkB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gCAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oFAAoF,KAAK,oCAAoC,4BAA4B;AACzJ;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qCAAkB;AAClB,2CAA2C,2zJ;;AClIqB;AACvB;AACS;AACI;AACF;AACJ;AACU;AAC1D,2CAA2C,ujB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPd;AACM;AACQ;AACpC;AACP;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2BAA2B;AAC/B;AACO,MAAM,iBAAQ,SAAS,gBAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAG;AAC1B;AACA;AACA;AACA,uBAAuB,iBAAQ;AAC/B;AACA;AACA,oBAAoB,uBAAuB,EAAE;AAC7C;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mBAAO,CAAC,CAAW,KAAK;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA,yBAAyB,YAAY,GAAG,wBAAwB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAe,+BAA+B,QAAQ,GAAG,SAAS;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,urI;;;;;AC7L3C;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,EAAW;AAChC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,2CAA2C,2vH;;ACtGpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2CAA2C,+zB;;;;;;;;ACnBL;AACI;AACF;AACxC;AACA;AACA;AACO,MAAM,SAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA,wBAAwB,wBAAqB;AAC7C;AACA;AACA;AACA,6BAA6B,uBAAU;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,wBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA,2CAA2C,uxI;;ACzGL;AACtC;AACA;AACA;AACO,MAAM,eAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,wBAAwB,0BAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,wBAAwB,2BAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+jE;;ACvET;AAClC;AACA;AACA;AACO,MAAM,aAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAM;AAC5B;AACA,qDAAqD,MAAM;AAC3D;AACA;AACA;AACA;AACA,sBAAsB,aAAM;AAC5B,8BAA8B,aAAM;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,uB;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA,2CAA2C;AAC3C;AACA,kBAAkB,6BAA6B,iCAAiC;AAChF;AACA;AACA;AACA;AACA;AACA,4CAA4C,aAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,aAAM;AACd;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2CAA2C,uBAAgB;AAC3D;AACA;AACA,aAAM;AACN,aAAM;AACN,2CAA2C,+6J;;;;;AC/HP;AACpC;AACA;AACA;AACO,MAAM,uBAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,8BAA8B,iBAAiB;AACnG,uBAAuB,uBAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,SAAS;AACT;AACA;AACA,2CAA2C,uzD;;AC7DZ;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK,OAAO,sBAAsB;AACjE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB,YAAI;AACxB,2CAA2C,+wG;;ACnGG;AACvC,MAAM,2BAAa,SAAS,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,2BAAa,SAAS,2BAAa;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2BAAa;AAC7B;AACA;AACA,uBAAuB,2BAAa;AACpC;AACA;AACA;AACA;AACA,2BAAa;AACb,YAAY,UAAU,2BAAa;AACnC,2CAA2C,u1B;;AC3BG;AAC9C;AACA;AACA;AACO,MAAM,qBAAU,SAAS,YAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA,kDAAkD,OAAO;AACzD;AACA;AACA,mCAAmC,qBAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA,IAAI,qBAAU;AACd,IAAI,YAAY,eAAe,qBAAU;AACzC;AACA,2CAA2C,2mD;;AClDU;AACX;AACF;AACc;AACxB;AACM;AACF;AACU;AACE;AACE;AACN;AAC1C,2CAA2C,2vsC;AAC/B,yBAAyB,kDAAO;AACvC;AACA;AACA;AACA,CAAC;AACM,mBAAmB,kDAAO;AACjC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,kCAAkC,kDAAO;AAChD;AACA;AACA;AACA,CAAC;AACM,0BAA0B,kDAAO;AACxC;AACA;AACA;AACA,CAAC;AACM,yBAAyB,kDAAO;AACvC;AACA;AACA;AACA,CAAC;AACM,4BAA4B,kDAAO;AAC1C;AACA;AACA;AACA,CAAC;AACM,gBAAgB,kDAAO;AAC9B;AACA;AACA;AACA,CAAC;AACM,eAAe,kDAAO;AAC7B;AACA;AACA;AACA,CAAC;AACM,kBAAkB,kDAAO;AAChC;AACA;AACA;AACA,CAAC;AACM,iBAAiB,kDAAO;AAC/B;AACA;AACA;AACA,CAAC;AACM,eAAe,kDAAO;AAC7B;AACA;AACA;AACA,CAAC;AACM,cAAc,kDAAO;AAC5B;AACA;AACA;AACA,CAAC;AACM,gBAAgB,kDAAO;AAC9B;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,kBAAkB,kDAAO;AAChC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,yBAAyB,kDAAO;AACvC;AACA;AACA;AACA,CAAC;AACM,0BAA0B,kDAAO;AACxC;AACA;AACA;AACA,CAAC;AACM,kBAAkB,kDAAO;AAChC;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,mBAAmB,kDAAO;AACjC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,wBAAwB,kDAAO;AACtC;AACA;AACA;AACA,CAAC;AACM,4BAA4B,kDAAO;AAC1C;AACA;AACA;AACA,CAAC;AACM,2BAA2B,kDAAO;AACzC;AACA;AACA;AACA,CAAC;AACM,oBAAoB,kDAAO;AAClC;AACA;AACA;AACA,CAAC;AACM,+BAA+B,kDAAO;AAC7C;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,iBAAiB,kDAAO;AAC/B;AACA;AACA;AACA,CAAC;AACM,2BAA2B,kDAAO;AACzC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,0BAA0B,kDAAO;AACxC;AACA;AACA;AACA,CAAC;AACM,wBAAwB,kDAAO;AACtC;AACA;AACA;AACA,CAAC;AACM,oBAAoB,kDAAO;AAClC;AACA;AACA;AACA,CAAC;AACM,cAAc,kDAAO;AAC5B;AACA;AACA;AACA,CAAC;AACM,iBAAiB,kDAAO;AAC/B;AACA;AACA;AACA,CAAC;AACM,WAAW,kDAAO;AACzB;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,eAAe,kDAAO;AAC7B;AACA;AACA;AACA,CAAC;AACM,oBAAoB,kDAAO;AAClC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,eAAe,kDAAO;AAC7B;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,eAAe,kDAAO;AAC7B;AACA;AACA;AACA,CAAC;AACM,eAAe,kDAAO;AAC7B;AACA;AACA;AACA,CAAC;AACM,kBAAkB,kDAAO;AAChC;AACA;AACA;AACA,CAAC;AACM,wBAAwB,kDAAO;AACtC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,yBAAyB,kDAAO;AACvC;AACA;AACA;AACA,CAAC;AACM,yBAAyB,kDAAO;AACvC;AACA;AACA;AACA,CAAC;AACM,wBAAwB,kDAAO;AACtC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,kBAAkB,kDAAO;AAChC;AACA;AACA;AACA,CAAC;AACM,oBAAoB,kDAAO;AAClC;AACA;AACA;AACA,CAAC;AACM,wBAAwB,kDAAO;AACtC;AACA;AACA;AACA,CAAC;AACM,2BAA2B,kDAAO;AACzC;AACA;AACA;AACA,CAAC;AACM,8BAA8B,kDAAO;AAC5C;AACA;AACA;AACA,CAAC;AACM,8BAA8B,kDAAO;AAC5C;AACA;AACA;AACA,CAAC;AACM,yBAAyB,kDAAO;AACvC;AACA;AACA;AACA,CAAC;AACM,mBAAmB,kDAAO;AACjC;AACA;AACA;AACA,CAAC;AACM,qBAAqB,kDAAO;AACnC;AACA;AACA;AACA,CAAC;AACM,mBAAmB,kDAAO;AACjC;AACA;AACA;AACA,CAAC;AACM,wBAAwB,kDAAO;AACtC;AACA;AACA;AACA,CAAC;AACM,2BAA2B,kDAAO;AACzC;AACA;AACA;AACA,CAAC;AACM,mBAAmB,kDAAO;AACjC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,yBAAyB,kDAAO;AACvC;AACA;AACA;AACA,CAAC;AACM,8BAA8B,kDAAO;AAC5C;AACA;AACA;AACA,CAAC;AACM,2BAA2B,kDAAO;AACzC;AACA;AACA;AACA,CAAC;AACM,iCAAiC,kDAAO;AAC/C;AACA;AACA;AACA,CAAC;AACM,sBAAsB,kDAAO;AACpC;AACA;AACA;AACA,CAAC;AACM,oBAAoB,kDAAO;AAClC;AACA;AACA;AACA,CAAC;AACM,wBAAwB,kDAAO;AACtC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,mBAAmB,kDAAO;AACjC;AACA;AACA;AACA,CAAC;AACM,yBAAyB,kDAAO;AACvC;AACA;AACA;AACA,CAAC;AACM,kBAAkB,kDAAO;AAChC;AACA;AACA;AACA,CAAC;AACM,uBAAuB,kDAAO;AACrC;AACA;AACA;AACA,CAAC;AACM,gBAAgB,kDAAO;AAC9B;AACA;AACA;AACA,CAAC;AACM,8BAA8B,kDAAO;AAC5C;AACA;AACA;AACA,CAAC;AACM,gBAAgB,kDAAO;AAC9B;AACA;AACA;AACA,CAAC;AACM,WAAW,kDAAO;AACzB;AACA;AACA;AACA,CAAC;AACM,eAAe,kDAAO;AAC7B;AACA;AACA;AACA,CAAC;AACD,2CAA2C,urkB;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7epC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,me;;ACnB3C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,2CAA2C,+hG;;ACvG3C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+nE;;;;;AC9DP;AACO;AACpC,MAAM,6BAAc,SAAS,OAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,wBAAQ;AACtD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+8C;;AC7DO;AACP;AACpC,MAAM,2BAAa,SAAS,6BAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wBAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,wBAAQ,uBAAuB,oBAAoB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,m2D;;ACpEK;AACzC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACO,MAAM,uBAAW,SAAS,2BAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,iBAAiB;AACncAAc,OAAO;AACrB;AACA,uBAAW;AACX;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mCAAmC,KAAK;AACxC;AACA,IAAI,uBAAW;AACf;AACA,gDAAgD;AAChD;AACA,kDAAkD,EAAE,uBAAW,mDAAmD;AAClH;AACA;AACA,CAAC;AACD,2CAA2C,uqL;;;;;ACnNL;AACQ;AACE;AACzC,MAAM,2BAAa,SAAS,2BAAa;AAChD;AACA;AACA;AACA;AACA,eAAe,2BAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,6BAA6B;AACrG;AACA;AACA;AACA,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2tD;;;;;;;;;;;;;;ACnD3C,cAAc,SAAI,IAAI,SAAI;AAC1B;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACA;AAC2C;AACd;AACoB;AACX;AACK;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAI;AACjB;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,uDAAuD,kBAAkB,qBAAqB;AAC9F;AACA;AACA;AACA;AACA,0DAA0D,OAAO;AACjkCAAkC,qBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6BAA6B,uBAAU;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+BAAe;AAC1C;AACA,wDAAwD,OAAO;AAC/D;AACA,iLAAiL,oBAAI;AACrL;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6BAA6B,uBAAU;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA0B;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,oDAAoD,cAAc,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA,4CAA4C,QAAQ,oCAAoC,GAAG;AAC3F;AACA;AACA;AACA,gCAAgC,kBAAG;AACnC;AACA;AACA;AACA,kCAAkC,kBAAG;AACrC;AACA;AACA;AACA;AACA;AACA,uDAAuD,oBAAoB,gVAAgV,EAAE;AAC7Z;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAe,yBAAyB,QAAQ;AACtE;AACA;AACA;AACA;AACA,2CAA2C,ulgB;;AC7gBP;AACN;AACQ;AACI;AACA;AACG;AACtC,MAAM,uBAAW,SAAS,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAI;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gCAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gCAA6B;AACrD;AACA;AACA;AACA;AACA,YAAY,0BAAU;AACtB,8BAA8B,0BAAU,oCAAoC;AAC5E,aAAa;AACb;AACA,SAAS;AACT,6BAA6B,uBAAU;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAmB,oEAAoE,OAAO;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,+BAAe;AACxC,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gCAAgC,oBAAiB;AACjD;AACA;AACA,2CAA2C,21H;;ACrH3C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,2CAA2C,uX;;ACV3C,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACgD;AACV;AACK;AACpC,MAAM,eAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,uBAAuB,wBAAQ;AAC/B;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,4BAA4B,eAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,gCAAgC,wBAAQ,sBAAsB,oBAAoB;AAClF;AACA;AACA;AACA,IAAI,UAAU;AACd,GAAG,eAAO;AACV;AACA,IAAI,UAAU;AACd,GAAG,eAAO;AACV,2CAA2C,u5D;;;;;AC5E3C,IAAI,eAAU,IAAI,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACoC;AAC0B;AACd;AACL;AACL;AAC/B,MAAM,aAAM,SAAS,eAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,MAAM;AAChE;AACA,uBAAuB,MAAM;AAC7B,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,mCAAmC,cAAc;AACjD;AACA,sBAAsB,wBAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2CAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,eAAU;AACV,IAAI,UAAU;AACd,GAAG,aAAM;AACT,2CAA2C,mhP;;ACrU3C,IAAI,aAAU,IAAI,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACgD;AACd;AAC3B,MAAM,SAAI,SAAS,aAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAU;AACV,IAAI,UAAU;AACd,GAAG,SAAI;AACP,aAAU;AACV,IAAI,UAAU;AACd,GAAG,SAAI;AACP,aAAU;AACV,IAAI,UAAU;AACd,GAAG,SAAI;AACP,2CAA2C,2uC;;ACxD3C,IAAI,aAAU,IAAI,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AAC8B;AACI;AACc;AACzC,MAAM,SAAI,SAAS,aAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAU;AACV,IAAI,UAAU;AACd,GAAG,SAAI;AACP,aAAU;AACV,IAAI,UAAU;AACd,GAAG,SAAI;AACP,aAAU;AACV,IAAI,UAAU;AACd,GAAG,SAAI;AACP,2CAA2C,m7C;;ACrEL;AACA;AACF;AACc;AACF;AACS;AACT;AACJ;AACR;AACF;AACJ;AACA;AACC;AAC/B,2CAA2C,u2B;;;;;;;;;;;;;;;;;;;;ACbpC;AACP,2CAA2C,uN;;ACDpC;AACP,2CAA2C,2P;;ACDpC;AACP;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,2CAA2C,unC;;ACd3C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mvD;;AChF3C;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA,C;;ACbe,wDAAc,EAAE,UAAU,EAAE,eAAe,EAAE,gBAAgB,EAAE,UAAU,GAAG,yCAAyC,E;;ACArG;;AAE/B;AACA,qCAAqC,KAAK;AAC1C;;AAEe,iEAAQ,E;;ACNc;AACrC;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,WAAC,KAAK,CAAC,WAAC,OAAO,GAAG,WAAC;AAC5B,kBAAkB,WAAC;AACnB;;AAEA;AACA;AACA;AACA;AACA,ygBAAygB;AACzgB;AACA;AACA;AACA;;AAEA,OAAO,oBAAQ;AACf;AACA;;AAEA;AACA;;AAEe,mEAAS,E;;AC7BG;AACY;;AAEvC;AACA;AACA,+CAA+C,GAAG,IAAI;;AAEtD;AACA,kCAAkC;;AAElC;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA,SAAS,qBAAS;AAClB;;AAEe,qDAAE,E;;ACvBS;AAC1B,MAAM,SAAI,GAAG,cAAE;AACC;AAChB,2CAA2C,2Q;;ACH3C;AACA;AACO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,uCAAuC,KAAK,GAAG,KAAK;AACpD;AACA;AACA;AACA,yCAAyC,oBAAoB,sBAAsB,qBAAqB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2/D;;AClD3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,IAAI;AACtB;AACA;AACA;AACA,2CAA2C,2Z;;ACdR;AACL;AACA;AACQ;AACR;AACY;AACU;AACpD,2CAA2C,ugB;;;;;;;;;;;;;;;;;;ACPpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,++C;;ACnCS;AAC7C,MAAM,qCAAkB,SAAS,eAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,MAAM,OAAO,2BAA2B,GAAG,yBAAyB;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB,GAAG,cAAc;AACtF,mBAAmB,aAAa;AAChC,2BAA2B,uBAAuB;AAClD;AACA,0CAA0C,aAAa,GAAG,cAAc;AACxE,mCAAmC,YAAY,GAAG,cAAc;AAChE;AACA;AACA;AACA;AACA;AACA,2CAA2C,m0D;;AChCS;AAC7C,MAAM,qCAAkB,SAAS,eAAe;AACvD;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA,2CAA2C,+a;;ACVS;AAC7C,MAAM,mCAAiB,SAAS,eAAe;AACtD;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA,2CAA2C,2a;;ACVS;AAC7C,MAAM,2BAAa,SAAS,eAAe;AAClD;AACA;AACA;AACA;AACA,2CAA2C,+V;;ACNS;AACM;AACA;AACF;AACR;AAChD,2CAA2C,2a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLpC;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+lD;;;;;;;;ACtEb;AAC0B;AACX;AACtC,MAAM,uBAAW,SAAS,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA,iDAAiD,IAAI;AACrD;AACA;AACA,uCAAuC,0BAAU;AACjD,2CAA2C,0BAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,iBAAM;AACpE;AACA;AACA;AACA;AACA;AACA,wDAAwD,kBAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAQ;AAC9C,YAAY,mBAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,UAAU;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,0DAA0D,KAAK;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0DAA0D;AAC1D;AACA;AACA,aAAa,EAAE,sBAAsB,iCAAiC,2BAA2B,iBAAiB,uBAAuB,0BAA0B;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB;AACvB;AACA;AACA;AACA,oCAAoC,SAAS,iDAAiD;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS,yBAAyB;AAClE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2uS;;;;;ACrRT;AACK;AACQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,mBAAS,SAAS,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,IAAI;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA,mBAAS,yCAAyC,mBAAS;AAC3D;AACA;AACA;AACA,CAAC;AACD,mBAAS,uCAAuC,mBAAS;AACzD;AACA;AACA;AACA,CAAC;AACD,mBAAS,yCAAyC,mBAAS;AAC3D;AACA;AACA;AACA,CAAC;AACD,mBAAS,uCAAuC,mBAAS;AACzD,CAAC;AACD,mBAAS,2CAA2C,mBAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAS,mCAAmC,mBAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAS,mCAAmC,mBAAS;AACrD;AACA;AACA;AACA;AACA;AACA,mEAAmE,KAAK;AACxE;AACA,CAAC;AACD,mBAAS,mCAAmC,mBAAS;AACrD;AACA,gCAAgC,eAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,SAAS,eAAI;AACd,mBAAS,2CAA2C,mBAAS;AAC7D;AACA,gCAAgC,4BAAQ;AACxC;AACA;AACA,0BAA0B,4BAAQ;AAClC;AACA,CAAC,aAAa,4BAAQ;AACtB,mBAAS,6CAA6C,mBAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,mBAAS,+CAA+C,mBAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,2CAA2C,+0M;;ACtIL;AAC/B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACO,MAAM,mBAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mCAAmC;AAC3F;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,OAAO;AACtB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,8DAA8D,kCAAkC;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC,qBAAqB,0BAA0B;AAClH;AACA;AACA,mBAAS;AACT,2CAA2C,+3G;;AC3HsB;AACxB;AAClC,MAAM,mCAAiB,SAAS,mBAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC,uBAAuB,uBAAuB;AAC9C,iBAAiB,eAAe;AAChC,uBAAuB,uBAAuB;AAC9C,iBAAiB,eAAe;AAChC,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAS,uBAAuB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAS,uBAAuB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,2CAA2C,uzE;;AClEsB;AAC1D;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AAClC,MAAM,+BAAe,SAAS,mBAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAAe;AACf,2CAA2C,2jC;;ACtC3C,cAAc,SAAI,IAAI,SAAI;AAC1B;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACA;AAC4F;AAChD;AACH;AACD;AACgB;AACJ;AACZ;AACe;AAChD,MAAM,qBAAU,SAAS,uBAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0BAAU;AAC5C,oCAAoC,0BAAU;AAC9C,oCAAoC,0BAAU;AAC9C,mCAAmC,0BAAU;AAC7C,4CAA4C,0BAAU;AACtD,oCAAoC,0BAAU;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA,sCAAsC,eAAI;AAC1C;AACA;AACA,sCAAsC,eAAI;AAC1C;AACA;AACA,sCAAsC,iBAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,eAAe,WAAW;AAC1B;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA,yCAAyC,mCAAiB;AAC1D,4CAA4C,+BAAe;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAW;AAClC;AACA,uBAAuB,wBAAa;AACpC;AACA,uBAAuB,wBAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yCAAyC;AAC5E;AACA;AACA,uCAAuC,wBAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wBAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gCAAgC;AAC/C;AACA;AACA,sCAAsC,wBAAQ;AAC9C;AACA;AACA;AACA,8FAA8F,aAAa,oEAAoE;AAC/K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA,oCAAoC,MAAM;AAC1C,6CAA6C,UAAU,oCAAoC,SAAS,2PAA2P,GAAG;AAClW;AACA;AACA,qBAAU,mCAAmC,qBAAU;AACvD;AACA;AACA;AACA;AACA,cAAc,qBAAU;AACxB,4CAA4C,mCAAiB;AAC7D;AACA,4BAA4B,mBAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iDAAiD,mCAAiB;AAClE;AACA,iCAAiC,mBAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6CAA6C,mCAAiB;AAC9D;AACA,6BAA6B,mBAAS;AACtC;AACA;AACA,kCAAkC,mBAAS,uBAAuB;AAClE;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,2CAA2C,mBAAS,uBAAuB;AAC3E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+9V;;AChSC;AACH;AACY;AAC9C,MAAM,6BAAc,SAAS,uBAAW;AAC/C;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA,yCAAyC,kBAAO;AAChD;AACA;AACA;AACA;AACA;AACA,eAAe,yBAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA,2CAA2C,2sC;;ACtCyB;AAC5B;AACjC,MAAM,2BAAa,SAAS,+BAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mBAAS;AACvC;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA,mCAAmC,mBAAS;AAC5C;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU,2BAAa,KAAK,GAAG,qBAAqB,IAAI;AACtF;AACA;AACA,2CAA2C,u+G;;;;;ACrFyB;AAC5B;AACG;AACpC,MAAM,yBAAY,SAAS,+BAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAS;AACxC,sBAAsB,mBAAS;AAC/B;AACA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA,0BAA0B,wBAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAS;AACrB,YAAY,mBAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAS;AAC5C;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAS;AACzB,gBAAgB,mBAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU,yBAAY,KAAK,GAAG,iBAAiB,GAAG,qBAAqB,IAAI;AACzG;AACA;AACA,2CAA2C,u+I;;AChGyB;AAC5B;AACjC,MAAM,yBAAY,SAAS,+BAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mBAAS;AACxC,sBAAsB,mBAAS;AAC/B;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mBAAS;AACrB,YAAY,mBAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,mCAAmC,mBAAS;AAC5C;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAS;AACzB,gBAAgB,mBAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,UAAU,yBAAY,KAAK,GAAG,qBAAqB,IAAI;AACrF;AACA;AACA,2CAA2C,upH;;ACvFH;AACE;AACQ;AACF;AACF;AACA;AACU;AACb;AACC;AACrC,MAAM,yBAAY;AACzB;AACA;AACA;AACA,oBAAoB,mBAAS;AAC7B,8BAA8B,mBAAS;AACvC,qCAAqC,mBAAS;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAe,wCAAwC,IAAI;AACrF;AACA,SAAS;AACT;AACA,sBAAsB,qBAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAU;AAC9B,uBAAuB,qBAAU;AACjC;AACA;AACA;AACA,2BAA2B,6BAAc;AACzC;AACA;AACA,0EAA0E,qBAAU;AACpF,2BAA2B,qBAAU;AACrC;AACA;AACA;AACA,0DAA0D,IAAI;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,WAAW;AACzD;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC,yBAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,0CAA0C,mCAAiB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2BAAa;AAC9B,2BAA2B,2BAAa;AACxC,iBAAiB,yBAAY;AAC7B,2BAA2B,yBAAY;AACvC,iBAAiB,yBAAY;AAC7B;AACA;AACA,2BAA2B,yBAAY;AACvC;AACA;AACA,mEAAmE,IAAI;AACvE;AACA;AACA;AACA,2CAA2C,mpM;;AC5I3C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uuD;;;;;;;;;;;AChFC;AACF;AACJ;AACQ;AACV;AACA;AACM;AACJ;AAC/B,MAAM,mBAAS,SAAS,gBAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mBAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA;AACA;AACA,kBAAkB,mBAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,qBAAU;AAC9E,mDAAmD,qBAAU;AAC7D;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAqB;AACrD;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gCAAgC,uBAAW;AAC3C,0BAA0B,uBAAoB;AAC9C;AACA;AACA,0BAA0B,2BAAwB;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAAuB,uCAAuC,oBAAoB,cAAc;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0BAAuB,uCAAuC,oBAAoB,aAAa;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAmB;AAC3C;AACA,gEAAgE,OAAO;AACvE;AACA,6BAA6B,uBAAU,kCAAkC,uBAAU;AACnF;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2CAA2C,2rQ;;ACpQyB;AAC7D,MAAM,uCAAmB,SAAS,+BAAe;AACxD;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2lB;;AClBH;AACJ;AACW;AACS;AACV;AACsB;AACtB;AACA;AACF;AACI;AACN;AACQ;AACU;AACpB;AACyB;AACjE,2CAA2C,+/B;;;;;;;ACf3C;AAAA;AAAuD;AACvD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,wBAAwB,2EAAU;AAClC;AACA;AACA;AACA,yBAAyB,2EAAU;AACnqG;;;;;;;AC7L3C;AAAA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,cAAc;AACtD;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe,EAAE,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,2CAA2C,+6H;;;;;;;AC9H3C;AAAA;AAAA;AAA8D;AACvD;AACP,oBAAoB,kFAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,CAAC;AACD,2CAA2C,mgC;;;;;;;ACnB3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkB,SAAI,IAAI,SAAI;AAC9B;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,cAAc,SAAI,IAAI,SAAI;AAC1B;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACsC;AACgB;AACa;AACV;AACjB;AACF;AACJ;AAC+C;AACpB;AAC4B;AACzF;AACO,4BAA4B,8CAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,0DAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA6C,YAAY,IAAI;AAC7D,iCAAiC;AACjC;;AAEA;AACA,mEAAmE,YAAY;AAC/E;AACA,oBAAoB;;AAEpB;AACA,yDAAyD,YAAY;AACrE;AACA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA,0DAA0D,YAAY;AACtE;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,oDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qDAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8CAAQ;AAC3C;AACA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,0CAAI,KAAK,4CAAM;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAU;AAC3C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,GAAG,6BAA6B;AACjE;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,aAAa,qEAAqE;AAC3I;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ;AAC9B;AACA;AACA;AACA,wBAAwB,kDAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qDAAU;AAC9C,0EAA0E,mBAAmB;AAC7F;AACA;AACA,SAAS;AACT,6BAA6B,qDAAU;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAe;AACzC;AACA;AACA,uBAAuB,qDAAqB;AAC5C,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAe;AACzC;AACA;AACA,uBAAuB,UAAU;AACjC,2BAA2B,sDAAsB;AACjD;AACA;AACA,uBAAuB,sDAAsB;AAC7C,4BAA4B,cAAc;AAC1C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sDAAe;AAC7C;AACA,uBAAuB,UAAU;AACjC,2BAA2B,sDAAsB;AACjD;AACA;AACA,2BAA2B,sDAAsB;AACjD;AACA;AACA,uBAAuB,qDAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,iCAAiC,qDAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ;AAC9B;AACA,oCAAoC,YAAY;AAChD,mBAAmB,QAAQ;AAC3B;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAe;AACxD;AACA,gDAAgD,YAAY;AAC5D;AACA;AACA,iDAAiD,uDAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ;AAC9B;AACA;AACA,0BAA0B,yDAAkB;AAC5C;AACA,4BAA4B,qDAAqB;AACjD;AACA;AACA,+BAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,+CAA+C;AAC/C;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,aAAa,gBAAgB;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yDAAkB;AAC5C;AACA;AACA,0BAA0B,wDAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAQ;AACjC;AACA;AACA,0BAA0B,wDAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+BAA+B,GAAG,kDAAI,GAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAQ;AAC9B;AACA,sBAAsB,yDAAkB;AACxC;AACA;AACA;AACA;AACA,oCAAoC,oDAAW;AAC/C;AACA,sBAAsB,sDAAe;AACrC;AACA;AACA,4BAA4B,iDAAiB,EAAE,wBAAwB;AACvE;AACA,SAAS;AACT;AACA;AACA;AACA,sBAAsB,sDAAe;AACrC;AACA;AACA,4BAA4B,8CAAc,EAAE,qBAAqB;AACjE;AACA,SAAS;AACT;AACA;AACA,iDAAiD,+CAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sDAAe;AACrC;AACA,mCAAmC,sBAAsB,SAAS,oCAAoC,qBAAqB;AAC3H;AACA,sCAAsC,uDAAuD;AAC7F;AACA;AACA,YAAY,wDAAa;AACzB,sBAAsB,wDAAa;AACnC;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA,+BAA+B,WAAW,UAAU,cAAc,WAAW;AAC7E;AACA;AACA;AACA;AACA;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA,2BAA2B,sDAAe;AAC1C,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI,GAAG,aAAa;AACjD;AACA,sCAAsC;AACtC;AACA;AACA;AACA,4BAA4B,2CAAW;AACvC;AACA,SAAS;AACT;AACA;AACA;AACA,4BAA4B,oDAAoB,EAAE,kCAAkC;AACpF;AACA,SAAS;AACT;AACA;AACA,0DAA0D,oDAAoB,EAAE,qBAAqB;AACrG;AACA;AACA,6BAA6B,sDAAsB,EAAE,WAAW;AAChE;AACA;AACA,6BAA6B,uDAAuB,EAAE,kCAAkC;AACxF;AACA;AACA;AACA,yBAAyB,sDAAQ;AACjC,0DAA0D,mBAAmB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oDAAW;AACvC;AACA,gDAAgD,oDAAW;AAC3D;AACA;AACA;AACA,6BAA6B,qDAAU;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAuB,EAAE,6DAA6D;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAQ;AACjC,4DAA4D,mBAAmB;AAC/E;AACA;AACA;AACA;AACA,6BAA6B,yDAAyB;AACtD;AACA,6BAA6B,qDAAU;AACvC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6BAA6B,mDAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO,GAAG,sDAAQ;AACjC,2BAA2B,8DAAgB;AAC3C;AACA,oCAAoC,YAAY;AAChD,iCAAiC,uDAAS;AAC1C;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uDAAuB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,oDAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4CAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sBAAsB;AAChD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kDAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,wDAAwB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAU;AACd;AACA,2CAA2C,+vqC;;;;;;;ACpkC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACX;AACwB;AAC3B;AACkB;AACZ;AACxC;AACA;AACO,mCAAmC,8CAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,wBAAwB,kDAAI;AAC5B,mCAAmC,0DAAY,gBAAgB,0DAAY;AAC3E;AACA;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gDAAe;AAC/C,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,yBAAyB,yEAAyE;AAClG;AACA,uBAAuB,6DAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,oDAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,oDAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oEAAa;AACpC;AACA,4GAA4G,0DAAY;AACxH;AACA;AACA;AACA,gHAAgH,0DAAY;AAC5H,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,m0M;;;;;;;;;;;;;;;;;;;;;;;;ACtK3C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,2CAA2C,mhD;;;;;;;;;;;;;;ACzE3C,cAAc,SAAI,IAAI,SAAI;AAC1B;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACgD;AACjB;AACY;AACpC,MAAM,aAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAM;AACrB,mBAAmB,OAAO;AAC1B;AACA;AACA,6EAA6E,qDAAqD,gBAAgB,OAAO,aAAM,oCAAoC,mBAAmB,QAAQ;AAC9N;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD,iBAAiB,gBAAgB,OAAO,aAAM,yCAAyC;AACzI;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAM;AACrB;AACA,iDAAiD,aAAM;AACvD;AACA;AACA;AACA,4BAA4B,aAAM;AAClC;AACA;AACA;AACA,wDAAwD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB,aAAM;AAC1B;AACA,+BAA+B,qCAAU;AACzC,uBAAuB,oBAAI;AAC3B;AACA,qDAAqD,oBAAoB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,8BAA8B;AAC9B,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,aAAM;AACrB;AACA;AACA;AACA;AACA,mBAAmB,qCAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,aAAM;AAC9B,wBAAwB,aAAM;AAC9B,wBAAwB,aAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA,wBAAwB;AACxB;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,mCAAmC,KAAK,mBAAmB,SAAS,gBAAgB,aAAa;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wBAAQ;AACjC;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA,2CAA2C,+5T;;AClPP;AACH;AACK;AACK;AACT;AAClC;AACA;AACA;AACO,MAAM,SAAI,SAAS,KAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,2BAA2B,aAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,2BAA2B,aAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,sBAAsB,yBAAsB;AAC5C;AACA;AACA;AACA,sBAAsB,qBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,sBAAsB,yBAAsB;AAC5C;AACA;AACA;AACA,sBAAsB,qBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,KAAK;AAC3B,sBAAsB,8BAA2B;AACjD;AACA;AACA;AACA,sBAAsB,0BAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,sCAAsC,iBAAM;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,wBAAQ;AAC7C,uEAAuE,mBAAmB;AAC1F;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,u2R;;AClMR;AAC5B;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4CAA4C,QAAQ;AACpD,KAAK;AACL;AACA,6CAA6C,QAAQ;AACrD,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,6CAA6C,QAAQ;AACrD,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,2CAA2C,+9I;;AChGb;AACU;AACjC,MAAM,aAAM,SAAS,SAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAM,YAAY,SAAS;AACzC,2CAA2C,+6C;;AC5Cb;AAC9B;AACA;AACA;AACO,MAAM,iBAAQ,SAAS,SAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+qB;;ACtBT;AACM;AACF;AACK;AACb;AACvB,MAAM,eAAO,SAAS,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,8EAA8E,SAAS;AACvF;AACA;AACA,iCAAiC,SAAI;AACrC,qDAAqD,MAAM;AAC3D;AACA,SAAS;AACT,mBAAmB,iBAAQ;AAC3B;AACA;AACA,mBAAmB,aAAM;AACzB;AACA;AACA,mBAAmB,aAAM;AACzB;AACA;AACA,mBAAmB,aAAM;AACzB;AACA;AACA,mBAAmB,aAAM;AACzB;AACA;AACA,cAAc,eAAO,YAAY,SAAS;AAC1C,2CAA2C,20G;;AC/EP;AACI;AACN;AACJ;AACQ;AACK;AACT;AAClC,2CAA2C,mhB;;;;;;;;;;;;;;;ACPpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uX;;ACZS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,yCAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA,oCAAoC,KAAK,GAAG,MAAM;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,UAAU,iDAAiD,0BAA0B,oCAAoC,GAAG,MAAM;AAC5N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,yCAAoB;AAClC,eAAe,yCAAoB;AACnC,eAAe,yCAAoB;AACnC,cAAc,yCAAoB;AAClC,YAAY,yCAAoB;AAChC,YAAY,yCAAoB;AAChC,aAAa,yCAAoB;AACjC,WAAW,yCAAoB;AAC/B,CAAC;AACD,2CAA2C,upQ;;;;;;;;AC/VmB;AACxB;AACK;AACpC,MAAM,qDAA0B,SAAS,yCAAoB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wBAAQ;AAC9B;AACA,wBAAwB,0BAAuB;AAC/C;AACA;AACA,2EAA2E,mBAAmB;AAC9F;AACA,SAAS;AACT;AACA;AACA,2CAA2C,uyC;;AC1B+B;AACZ;AAC9D,2CAA2C,2P;;;;;;;;;;;;;;;;;ACF3C;AAC+B;AAC/B;AACA;AACA;AACO,MAAM,uBAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAW;AAClC,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uBAAW;AACjC,sBAAsB,uBAAW;AACjC,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,2+L;;ACtHC;AAC5C,2CAA2C,2L;;;;;;;ACD3C;AAAA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+iH;;;;;;;ACxJ3C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAO,CAAC,EAAM;AACzB;AACA;AACA;AACA;AACA,OAAO,uCAAuC;AACE;AAChD,2CAA2C,2qB;;;;;;AClB3C,e;;;;;;ACAA,e;;;;;;ACAA,2CAA2C,uI;;;;;;ACA3C,iCAAiC,+CAA+C,6BAA6B;AAC7G,sB;;;;;;ACDA,sCAAsC,oDAAoD,6BAA6B;AACvH,2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDqC;AACI;AACR;AACI;AACN;AACM;AACJ;AACgB;AACF;AACN;AAC2E;AAC5E;AACsB;AACd;AACpB;AACE;AACM;AACpC;AACA;AACA,yBAAyB,0BAAU;AACnC;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,iBAAiB,IAAI;AACrB,IAAI,sCAAU,EAAE,kCAAQ,EAAE,0CAAY,EAAE,oCAAS,EAAE,wCAAW,EAAE,0BAAI,EAAE,gCAAO,EAAE,8BAAM;AACrF,CAAC;AACD,iBAAiB,sCAAa,2BAA2B,UAAU;AACnE,IAAI,gBAAE;AACN,IAAI,gBAAO;AACX,IAAI,oBAAS;AACb,IAAI,YAAK;AACT,IAAI,gBAAO;AACX,IAAI,UAAI;AACR,IAAI,gBAAO;AACX,IAAI,YAAK;AACT,IAAI,4BAAa;AACjB,IAAI,0BAAY;AAChB,IAAI,0EAAoB;AACxB,IAAI,qDAAa;AACjB,IAAI,uBAAG;AACP,CAAC;AACD,iBAAiB,sBAAS,kCAAkC,YAAY,iBAAiB,GAAG,SAAS;AAC9F;AACP,iEAAiE,KAAK;AACtE;AACO;AACP,+DAA+D,KAAK;AACpE;AACA,2CAA2C,24E;;ACpDb;AACS;AACP;AACW;AACP;AACD;AACP;AACW;AACP;AACW;AACP;AACH;AACP;AACuB;AACP;AACH;AACP;AACG;AACP;AACuB;AACP;AACT;AACP;AACkC;AACd;AACpB;AACU;AACR;AAC6B;AAC3D;AACA;AACA;AAC4D;AAC5D;AACA;AACe,qFAAE,EAAC;AAClB,2CAA2C,upC","file":"baqend.es2015.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { CommunicationError } from '../error';\n/**\n * Checks whether the user uses a browser which does support revalidation.\n */\n// @ts-ignore\nconst REVALIDATION_SUPPORTED = typeof navigator === 'undefined' || (typeof chrome !== 'undefined' && /google/i.test(navigator.vendor)) || (/cros i686/i.test(navigator.platform));\nexport const StatusCode = {\n    NOT_MODIFIED: 304,\n    BAD_CREDENTIALS: 460,\n    BUCKET_NOT_FOUND: 461,\n    INVALID_PERMISSION_MODIFICATION: 462,\n    INVALID_TYPE_VALUE: 463,\n    OBJECT_NOT_FOUND: 404,\n    OBJECT_OUT_OF_DATE: 412,\n    PERMISSION_DENIED: 466,\n    QUERY_DISPOSED: 467,\n    QUERY_NOT_SUPPORTED: 468,\n    SCHEMA_NOT_COMPATIBLE: 469,\n    SCHEMA_STILL_EXISTS: 470,\n    SYNTAX_ERROR: 471,\n    TRANSACTION_INACTIVE: 472,\n    TYPE_ALREADY_EXISTS: 473,\n    TYPE_STILL_REFERENCED: 474,\n    SCRIPT_ABORTION: 475,\n};\nexport class Message {\n    /**\n     * @param args The path arguments\n     */\n    constructor(...args) {\n        this.withCredentials = false;\n        this.progressCallback = null;\n        this._tokenStorage = null;\n        this._responseType = null;\n        let index = 0;\n        let path = this.spec.path[0];\n        const len = this.spec.path.length;\n        for (let i = 1; i < len; i += 1) {\n            if (this.spec.dynamic && len - 1 === i) {\n                path += args[index].split('/').map(encodeURIComponent).join('/');\n            }\n            else {\n                path += encodeURIComponent(args[index]) + this.spec.path[i];\n            }\n            index += 1;\n        }\n        let query = '';\n        for (let i = 0; i < this.spec.query.length; i += 1) {\n            const arg = args[index];\n            index += 1;\n            if (arg !== undefined && arg !== null) {\n                query += (query || path.indexOf('?') !== -1) ? '&' : '?';\n                query += `${this.spec.query[i]}=${encodeURIComponent(arg)}`;\n            }\n        }\n        this.request = {\n            method: this.spec.method,\n            path: path + query,\n            entity: null,\n            headers: {},\n        };\n        if (args[index]) {\n            this.entity(args[index], 'json');\n        }\n        this.responseType('json');\n    }\n    /**\n     * Returns the specification of this message\n     */\n    get spec() { return null; }\n    /**\n     * Creates a new message class with the given message specification\n     * @return A created message object for the specification\n     */\n    static create(specification) {\n        const parts = specification.path.split('?');\n        const path = parts[0].split(/[:*]\\w*/);\n        const query = [];\n        if (parts[1]) {\n            parts[1].split('&').forEach((arg) => {\n                const part = arg.split('=');\n                query.push(part[0]);\n            });\n        }\n        const spec = {\n            path,\n            query,\n            status: specification.status,\n            method: specification.method,\n            dynamic: specification.path.indexOf('*') !== -1,\n        };\n        return class extends Message {\n            get spec() {\n                return spec;\n            }\n        };\n    }\n    /**\n     * Creates a new message class with the given message specification and a full path\n     * @param specification\n     * @param members additional members applied to the created message\n     * @return\n     */\n    static createExternal(specification, members) {\n        const { path } = specification, props = __rest(specification, [\"path\"]);\n        const spec = Object.assign({ dynamic: false, path: [path] }, props);\n        /**\n         * @ignore\n         */\n        const cls = class extends Message {\n            get spec() {\n                return spec;\n            }\n        };\n        Object.assign(cls.prototype, members);\n        return cls;\n    }\n    get isBinary() {\n        return (this.request.type && this.request.type in Message.BINARY) || this._responseType in Message.BINARY;\n    }\n    tokenStorage(value) {\n        if (value === undefined) {\n            return this._tokenStorage;\n        }\n        this._tokenStorage = value;\n        return this;\n    }\n    path(path) {\n        if (path !== undefined) {\n            const queryIndex = this.request.path.indexOf('?') + 1;\n            this.request.path = path + (queryIndex > 0 ? (path.indexOf('?') > -1 ? '&' : '?') + this.request.path.substring(queryIndex) : '');\n            return this;\n        }\n        return this.request.path;\n    }\n    header(name, value) {\n        if (value === null) {\n            delete this.request.headers[name];\n            return this;\n        }\n        if (value !== undefined) {\n            this.request.headers[name] = value;\n            return this;\n        }\n        return this.request.headers[name];\n    }\n    /**\n     * Sets the entity type\n     * @param data - The data to send\n     * @param type - the type of the data one of 'json'|'text'|'blob'|'arraybuffer'\n     * defaults detect the type based on the body data\n     * @return This message object\n     */\n    entity(data, type) {\n        let requestType = type;\n        if (!requestType) {\n            if (typeof data === 'string') {\n                if (/^data:(.+?)(;base64)?,.*$/.test(data)) {\n                    requestType = 'data-url';\n                }\n                else {\n                    requestType = 'text';\n                }\n            }\n            else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n                requestType = 'blob';\n            }\n            else if (typeof Buffer !== 'undefined' && data instanceof Buffer) {\n                requestType = 'buffer';\n            }\n            else if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n                requestType = 'arraybuffer';\n            }\n            else if (typeof FormData !== 'undefined' && data instanceof FormData) {\n                requestType = 'form';\n            }\n            else {\n                requestType = 'json';\n            }\n        }\n        this.request.type = requestType;\n        this.request.entity = data;\n        return this;\n    }\n    mimeType(mimeType) {\n        return this.header('content-type', mimeType);\n    }\n    contentLength(contentLength) {\n        if (contentLength !== undefined) {\n            return this.header('content-length', `${contentLength}`);\n        }\n        return Number(this.header('content-length'));\n    }\n    ifMatch(eTag) {\n        return this.header('If-Match', this.formatETag(eTag));\n    }\n    ifNoneMatch(eTag) {\n        return this.header('If-None-Match', this.formatETag(eTag));\n    }\n    ifUnmodifiedSince(date) {\n        // IE 10 returns UTC strings and not an RFC-1123 GMT date string\n        return this.header('if-unmodified-since', date && date.toUTCString().replace('UTC', 'GMT'));\n    }\n    /**\n     * Indicates that the request should not be served by a local cache\n     * @return\n     */\n    noCache() {\n        if (!REVALIDATION_SUPPORTED) {\n            this.ifMatch('') // is needed for firefox or safari (but forbidden for chrome)\n                .ifNoneMatch('-'); // is needed for edge and ie (but forbidden for chrome)\n        }\n        return this.cacheControl('max-age=0, no-cache');\n    }\n    cacheControl(value) {\n        return this.header('cache-control', value);\n    }\n    acl(acl) {\n        return this.header('baqend-acl', acl && JSON.stringify(acl));\n    }\n    customHeaders(customHeaders) {\n        return this.header('baqend-custom-headers', customHeaders && JSON.stringify(customHeaders));\n    }\n    accept(accept) {\n        return this.header('accept', accept);\n    }\n    responseType(type) {\n        if (type !== undefined) {\n            this._responseType = type;\n            return this;\n        }\n        return this._responseType;\n    }\n    progress(callback) {\n        if (callback !== undefined) {\n            this.progressCallback = callback;\n            return this;\n        }\n        return this.progressCallback;\n    }\n    /**\n     * Adds the given string to the request path\n     *\n     * If the parameter is an object, it will be serialized as a query string.\n     *\n     * @param query which will added to the request path\n     * @return\n     */\n    addQueryString(query) {\n        if (typeof query === 'string') {\n            this.request.path += query;\n            return this;\n        }\n        if (query) {\n            let sep = this.request.path.indexOf('?') >= 0 ? '&' : '?';\n            Object.keys(query).forEach((key) => {\n                this.request.path += `${sep + key}=${encodeURIComponent(query[key])}`;\n                sep = '&';\n            });\n        }\n        return this;\n    }\n    formatETag(eTag) {\n        if (eTag === null || eTag === undefined || eTag === '*') {\n            return eTag;\n        }\n        let tag = `${eTag}`;\n        if (tag.indexOf('\"') === -1) {\n            tag = `\"${tag}\"`;\n        }\n        return tag;\n    }\n    /**\n     * Handle the receive\n     * @param response The received response headers and data\n     * @return\n     */\n    doReceive(response) {\n        if (this.spec.status.indexOf(response.status) === -1) {\n            throw new CommunicationError(this, response);\n        }\n    }\n}\nMessage.StatusCode = StatusCode;\nMessage.BINARY = {\n    blob: true,\n    buffer: true,\n    stream: true,\n    arraybuffer: true,\n    'data-url': true,\n    base64: true,\n};\nexport const OAuthMessages = {\n    Google: Message.createExternal({\n        method: 'OAUTH',\n        path: 'https://accounts.google.com/o/oauth2/auth?response_type=code&access_type=online',\n        query: ['client_id', 'scope', 'state'],\n        status: [200],\n    }, {\n        addRedirectOrigin(baseUri) {\n            this.addQueryString({\n                redirect_uri: `${baseUri}/db/User/OAuth/google`,\n            });\n        },\n    }),\n    Facebook: Message.createExternal({\n        method: 'OAUTH',\n        path: 'https://www.facebook.com/v7.0/dialog/oauth?response_type=code',\n        query: ['client_id', 'scope', 'state'],\n        status: [200],\n    }, {\n        addRedirectOrigin(baseUri) {\n            this.addQueryString({\n                redirect_uri: `${baseUri}/db/User/OAuth/facebook`,\n            });\n        },\n    }),\n    GitHub: Message.createExternal({\n        method: 'OAUTH',\n        path: 'https://github.com/login/oauth/authorize?response_type=code&access_type=online',\n        query: ['client_id', 'scope', 'state'],\n        status: [200],\n    }, {\n        addRedirectOrigin(baseUri) {\n            this.addQueryString({\n                redirect_uri: `${baseUri}/db/User/OAuth/github`,\n            });\n        },\n    }),\n    LinkedIn: Message.createExternal({\n        method: 'OAUTH',\n        path: 'https://www.linkedin.com/oauth/v2/authorization?response_type=code',\n        query: ['client_id', 'scope', 'state'],\n        status: [200],\n    }, {\n        addRedirectOrigin(baseUri) {\n            this.addQueryString({\n                redirect_uri: `${baseUri}/db/User/OAuth/linkedin`,\n            });\n        },\n    }),\n    Twitter: Message.createExternal({\n        method: 'OAUTH',\n        path: '',\n        query: [],\n        status: [200],\n    }, {\n        addRedirectOrigin(baseUri) {\n            this.request.path = `${baseUri}/db/User/OAuth1/twitter`;\n        },\n    }),\n    Salesforce: Message.createExternal({\n        method: 'OAUTH',\n        path: '',\n        query: ['client_id', 'scope', 'state'],\n        status: [200],\n    }, {\n        addRedirectOrigin(baseUri) {\n            this.addQueryString({\n                redirect_uri: `${baseUri}/db/User/OAuth/salesforce`,\n            });\n        },\n    }),\n};\n//# sourceMappingURL=data:application/json;base64,","/* eslint-disable no-restricted-globals */\nimport { PersistentError } from '../error';\nexport class Connector {\n    /**\n     * @param host - the host to connect to\n     * @param port - the port to connect to\n     * @param secure - <code>true</code> for an secure connection\n     * @param basePath - The base path of the api endpoint\n     */\n    constructor(host, port, secure, basePath) {\n        this.host = host;\n        this.port = port;\n        this.secure = secure;\n        this.basePath = basePath;\n        /**\n         * the origin do not contains the base path\n         */\n        this.origin = Connector.toUri(this.host, this.port, this.secure, '');\n        /**\n         * The connector will detect if gzip is supported.\n         * Returns true if supported otherwise false.\n         */\n        this.gzip = false;\n    }\n    /**\n     * Indicates id this connector is usable in the current runtime environment\n     * This method must be overwritten in subclass implementations\n     * @param host - the host to connect to\n     * @param port - the port to connect to\n     * @param secure - <code>true</code> for an secure connection\n     * @param basePath - The base path of the api endpoint\n     * @return <code>true</code> if this connector is usable in the current environment\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static isUsable(host, port, secure, basePath) {\n        return false;\n    }\n    /**\n     * @param host or location\n     * @param port\n     * @param secure=true <code>true</code> for an secure connection\n     * @param basePath The basepath of the api\n     * @return\n     */\n    static create(host, port, secure, basePath) {\n        let h = host;\n        let p = port;\n        let s = secure;\n        let b = basePath;\n        if (typeof location !== 'undefined') {\n            if (!h) {\n                h = location.hostname;\n                p = Number(location.port);\n            }\n            if (s === undefined) {\n                s = location.protocol === 'https:';\n            }\n        }\n        // ensure right type, make secure: true the default\n        s = s === undefined || !!s;\n        if (b === undefined) {\n            b = Connector.DEFAULT_BASE_PATH;\n        }\n        if (h.indexOf('/') !== -1) {\n            const matches = /^(https?):\\/\\/([^/:]+|\\[[^\\]]+])(:(\\d*))?(\\/\\w+)?\\/?$/.exec(h);\n            if (matches) {\n                s = matches[1] === 'https';\n                h = matches[2].replace(/(\\[|])/g, '');\n                p = Number(matches[4]);\n                b = matches[5] || '';\n            }\n            else {\n                throw new Error(`The connection uri host ${h} seems not to be valid`);\n            }\n        }\n        else if (h !== 'localhost' && /^[a-z0-9-]*$/.test(h)) {\n            // handle app names as hostname\n            h += Connector.HTTP_DOMAIN;\n        }\n        if (!p) {\n            p = s ? 443 : 80;\n        }\n        const url = Connector.toUri(h, p, s, b);\n        let connection = this.connections[url];\n        if (!connection) {\n            // check last registered connector first to simplify registering connectors\n            for (let i = this.connectors.length - 1; i >= 0; i -= 1) {\n                const ConnectorConstructor = this.connectors[i];\n                if (ConnectorConstructor.isUsable && ConnectorConstructor.isUsable(h, p, s, b)) {\n                    connection = new ConnectorConstructor(h, p, s, b);\n                    break;\n                }\n            }\n            if (!connection) {\n                throw new Error('No connector is usable for the requested connection.');\n            }\n            this.connections[url] = connection;\n        }\n        return connection;\n    }\n    static toUri(host, port, secure, basePath) {\n        let uri = (secure ? 'https://' : 'http://') + (host.indexOf(':') !== -1 ? `[${host}]` : host);\n        uri += ((secure && port !== 443) || (!secure && port !== 80)) ? `:${port}` : '';\n        uri += basePath;\n        return uri;\n    }\n    /**\n     * @param message\n     * @return\n     */\n    send(message) {\n        let response = { status: 0, headers: {} };\n        return Promise.resolve()\n            .then(() => this.prepareRequest(message))\n            .then(() => new Promise((resolve) => {\n            this.doSend(message, message.request, resolve);\n        }))\n            .then((res) => { response = res; })\n            .then(() => this.prepareResponse(message, response))\n            .then(() => {\n            message.doReceive(response);\n            return response;\n        })\n            .catch((e) => {\n            response.entity = null;\n            throw PersistentError.of(e);\n        });\n    }\n    /**\n     * @param message\n     * @return\n     */\n    prepareRequest(message) {\n        const mimeType = message.mimeType();\n        if (!mimeType) {\n            const { type } = message.request;\n            if (type === 'json') {\n                message.mimeType('application/json;charset=utf-8');\n            }\n            else if (type === 'text') {\n                message.mimeType('text/plain;charset=utf-8');\n            }\n        }\n        this.toFormat(message);\n        let accept;\n        switch (message.responseType()) {\n            case 'json':\n                accept = 'application/json';\n                break;\n            case 'text':\n                accept = 'text/*';\n                break;\n            default:\n                accept = 'application/json,text/*;q=0.5,*/*;q=0.1';\n        }\n        if (!message.accept()) {\n            message.accept(accept);\n        }\n        if (this.gzip) {\n            const ifNoneMatch = message.ifNoneMatch();\n            if (ifNoneMatch && ifNoneMatch !== '\"\"' && ifNoneMatch !== '*') {\n                message.ifNoneMatch(`${ifNoneMatch.slice(0, -1)}--gzip\"`);\n            }\n        }\n        const tokenStorage = message.tokenStorage();\n        if (message.request.path === '/connect') {\n            return tokenStorage.signPath(this.basePath + message.request.path)\n                .then((signedPath) => {\n                // eslint-disable-next-line no-param-reassign\n                message.request.path = signedPath.substring(this.basePath.length);\n                if (message.cacheControl()) {\n                    // eslint-disable-next-line no-param-reassign\n                    message.request.path += `${message.request.path.indexOf('?') !== -1 ? '&' : '?'}BCB`;\n                }\n                return message;\n            });\n        }\n        if (tokenStorage) {\n            const { token } = tokenStorage;\n            if (token) {\n                message.header('authorization', `BAT ${token}`);\n            }\n        }\n        return message;\n    }\n    /**\n     * @param message\n     * @param response The received response headers and data\n     * @return\n     */\n    prepareResponse(message, response) {\n        // IE9 returns status code 1223 instead of 204\n        response.status = response.status === 1223 ? 204 : response.status;\n        let type;\n        const headers = response.headers || {};\n        // some proxies send content back on 204 responses\n        const entity = response.status === 204 ? null : response.entity;\n        if (entity) {\n            type = message.responseType();\n            if (!type || response.status >= 400) {\n                const contentType = headers['content-type'] || headers['Content-Type'];\n                if (contentType && contentType.indexOf('application/json') > -1) {\n                    type = 'json';\n                }\n            }\n        }\n        if (headers.etag) {\n            headers.etag = headers.etag.replace('--gzip', '');\n        }\n        const tokenStorage = message.tokenStorage();\n        if (tokenStorage) {\n            const token = headers['baqend-authorization-token'] || headers['Baqend-Authorization-Token'];\n            if (token) {\n                tokenStorage.update(token);\n            }\n        }\n        return new Promise((resolve) => {\n            resolve(entity && this.fromFormat(response, entity, type));\n        }).then((resultEntity) => {\n            response.entity = resultEntity;\n            if (message.request.path.indexOf('/connect') !== -1 && resultEntity) {\n                this.gzip = !!resultEntity.gzip;\n            }\n        }, (e) => {\n            throw new Error(`Response was not valid ${type}: ${e.message}`);\n        });\n    }\n}\nConnector.DEFAULT_BASE_PATH = '/v1';\nConnector.HTTP_DOMAIN = '.app.baqend.com';\n/**\n * An array of all exposed response headers\n */\nConnector.RESPONSE_HEADERS = [\n    'baqend-authorization-token',\n    'content-type',\n    'baqend-size',\n    'baqend-acl',\n    'etag',\n    'last-modified',\n    'baqend-created-at',\n    'baqend-custom-headers',\n];\n/**\n * Array of all available connector implementations\n */\nConnector.connectors = [];\n/**\n * Array of all created connections\n */\nConnector.connections = {};\n//# sourceMappingURL=data:application/json;base64,","/* this connector will only be choose in browser compatible environments */\n/* eslint no-restricted-globals: [\"off\", \"addEventListener\", \"removeEventListener\"] */\nimport { Connector, } from './Connector';\nimport { atob } from '../util';\nexport class XMLHttpConnector extends Connector {\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static isUsable(host, port, secure, basePath) {\n        return typeof XMLHttpRequest !== 'undefined';\n    }\n    /**\n     * @inheritDoc\n     */\n    doSend(message, request, receive) {\n        if (request.method === 'OAUTH') {\n            if (this.oAuthHandle) {\n                this.oAuthHandle({ status: 409, headers: {}, entity: '{\"message\": \"A new OAuth request was sent.\"}' });\n            }\n            localStorage.removeItem('oauth-response');\n            const handler = (event) => {\n                if (event.key === 'oauth-response' && this.oAuthHandle && event.newValue) {\n                    this.oAuthHandle(JSON.parse(event.newValue));\n                }\n            };\n            this.oAuthHandle = (msg) => {\n                receive(msg);\n                localStorage.removeItem('oauth-response');\n                removeEventListener('storage', handler, false);\n            };\n            addEventListener('storage', handler, false);\n            return;\n        }\n        const xhr = new XMLHttpRequest();\n        const url = this.origin + this.basePath + request.path;\n        xhr.onreadystatechange = () => {\n            // if we receive an error switch the response type to json\n            if (xhr.responseType && xhr.readyState === 2 && xhr.status >= 400) {\n                xhr.responseType = 'text';\n            }\n            if (xhr.readyState === 4) {\n                const response = {\n                    headers: {},\n                    status: xhr.status,\n                    entity: xhr.response || xhr.responseText,\n                };\n                Connector.RESPONSE_HEADERS.forEach((name) => {\n                    response.headers[name] = xhr.getResponseHeader(name) || '';\n                });\n                receive(response);\n            }\n        };\n        // Set the message progress callback\n        if (xhr.upload && message.progress()) {\n            xhr.upload.onprogress = message.progress();\n        }\n        xhr.open(request.method, url, true);\n        const { entity } = request;\n        const { headers } = request;\n        const headerNames = Object.keys(headers);\n        for (let i = 0, len = headerNames.length; i < len; i += 1) {\n            const headerName = headerNames[i];\n            xhr.setRequestHeader(headerName, headers[headerName]);\n        }\n        xhr.withCredentials = message.withCredentials;\n        switch (message.responseType()) {\n            case 'arraybuffer':\n                xhr.responseType = 'arraybuffer';\n                break;\n            case 'blob':\n            case 'data-url':\n            case 'base64':\n                xhr.responseType = 'blob';\n                break;\n            default:\n            // ignore\n        }\n        xhr.send(entity);\n    }\n    /**\n     * @inheritDoc\n     */\n    fromFormat(response, entity, type) {\n        if (type === 'json') {\n            return JSON.parse(entity);\n        }\n        if (type === 'data-url' || type === 'base64') {\n            const reader = new FileReader();\n            reader.readAsDataURL(entity);\n            return new Promise((resolve, reject) => {\n                reader.onload = resolve;\n                reader.onerror = reject;\n            }).then(() => {\n                let { result } = reader;\n                if (type === 'base64' && typeof result === 'string') {\n                    result = result.substring(result.indexOf(',') + 1);\n                }\n                return result;\n            });\n        }\n        return entity;\n    }\n    /**\n     * @inheritDoc\n     */\n    toFormat(message) {\n        let { type } = message.request;\n        if (type) {\n            let { entity } = message.request;\n            let mimeType = message.mimeType();\n            switch (type) {\n                case 'blob':\n                    mimeType = mimeType || entity.type;\n                    break;\n                case 'arraybuffer':\n                case 'form':\n                    break;\n                case 'data-url': {\n                    const match = entity.match(/^data:(.+?)(;base64)?,(.*)$/);\n                    const isBase64 = match[2];\n                    // eslint-disable-next-line prefer-destructuring\n                    entity = match[3];\n                    type = 'blob';\n                    mimeType = mimeType || match[1];\n                    if (!isBase64) {\n                        entity = decodeURIComponent(entity);\n                        break;\n                    }\n                }\n                // fallthrough\n                case 'base64': {\n                    const binaryStr = atob(entity);\n                    const len = binaryStr.length;\n                    const array = new Uint8Array(len);\n                    for (let i = 0; i < len; i += 1) {\n                        array[i] = binaryStr.charCodeAt(i);\n                    }\n                    type = 'blob';\n                    entity = new Blob([array], { type: mimeType });\n                    break;\n                }\n                case 'json':\n                    if (typeof entity !== 'string') {\n                        entity = JSON.stringify(entity);\n                    }\n                    break;\n                case 'text':\n                    break;\n                default:\n                    throw new Error(`Supported request format:${type}`);\n            }\n            message.entity(entity, type).mimeType(mimeType);\n        }\n    }\n}\nConnector.connectors.push(XMLHttpConnector);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiWE1MSHR0cENvbm5lY3Rvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlhNTEh0dHBDb25uZWN0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkVBQTJFO0FBQzNFLHNGQUFzRjtBQUV0RixPQUFPLEVBQ0wsU0FBUyxHQUNWLE1BQU0sYUFBYSxDQUFDO0FBQ3JCLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFHL0IsTUFBTSxPQUFPLGdCQUFpQixTQUFRLFNBQVM7SUFHN0M7O09BRUc7SUFDSCw2REFBNkQ7SUFDN0QsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFZLEVBQUUsSUFBWSxFQUFFLE1BQWUsRUFBRSxRQUFnQjtRQUMzRSxPQUFPLE9BQU8sY0FBYyxLQUFLLFdBQVcsQ0FBQztJQUMvQyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNLENBQUMsT0FBZ0IsRUFBRSxPQUFnQixFQUFFLE9BQWlCO1FBQzFELElBQUksT0FBTyxDQUFDLE1BQU0sS0FBSyxPQUFPLEVBQUU7WUFDOUIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUNwQixJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSw4Q0FBOEMsRUFBRSxDQUFDLENBQUM7YUFDeEc7WUFFRCxZQUFZLENBQUMsVUFBVSxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFFMUMsTUFBTSxPQUFPLEdBQUcsQ0FBQyxLQUFtQixFQUFFLEVBQUU7Z0JBQ3RDLElBQUksS0FBSyxDQUFDLEdBQUcsS0FBSyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLEtBQUssQ0FBQyxRQUFRLEVBQUU7b0JBQ3hFLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztpQkFDOUM7WUFDSCxDQUFDLENBQUM7WUFFRixJQUFJ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","/* this connector will only be choose in browser compatible environments */\n/* eslint no-restricted-globals: [\"off\", \"location\", \"addEventListener\"] */\nimport { Connector } from './Connector';\nimport { XMLHttpConnector } from './XMLHttpConnector';\nexport class IFrameConnector extends XMLHttpConnector {\n    constructor(host, port, secure, basePath) {\n        super(host, port, secure, basePath);\n        this.queue = null;\n        this.connected = false;\n        this.mid = 0;\n        this.messages = {};\n        this.doReceive = this.doReceive.bind(this);\n        addEventListener('message', this.doReceive, false);\n    }\n    /**\n     * Indicates if this connector implementation is usable for the given host and port\n     * @param host\n     * @param port\n     * @param secure\n     * @return\n     */\n    static isUsable(host, port, secure) {\n        // we use location directly here, since there exists environments, which provide a location and a document but\n        // no window object\n        if (typeof location === 'undefined' || typeof document === 'undefined') {\n            return false;\n        }\n        const locationSecure = location.protocol === 'https:';\n        const locationPort = location.port || (locationSecure ? 443 : 80);\n        return location.hostname !== host || locationPort !== port || locationSecure !== secure;\n    }\n    load(path) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = this.origin + this.basePath + path;\n        this.iframe.setAttribute('style', IFrameConnector.style);\n        document.body.appendChild(this.iframe);\n        this.queue = [];\n        this.iframe.addEventListener('load', this.onLoad.bind(this), false);\n    }\n    onLoad() {\n        if (!this.queue) {\n            return;\n        }\n        const { queue } = this;\n        for (let i = 0; i < queue.length; i += 1) {\n            this.postMessage(queue[i]);\n        }\n        this.queue = null;\n    }\n    /**\n     * @inheritDoc\n     */\n    doSend(message, request, receive) {\n        // binary data will be send and received directly\n        if (message.isBinary) {\n            super.doSend(message, request, receive);\n            return;\n        }\n        if (!this.iframe) {\n            this.load(message.request.path);\n            // ensure that we get a local resource cache hit\n            // eslint-disable-next-line no-param-reassign\n            message.request.path = '/connect';\n        }\n        const msg = {\n            mid: this.mid += 1,\n            method: request.method,\n            path: request.path,\n            headers: request.headers,\n            entity: request.entity,\n            responseHeaders: Connector.RESPONSE_HEADERS,\n        };\n        this.messages[msg.mid] = receive;\n        const strMsg = JSON.stringify(msg);\n        if (this.queue) {\n            this.queue.push(strMsg);\n        }\n        else {\n            this.postMessage(strMsg);\n        }\n        if (!this.connected) {\n            setTimeout(() => {\n                if (this.messages[msg.mid]) {\n                    delete this.messages[msg.mid];\n                    receive({\n                        status: 0,\n                        error: new Error('Connection refused.'),\n                        headers: {},\n                    });\n                }\n            }, 10000);\n        }\n    }\n    postMessage(msg) {\n        this.iframe.contentWindow.postMessage(msg, this.origin);\n    }\n    doReceive(event) {\n        if (event.origin !== this.origin || event.data[0] !== '{') {\n            return;\n        }\n        const msg = JSON.parse(event.data);\n        const receive = this.messages[msg.mid];\n        if (receive) {\n            delete this.messages[msg.mid];\n            this.connected = true;\n            receive({\n                status: msg.status,\n                headers: msg.headers,\n                entity: msg.entity,\n            });\n        }\n    }\n}\nIFrameConnector.style = 'width:1px;height:1px;position:absolute;top:-10px;left:-10px;';\nConnector.connectors.push(IFrameConnector);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSUZyYW1lQ29ubmVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiSUZyYW1lQ29ubmVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDJFQUEyRTtBQUMzRSwyRUFBMkU7QUFFM0UsT0FBTyxFQUFFLFNBQVMsRUFBcUIsTUFBTSxhQUFhLENBQUM7QUFDM0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFJdEQsTUFBTSxPQUFPLGVBQWdCLFNBQVEsZ0JBQWdCO0lBaUNuRCxZQUFZLElBQVksRUFBRSxJQUFZLEVBQUUsTUFBZSxFQUFFLFFBQWdCO1FBQ3ZFLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztRQXpCOUIsVUFBSyxHQUFpQixJQUFJLENBQUM7UUFFM0IsY0FBUyxHQUFZLEtBQUssQ0FBQztRQXlCakMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDYixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTNDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUE1QkQ7Ozs7OztPQU1HO0lBQ0gsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFZLEVBQUUsSUFBWSxFQUFFLE1BQWU7UUFDekQsOEdBQThHO1FBQzlHLG1CQUFtQjtRQUNuQixJQUFJLE9BQU8sUUFBUSxLQUFLLFdBQVcsSUFBSSxPQUFPLFFBQVEsS0FBSyxXQUFXLEVBQUU7WUFDdEUsT0FBTyxLQUFLLENBQUM7U0FDZDtRQUVELE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDO1FBQ3RELE1BQU0sWUFBWSxHQUFHLFFBQVEsQ0FBQyxJ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","export const { WebSocket } = window;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vic29ja2V0LWJyb3dzZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJzb2NrZXQtYnJvd3Nlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxHQUFHLE1BQU0sQ0FBQyJ9","import { CommunicationError } from '../error';\nimport { WebSocket } from '../util/websocket';\nimport { Observable } from '../util/observable';\nexport class WebSocketConnector {\n    /**\n     *url\n     */\n    constructor(url) {\n        this.observers = {};\n        this.socket = null;\n        this.url = url;\n    }\n    /**\n     *url The websocket connect script url\n     *a websocket connection\n     */\n    static create(url) {\n        let websocket = this.websockets[url];\n        if (!websocket) {\n            websocket = new WebSocketConnector(url);\n            this.websockets[url] = websocket;\n        }\n        return websocket;\n    }\n    open() {\n        if (!this.socket) {\n            const socket = new WebSocket(this.url);\n            let socketPromise;\n            const handleSocketCompletion = (error) => {\n                // observable error calls can throw an exception therefore cleanup beforehand\n                let isError = false;\n                if (this.socket === socketPromise) {\n                    isError = socket.readyState !== 3;\n                    this.socket = null;\n                }\n                let firstErr = null;\n                Object.keys(this.observers).forEach((id) => {\n                    const observer = this.observers[id];\n                    delete this.observers[id]; // unsubscribe to allow re subscriptions\n                    if (!observer) {\n                        return;\n                    }\n                    try {\n                        if (isError) {\n                            observer.error(new CommunicationError(null, Object.assign({ status: 0, headers: {} }, (error instanceof Error && { error }))));\n                        }\n                        else {\n                            observer.complete();\n                        }\n                    }\n                    catch (e) {\n                        if (!firstErr) {\n                            firstErr = e;\n                        }\n                    }\n                });\n                if (firstErr) {\n                    throw firstErr;\n                }\n            };\n            socket.onerror = handleSocketCompletion;\n            socket.onclose = handleSocketCompletion;\n            socket.onmessage = (event) => {\n                const message = JSON.parse(event.data);\n                message.date = new Date(message.date);\n                const { id } = message;\n                if (!id) {\n                    if (message.type === 'error') {\n                        handleSocketCompletion(message);\n                    }\n                    return;\n                }\n                const observer = this.observers[id];\n                if (observer) {\n                    if (message.type === 'error') {\n                        observer.error(new CommunicationError(null, message));\n                    }\n                    else {\n                        observer.next(message);\n                    }\n                }\n            };\n            socketPromise = new Promise((resolve) => {\n                socket.onopen = resolve;\n            }).then(() => socket);\n            this.socket = socketPromise;\n        }\n        return this.socket;\n    }\n    close() {\n        if (this.socket) {\n            this.socket.then((socket) => {\n                socket.close();\n            });\n            this.socket = null;\n        }\n    }\n    /**\n     *tokenStorage\n     *id subscription ID\n     *The channel for sending and receiving messages\n     */\n    openStream(tokenStorage, id) {\n        const stream = new Observable((observer) => {\n            if (this.observers[id]) {\n                throw new Error('Only one subscription per stream is allowed.');\n            }\n            this.observers[id] = observer;\n            return () => {\n                // cleanup only our subscription and handle re subscription on the same stream id correctly\n                if (this.observers[id] === observer) {\n                    delete this.observers[id];\n                }\n            };\n        });\n        Object.assign(stream, {\n            send: (message) => {\n                this.open().then((socket) => {\n                    const jsonMessage = JSON.stringify(Object.assign(Object.assign({ id }, message), (tokenStorage.token && { token: tokenStorage.token })));\n                    socket.send(jsonMessage);\n                });\n            },\n        });\n        return stream;\n    }\n}\n/**\n * Map of all available connectors to their respective websocket connections\n */\nWebSocketConnector.websockets = {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ViU29ja2V0Q29ubmVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiV2ViU29ja2V0Q29ubmVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUM5QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUMsT0FBTyxFQUFFLFVBQVUsRUFBYyxNQUFNLG9CQUFvQixDQUFDO0FBNkI1RCxNQUFNLE9BQU8sa0JBQWtCO0lBeUI3Qjs7T0FFRztJQUNILFlBQVksR0FBVztRQXRCZixjQUFTLEdBQXlELEVBQUUsQ0FBQztRQUVyRSxXQUFNLEdBQThCLElBQUksQ0FBQztRQXFCL0MsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDakIsQ0FBQztJQWxCRDs7O09BR0c7SUFDSCxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQVc7UUFDdkIsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2QsU0FBUyxHQUFHLElBQUksa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDeEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsR0FBRyxTQUFTLENBQUM7U0FDbEM7UUFDRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBU0QsSUFBSTtRQUNGLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2hCLE1BQU0sTUFBTSxHQUFHLElBQUksU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN2QyxJQUFJLGFBQWlDLENBQUM7WUFFdEMsTUFBTSxzQkFBc0IsR0FBRyxDQUFDLEtBQWtCLEVBQUUsRUFBRTtnQkFDcEQsNkVBQTZFO2dCQUM3RSxJQUFJLE9BQU8sR0FBRyxLQUFLLENBQUM7Z0JBQ3BCLElBQUksSUFBSSxDQUFD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","export { Message, StatusCode, OAuthMessages, } from './Message';\nexport { Connector, } from './Connector';\nexport { FetchConnector } from './FetchConnector';\nexport { XMLHttpConnector } from './XMLHttpConnector';\nexport { IFrameConnector } from './IFrameConnector';\nexport { NodeConnector } from './NodeConnector';\nexport { WebSocketConnector } from './WebSocketConnector';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsT0FBTyxFQUFrRCxVQUFVLEVBQ2hELGFBQWEsR0FDakMsTUFBTSxXQUFXLENBQUM7QUFDbkIsT0FBTyxFQUNxRCxTQUFTLEdBQ3BFLE1BQU0sYUFBYSxDQUFDO0FBQ3JCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxrQkFBa0IsRUFBb0MsTUFBTSxzQkFBc0IsQ0FBQyJ9","import { Acl } from '../Acl';\nimport { Lockable } from '../util';\nimport { PersistentError } from '../error';\nexport var MetadataState;\n(function (MetadataState) {\n    MetadataState[MetadataState[\"UNAVAILABLE\"] = -1] = \"UNAVAILABLE\";\n    MetadataState[MetadataState[\"PERSISTENT\"] = 0] = \"PERSISTENT\";\n    MetadataState[MetadataState[\"DIRTY\"] = 1] = \"DIRTY\";\n})(MetadataState || (MetadataState = {}));\n/**\n * The Metadata instance tracks the state of an object and checks if the object state was changed since last\n * load/update. The metadata keeps therefore the state of:\n * - in which state the object currently is\n * - which db managed the instance\n * - the metadata of the object (id, version, bucket)\n * - which is the owning object (root object) of an embedded object\n *\n * {@link Metadata#get(object)} can be used on any managed object to retrieve the metadata of the root object\n */\nexport class Metadata extends Lockable {\n    /**\n     * @param type\n     */\n    constructor(type) {\n        super();\n        this.entityManager = null;\n        this.decodedKey = null;\n        this.id = null;\n        this.state = MetadataState.DIRTY;\n        this.enabled = true;\n        this.id = null;\n        this.version = null;\n        this.type = type;\n        this.acl = new Acl();\n    }\n    static create(type, db) {\n        if (type.isEntity) {\n            return new Metadata(type);\n        }\n        if (type.isEmbeddable) {\n            return { type, db, setDirty() { } };\n        }\n        throw new Error(`Illegal type ${type}`);\n    }\n    /**\n     * Returns the metadata of the managed object\n     * @param managed\n     * @return\n     */\n    static get(managed) {\n        // eslint-disable-next-line no-underscore-dangle\n        return managed._metadata;\n    }\n    /**\n     * @type EntityManager\n     */\n    get db() {\n        if (this.entityManager) {\n            return this.entityManager;\n        }\n        this.entityManager = require('../baqend').db; // eslint-disable-line global-require\n        return this.entityManager;\n    }\n    /**\n     * @param db\n     */\n    set db(db) {\n        if (!this.entityManager) {\n            this.entityManager = db;\n        }\n        else {\n            throw new Error('DB has already been set.');\n        }\n    }\n    /**\n     * @type string\n     * @readonly\n     */\n    get bucket() {\n        return this.type.name;\n    }\n    /**\n     * @type string\n     * @readonly\n     */\n    get key() {\n        if (!this.decodedKey && this.id) {\n            const index = this.id.lastIndexOf('/');\n            this.decodedKey = decodeURIComponent(this.id.substring(index + 1));\n        }\n        return this.decodedKey;\n    }\n    /**\n     * @param value\n     */\n    set key(value) {\n        const val = `${value}`;\n        if (this.id) {\n            throw new Error('The id can\\'t be set twice.');\n        }\n        this.id = `/db/${this.bucket}/${encodeURIComponent(val)}`;\n        this.decodedKey = val;\n    }\n    /**\n     * Indicates if this object already belongs to an db\n     * <code>true</code> if this object belongs already to an db otherwise <code>false</code>\n     * @type boolean\n     * @readonly\n     */\n    get isAttached() {\n        return !!this.entityManager;\n    }\n    /**\n     * Indicates if this object is represents a db object, but was not loaded up to now\n     * @type boolean\n     * @readonly\n     */\n    get isAvailable() {\n        return this.state > MetadataState.UNAVAILABLE;\n    }\n    /**\n     * Indicates if this object represents the state of the db and was not modified in any manner\n     * @type boolean\n     * @readonly\n     */\n    get isPersistent() {\n        return this.state === MetadataState.PERSISTENT;\n    }\n    /**\n     * Indicates that this object was modified and the object was not written back to the db\n     * @type boolean\n     * @readonly\n     */\n    get isDirty() {\n        return this.state === MetadataState.DIRTY;\n    }\n    /**\n     * Enable/Disable state change tracking of this object\n     * @param newStateTrackingState The new change tracking state\n     * @return\n     */\n    enable(newStateTrackingState) {\n        this.enabled = newStateTrackingState;\n    }\n    /**\n     * Throws the corresponding error if a property is accessed before the owning object is loaded\n     * @throws an exception if the object properties aren't available and the object is enabled\n     */\n    throwUnloadedPropertyAccess(property) {\n        if (this.enabled && !this.isAvailable) {\n            throw new PersistentError(`Illegal property access on ${this.id}#${property} , ensure that this reference is loaded before it's properties are accessed.`);\n        }\n    }\n    /**\n     * Indicates that the associated object isn't available\n     * @return\n     */\n    setUnavailable() {\n        this.state = MetadataState.UNAVAILABLE;\n    }\n    /**\n     * Indicates that the associated object is not stale\n     *\n     * An object is stale if it correlates the database state and is not modified by the user.\n     *\n     * @return\n     */\n    setPersistent() {\n        this.state = MetadataState.PERSISTENT;\n    }\n    /**\n     * Indicates the the object is modified by the user\n     * @return\n     */\n    setDirty() {\n        this.state = MetadataState.DIRTY;\n    }\n    /**\n     * Indicates the the object is removed\n     * @return\n     */\n    setRemoved() {\n        // mark the object only as dirty if it was already available\n        if (this.isAvailable) {\n            this.setDirty();\n            this.version = null;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWV0YWRhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJNZXRhZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzdCLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFHbkMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQWMzQyxNQUFNLENBQU4sSUFBWSxhQUlYO0FBSkQsV0FBWSxhQUFhO0lBQ3ZCLGdFQUFnQixDQUFBO0lBQ2hCLDZEQUFjLENBQUE7SUFDZCxtREFBUyxDQUFBO0FBQ1gsQ0FBQyxFQUpXLGFBQWEsS0FBYixhQUFhLFFBSXhCO0FBRUQ7Ozs7Ozs7OztHQVNHO0FBQ0gsTUFBTSxPQUFPLFFBQVMsU0FBUSxRQUFRO0lBc0pwQzs7T0FFRztJQUNILFlBQVksSUFBcUI7UUFDL0IsS0FBSyxFQUFFLENBQUM7UUF6SlYsa0JBQWEsR0FBeUIsSUFBSSxDQUFDO1FBSTNDLGVBQVUsR0FBa0IsSUFBSSxDQUFDO1FBRWpDLE9BQUUsR0FBa0IsSUFBSSxDQUFDO1FBcUp2QixJQUFJLENBQUMsS0FBSyxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFDakMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDcEIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDZixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksR0FBRyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQS9IRCxNQUFNLENBQUMsTUFBTSxDQUFtQixJQUFvQixFQUFFLEVBQWtCO1FBQ3RFLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixPQUFPLElBQUksUUFBUSxDQUFDLElBQXFCLENBQUMsQ0FBQztTQUM1QztR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","const FallBachValLib = {};\nlet valLib = FallBachValLib;\ntry {\n    // we load this module as an optional external dependency\n    // eslint-disable-next-line global-require\n    valLib = require('validator');\n}\ncatch (e) {\n    // ignore loading optional module error\n}\nexport class Validator {\n    constructor(key, entity) {\n        /**\n         * The cached errors of the validation\n         */\n        this.errors = [];\n        this.key = key;\n        this.entity = entity;\n    }\n    /**\n     * Compiles the given validation code for the managedType\n     * @param managedType The managedType of the code\n     * @param validationCode The validation code\n     * @return the parsed validation function\n     */\n    static compile(managedType, validationCode) {\n        const keys = [];\n        const iter = managedType.attributes();\n        for (let el = iter.next(); !el.done; el = iter.next()) {\n            const attr = el.value;\n            keys.push(attr.name);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-implied-eval,no-new-func\n        const fn = new Function(...keys, validationCode);\n        return function onValidate(argObj) {\n            if (valLib === FallBachValLib) {\n                throw new Error('Validation code will not be executed. Make sure that the validator package is correctly provided as an external dependency.');\n            }\n            const args = keys.map((name) => argObj[name]);\n            return fn.apply({}, args);\n        };\n    }\n    /**\n     * Gets the value of the attribute\n     * @return Value\n     */\n    get value() {\n        return this.entity[this.key];\n    }\n    /**\n     * Checks if the attribute is valid\n     * @return\n     */\n    get isValid() {\n        return this.errors.length === 0;\n    }\n    is(error, fn) {\n        if (error instanceof Function) {\n            return this.is('is', error);\n        }\n        if (fn(this.value, valLib) === false) {\n            this.errors.push(error);\n        }\n        return this;\n    }\n    callMethod(method, errorMessage, argumentList) {\n        const args = argumentList || [];\n        try {\n            args.unshift(this.toStringValue());\n            if (valLib[method].apply(this, args) === false) {\n                this.errors.push(errorMessage || method);\n            }\n        }\n        catch (e) {\n            this.errors.push(errorMessage || e.message);\n        }\n        return this;\n    }\n    toStringValue() {\n        const { value } = this;\n        if (typeof value === 'string' || value instanceof Date) {\n            return value;\n        }\n        return JSON.stringify(value);\n    }\n    toJSON() {\n        return {\n            isValid: this.isValid,\n            errors: this.errors,\n        };\n    }\n}\nconst OTHER_VALIDATORS = ['contains', 'equals', 'matches'];\nObject.keys(valLib).forEach((name) => {\n    if (name.startsWith('is') || OTHER_VALIDATORS.includes(name)) {\n        // use function here to keep the correct this context\n        Validator.prototype[name] = function validate(...args) {\n            const error = typeof args[0] === 'string' ? args.shift() : null;\n            return this.callMethod(name, error, args);\n        };\n    }\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQztBQUMxQixJQUFJLE1BQU0sR0FBOEIsY0FBYyxDQUFDO0FBQ3ZELElBQUk7SUFDRix5REFBeUQ7SUFDekQsMENBQTBDO0lBQzFDLE1BQU0sR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7Q0FDL0I7QUFBQyxPQUFPLENBQUMsRUFBRTtJQUNWLHVDQUF1QztDQUN4QztBQVNELE1BQU0sT0FBTyxTQUFTO0lBK0ZwQixZQUFZLEdBQVcsRUFBRSxNQUFjO1FBcEV2Qzs7V0FFRztRQUNLLFdBQU0sR0FBYSxFQUFFLENBQUM7UUFrRTVCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQWpHRDs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBNkIsRUFBRSxjQUFzQjtRQUNsRSxNQUFNLElBQUksR0FBYSxFQUFFLENBQUM7UUFDMUIsTUFBTSxJQUFJLEdBQUcsV0FBVyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RDLEtBQUssSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ3JELE1BQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUM7WUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdEI7UUFFRCwwRUFBMEU7UUFDMUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxRQUFRLENBQUMsR0FBRyxJQUFJLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDakQsT0FBTyxTQUFTLFVBQVUsQ0FBQyxN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","export class ValidationResult {\n    constructor() {\n        this.fields = {};\n    }\n    /**\n     * Indicates if all fields are valid\n     * @return <code>true</code> if all fields are valid\n     */\n    get isValid() {\n        return Object.keys(this.fields).every((key) => this.fields[key].isValid);\n    }\n    toJSON() {\n        const json = {};\n        Object.keys(this.fields).forEach((key) => {\n            json[key] = this.fields[key].toJSON();\n        });\n        return json;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmFsaWRhdGlvblJlc3VsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlZhbGlkYXRpb25SZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxPQUFPLGdCQUFnQjtJQUE3QjtRQUNTLFdBQU0sR0FBb0MsRUFBRSxDQUFDO0lBaUJ0RCxDQUFDO0lBZkM7OztPQUdHO0lBQ0gsSUFBSSxPQUFPO1FBQ1QsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVELE1BQU07UUFDSixNQUFNLElBQUksR0FBWSxFQUFFLENBQUM7UUFDekIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7WUFDdkMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDeEMsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7Q0FDRiJ9","import * as message from '../message';\nimport { StatusCode } from '../connector';\nimport { Validator } from './Validator';\n/**\n * Representation of a Code which runs on Baqend.\n */\nexport class Code {\n    /**\n     * @param metamodel\n     * @param entityManagerFactory\n     */\n    constructor(metamodel, entityManagerFactory) {\n        this.metamodel = metamodel;\n        this.entityManagerFactory = entityManagerFactory;\n    }\n    /**\n     * Converts the given function to a string\n     * @param fn The JavaScript function to serialize\n     * @return The serialized function\n     */\n    functionToString(fn) {\n        if (!fn) {\n            return '';\n        }\n        let str = fn.toString();\n        str = str.substring(str.indexOf('{') + 1, str.lastIndexOf('}'));\n        if (str.charAt(0) === '\\n') {\n            str = str.substring(1);\n        }\n        if (str.charAt(str.length - 1) === '\\n') {\n            str = str.substring(0, str.length - 1);\n        }\n        return str;\n    }\n    /**\n     * Converts the given string to a module wrapper function\n     * @param signature The expected parameters of the function\n     * @param code The JavaScript function to deserialize\n     * @return The deserialized function\n     */\n    stringToFunction(signature, code) {\n        // eslint-disable-next-line @typescript-eslint/no-implied-eval\n        return new Function(signature /* typings are incorrect here */, code); // eslint-disable-line no-new-func\n    }\n    /**\n     * Loads a list of all available modules without handlers\n     *\n     * @return\n     */\n    loadModules() {\n        const msg = new message.GetAllModules();\n        return this.entityManagerFactory.send(msg)\n            .then((response) => response.entity);\n    }\n    loadCode(type, codeType, asFunction = false) {\n        const bucket = typeof type === 'string' ? type : type.name;\n        const msg = new message.GetBaqendCode(bucket, codeType)\n            .responseType('text');\n        return this.entityManagerFactory.send(msg)\n            .then((response) => this.parseCode(bucket, codeType, asFunction, response.entity), (e) => {\n            if (e.status === StatusCode.OBJECT_NOT_FOUND) {\n                return null;\n            }\n            throw e;\n        });\n    }\n    saveCode(type, codeType, fn) {\n        const bucket = typeof type === 'string' ? type : type.name;\n        const msg = new message.SetBaqendCode(bucket, codeType)\n            .entity(fn instanceof Function ? this.functionToString(fn) : fn, 'text')\n            .responseType('text');\n        return this.entityManagerFactory.send(msg)\n            .then((response) => this.parseCode(bucket, codeType, fn instanceof Function, response.entity));\n    }\n    /**\n     * Deletes Baqend code identified by the given bucket and code type\n     *\n     * @param type The entity type for the handler or the Name of the\n     * Baqend code\n     * @param codeType The type of the code\n     * @return succeed if the code was deleted\n     */\n    deleteCode(type, codeType) {\n        const bucket = typeof type === 'string' ? type : type.name;\n        const msg = new message.DeleteBaqendCode(bucket, codeType);\n        return this.entityManagerFactory.send(msg)\n            .then(() => this.parseCode(bucket, codeType, false, null));\n    }\n    /**\n     * @param bucket\n     * @param codeType\n     * @param [asFunction=false]\n     * @param code\n     * @return\n     * @private\n     */\n    parseCode(bucket, codeType, asFunction, code) {\n        if (codeType === 'validate') {\n            const type = this.metamodel.entity(bucket);\n            type.validationCode = code === null ? null : Validator.compile(type, code);\n            return asFunction ? type.validationCode : code;\n        }\n        return code && asFunction ? this.stringToFunction(['module', 'exports'], code) : code;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLE9BQU8sTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUkxQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLElBQUk7SUFLZjs7O09BR0c7SUFDSCxZQUFZLFNBQW9CLEVBQUUsb0JBQTBDO1FBQzFFLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILGdCQUFnQixDQUFDLEVBQVk7UUFDM0IsSUFBSSxDQUFDLEVBQUUsRUFBRTtZQUNQLE9BQU8sRUFBRSxDQUFDO1NBQ1g7UUFFRCxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDeEIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLEVBQUU7WUFDMUIsR0FBRyxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDeEI7UUFFRCxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBSyxJQUFJLEVBQUU7WUFDdkMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDeEM7UUFFRCxP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","import * as message from '../message';\n/**\n * An executor of Modules running on Baqend.\n */\nexport class Modules {\n    /**\n     * @param entityManager\n     */\n    constructor(entityManager) {\n        this.entityManager = entityManager;\n    }\n    /**\n     * Calls the module, which is identified by the given bucket\n     *\n     * The optional query parameter will be attached as GET-parameters.\n     *\n     * @param bucket Name of the module\n     * @param query GET-Parameter as key-value-pairs or query string\n     * @param options Additional request options\n     * @param options.responseType The type used to provide the response data, defaults to text oder json\n     * depends on the received data, can be one of arraybuffer, blob, json, text, base64, data-url\n     * @param doneCallback\n     * @param failCallback\n     * @return\n     */\n    get(bucket, query, options, doneCallback, failCallback) {\n        if (query instanceof Function) {\n            return this.get(bucket, {}, query, options, doneCallback);\n        }\n        if (options instanceof Function) {\n            return this.get(bucket, query, {}, options, doneCallback);\n        }\n        const opt = options || {};\n        const msg = new message.GetBaqendModule(bucket)\n            .addQueryString(query || '')\n            .responseType(opt.responseType || null);\n        return this.send(msg, doneCallback, failCallback);\n    }\n    /**\n     * Calls the module, which is identified by the given bucket\n     *\n     * @param bucket Name of the module\n     * @param [body] The POST-body data to send\n     * @param options Additional request options\n     * @param options.requestType A optional type hint used to correctly interpret the provided data, can be one\n     * of arraybuffer, blob, json, text, base64, data-url, form\n     * @param options.mimeType The mimType of the body. Defaults to the mimeType of the provided data if\n     * it is a file object, blob or data-url\n     * @param options.responseType The type used to provide the response data, defaults to text oder json\n     * depends on the received data, can be one of arraybuffer, blob, json, text, base64, data-url\n     * @param doneCallback\n     * @param failCallback\n     * @return\n     */\n    post(bucket, body, options, doneCallback, failCallback) {\n        if (typeof options === 'function') {\n            return this.post(bucket, body, {}, options, doneCallback);\n        }\n        const opt = options || {};\n        const msg = new message.PostBaqendModule(bucket)\n            .entity(body, opt.requestType)\n            .mimeType(opt.mimeType || null)\n            .responseType(opt.responseType || null);\n        return this.send(msg, doneCallback, failCallback);\n    }\n    send(msg, doneCallback, failCallback) {\n        return this.entityManager.send(msg)\n            .then((response) => response.entity)\n            .then(doneCallback, failCallback);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kdWxlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1vZHVsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLE9BQU8sTUFBTSxZQUFZLENBQUM7QUFNdEM7O0dBRUc7QUFDSCxNQUFNLE9BQU8sT0FBTztJQUdsQjs7T0FFRztJQUNILFlBQVksYUFBNEI7UUFDdEMsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7SUFDckMsQ0FBQztJQUVEOzs7Ozs7Ozs7Ozs7O09BYUc7SUFDSCxHQUFHLENBQUMsTUFBYyxFQUFFLEtBQXFELEVBQ3ZFLE9BQXdELEVBQUUsWUFBa0IsRUFBRSxZQUFrQjtRQUNoRyxJQUFJLEtBQUssWUFBWSxRQUFRLEVBQUU7WUFDN0IsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxZQUFZLENBQUMsQ0FBQztTQUMzRDtRQUVELElBQUksT0FBTyxZQUFZLFFBQVEsRUFBRTtZQUMvQixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLFlBQVksQ0FBQyxDQUFDO1NBQzNEO1FBRUQsTUFBTSxHQUFHLEdBQUcsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUUxQixNQUFNLEdBQUcsR0FBRyxJQUFJLE9BQU8sQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDO2FBQzVDLGNBQWMsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO2FBQzNCLFlBQVksQ0FBQyxHQUFHLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxDQUFDO1FBRTFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRDs7Ozs7Ozs7Ozs7Ozs7O09BZUc7SUFDSCxJQUFJLENBQUMsTUFBYyxFQUFFLElBQWlCLEVBQUUsT0FDTCxFQUFFLFlBQWtCLEVBQUUsWUFBa0I7UUFDekUsSUFBSSxPQUFPLE9BQU8sS0FBSyxVQUFVLEVBQUU7WUFDakMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLE9BQU8sRUFBRSxZQUFZLENBQUMsQ0FBQztTQUMzRDtRQUVELE1BQU0sR0FBRyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFFMUIsTUFBTSxHQUFHLEdBQUcsSUFBSSxPQUFPLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDO2FBQzdDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLFdBQVcsQ0FBQzthQUM3QixRQUFRLENBQUMsR0FBRyxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7YUFDOUIsWUFBWSxDQUFDLEdBQUcsQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLENBQUM7UUFFMUMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELElBQUksQ0FBQyxHQUFZLEVBQUUsWUFBa0IsRUFBRSxZQUFrQjtRQUN2RCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQzthQUNoQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7YUFDbkMsSUFBSSxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsQ0FBQztJQUN0QyxDQUFDO0NBQ0YifQ==","import * as msg from '../message';\n/**\n * A Logger to store log notes when running the app.\n */\nexport class Logger {\n    constructor() {\n        this.entityManager = null;\n        this.levelIndex = 2;\n    }\n    /**\n     * Creates a Logger instance for the given EntityManager\n     * @param entityManager - Theo owning entityManager\n     * @return The created logger instance\n     */\n    static create(entityManager) {\n        const proto = this.prototype;\n        const logger = (() => {\n            function LoggerFunction(...args) {\n                proto.log.apply(LoggerFunction, args);\n            }\n            Object.getOwnPropertyNames(proto).forEach((key) => {\n                Object.defineProperty(LoggerFunction, key, Object.getOwnPropertyDescriptor(proto, key));\n            });\n            return LoggerFunction;\n        })();\n        logger.init(entityManager);\n        return logger;\n    }\n    /**\n     * The log level which will be logged\n     *\n     * The log level can be one of 'trace', 'debug', 'info', 'warn', 'error'\n     * @type string\n     */\n    get level() {\n        return Logger.LEVELS[this.levelIndex];\n    }\n    /**\n     * Sets the log level which will be logged\n     * @param value\n     */\n    set level(value) {\n        const index = Logger.LEVELS.indexOf(value);\n        if (index === -1) {\n            throw new Error(`Unknown logging level ${value}`);\n        }\n        this.levelIndex = index;\n    }\n    log(...args) {\n        const level = Logger.LEVELS.indexOf(args[0]) === -1 ? 'info' : args.shift();\n        if (this.levelIndex > Logger.LEVELS.indexOf(level)) {\n            return Promise.resolve(null);\n        }\n        let message = typeof args[0] === 'string' ? this.format(args.shift(), args) : '[no message]';\n        let data = null;\n        if (args.length) {\n            const arg = args.pop();\n            data = arg;\n            if (typeof arg !== 'object' || Array.isArray(arg)) {\n                data = { data: arg };\n            }\n            if (arg instanceof Error) {\n                // errors aren't loggable by default, since they do not have any visible property\n                const { \n                // @ts-ignore\n                stack, data: data1, message: message1, name, status, } = arg;\n                data = {\n                    name,\n                    message: message1,\n                    stack,\n                    status,\n                    data: data1,\n                };\n            }\n        }\n        if (args.length) {\n            message += `, ${args.join(', ')}`;\n        }\n        return this.logJSON(Object.assign({ date: new Date().toISOString(), message,\n            level,\n            data }, (this.entityManager.me && { user: this.entityManager.me.id })));\n    }\n    format(message, args) {\n        if (args.length === 0) {\n            return message;\n        }\n        const str = String(message).replace(Logger.FORMAT_REGEXP, (x) => {\n            if (x === '%%') {\n                return '%';\n            }\n            if (!args.length) {\n                return x;\n            }\n            switch (x) {\n                case '%s':\n                    return String(args.shift());\n                case '%d':\n                    return String(Number(args.shift()));\n                case '%j':\n                    try {\n                        return JSON.stringify(args.shift());\n                    }\n                    catch (_) {\n                        return '[Circular]';\n                    }\n                default:\n                    return x;\n            }\n        });\n        return str;\n    }\n    init(entityManager) {\n        this.entityManager = entityManager;\n        this.levelIndex = 2;\n        Logger.LEVELS.forEach((level) => {\n            this[level] = this.log.bind(this, level);\n        });\n    }\n    logJSON(json) {\n        if (!this.entityManager.isReady) {\n            return this.entityManager.ready(this.logJSON.bind(this, json));\n        }\n        return this.entityManager.send(new msg.CreateObject('logs.AppLog', json));\n    }\n}\nLogger.LEVELS = ['trace', 'debug', 'info', 'warn', 'error'];\nLogger.FORMAT_REGEXP = /%[sdj%]/g;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiTG9nZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxHQUFHLE1BQU0sWUFBWSxDQUFDO0FBTWxDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLE1BQU07SUFBbkI7UUFLUyxrQkFBYSxHQUFrQixJQUFXLENBQUM7UUFFM0MsZUFBVSxHQUFXLENBQUMsQ0FBQztJQWtNaEMsQ0FBQztJQWhNQzs7OztPQUlHO0lBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUE0QjtRQUN4QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBRTdCLE1BQU0sTUFBTSxHQUFHLENBQUMsR0FBRyxFQUFFO1lBQ25CLFNBQVMsY0FBYyxDQUFDLEdBQUcsSUFBVztnQkFDcEMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLElBQVcsQ0FBQyxDQUFDO1lBQy9DLENBQUM7WUFFRCxNQUFNLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ2hELE1BQU0sQ0FBQyxjQUFjLENBQUMsY0FBYyxFQUFFLEdBQUcsRUFBRSxNQUFNLENBQUMsd0JBQXdCLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBRSxDQUFDLENBQUM7WUFDM0YsQ0FBQyxDQUFDLENBQUM7WUFFSCxPQUFPLGNBQStCLENBQUM7UUFDekMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUVMLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFM0IsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsSUFBSSxLQUFLO1FBQ1AsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFBSSxLQUFLLENBQUMsS0FB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","import { Entity } from '../binding';\n/**\n * PushMessages are used to send a push notification to a set of devices\n */\nexport class PushMessage {\n    /**\n     * Push message will be used to send a push notification to a set of devices\n     *\n     * @param [devices] The Set of device references which\n     * will receive this push notification.\n     * @param message The message of the push notification.\n     * @param subject The subject of the push notification.\n     * @param [options] The options object which can contain additional information and data\n     * @param [badge] The badge for iOS or Web Push devices\n     * @param [data] The data object which can contain additional information.\n     */\n    constructor(devices, message, subject, options, badge, data) {\n        const opts = typeof options === 'string' ? { sound: options, badge, data } : (options || {});\n        this.devices = PushMessage.initDevices(devices);\n        this.message = message;\n        this.subject = subject;\n        Object.assign(this, opts);\n    }\n    /**\n     * Instantiates a set of devices from the given parameter\n     * @param devices\n     * @return\n     */\n    static initDevices(devices) {\n        if (devices instanceof Set) {\n            return devices;\n        }\n        if (devices instanceof Entity) {\n            return new Set([devices]);\n        }\n        if (!devices || devices[Symbol.iterator]) {\n            return new Set(devices);\n        }\n        throw new Error('Only Sets, Lists and Arrays can be used as devices.');\n    }\n    /**\n     * Adds a new object to the set of devices\n     * @param device will be added to the device set to receive the push notification\n     * @return\n     */\n    addDevice(device) {\n        this.devices.add(device);\n    }\n    /**\n     * Converts the push message to JSON\n     * @return\n     */\n    toJSON() {\n        if (!this.devices || !this.devices.size) {\n            throw new Error('Set of devices is empty.');\n        }\n        return Object.assign({}, this, {\n            devices: Array.from(this.devices, (device) => device.id),\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHVzaE1lc3NhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJQdXNoTWVzc2FnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBd0VwQzs7R0FFRztBQUNILE1BQU0sT0FBTyxXQUFXO0lBZ0J0Qjs7Ozs7Ozs7OztPQVVHO0lBQ0gsWUFBWSxPQUE4RCxFQUFFLE9BQWdCLEVBQUUsT0FBZ0IsRUFDNUcsT0FBcUMsRUFBRSxLQUFxQixFQUFFLElBQVc7UUFDekUsTUFBTSxJQUFJLEdBQUcsT0FBTyxPQUFPLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsQ0FBQztRQUU3RixJQUFJLENBQUMsT0FBTyxHQUFHLFdBQVcsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFFdkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSyxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQStEO1FBQ3hGLElBQUksT0FBTyxZQUFZLEdBQUcsRUFBRTtZQUMxQixPQUFPLE9BQU8sQ0FBQztTQUNoQjtRQUVELElBQUksT0FBTyxZQUFZLE1BQU0sRUFBRTtZQUM3QixPQUFPLElBQUksR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUMzQjtRQUVELElBQUksQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRTtZQUN4QyxPQUFPLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQ3pCO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO0lBQ3pFLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsU0FBUyxDQUFDLE1BQW9CO1FBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxNQUFNO1FBQ0osSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRTtZQUN2QyxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDN0M7UUFFRCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBYSxFQUFFLElBQUksRUFBRTtZQUN4QyxPQUFPLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO1NBQ3pELENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRiJ9","import { hmac } from '../util';\nexport class TokenStorage {\n    /**\n     * @param origin The origin where the token belongs to\n     * @param token The initial token\n     * @param temporary If the token should be saved temporary or permanently\n     */\n    constructor(origin, token, temporary) {\n        this.tokenData = token ? TokenStorage.parse(token) : null;\n        this.origin = origin;\n        this.temporary = !!temporary;\n    }\n    /**\n     * Parse a token string in its components\n     * @param token The token string to parse, time values are returned as timestamps\n     * @return The parsed token data\n     */\n    static parse(token) {\n        return {\n            val: token,\n            createdAt: parseInt(token.substring(0, 8), 16) * 1000,\n            expireAt: parseInt(token.substring(8, 16), 16) * 1000,\n            sig: token.substring(token.length - 40),\n            data: token.substring(0, token.length - 40),\n        };\n    }\n    /**\n     * Get the stored token\n     * @return The token or undefined, if no token is available\n     */\n    get token() {\n        return this.tokenData ? this.tokenData.val : null;\n    }\n    static create(origin) {\n        return Promise.resolve(new TokenStorage(origin));\n    }\n    /**\n     * Use the underlying storage implementation to save the token\n     * @param origin The origin where the token belongs to\n     * @param token The initial token\n     * @param temporary If the token should be saved temporary or permanently\n     * @return\n     */\n    saveToken(origin, token, temporary) {\n        // eslint-disable-next-line no-underscore-dangle\n        if (this._saveToken !== TokenStorage.prototype._saveToken) {\n            // eslint-disable-next-line no-console\n            console.log('Using deprecated TokenStorage._saveToken implementation.');\n            // eslint-disable-next-line no-underscore-dangle\n            this._saveToken(origin, token, temporary);\n        }\n    }\n    /**\n     * Use the underlying storage implementation to save the token\n     * @param origin The origin where the token belongs to\n     * @param token The initial token\n     * @param temporary If the token should be saved temporary or permanently\n     * @return\n     * @deprecated Use TokenStorage#saveToken instead\n     * @protected\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _saveToken(origin, token, temporary) { }\n    /**\n     * Update the token for the givin origin, the operation may be asynchronous\n     * @param token The token to store or <code>null</code> to remove the token\n     */\n    update(token) {\n        const t = token ? TokenStorage.parse(token) : null;\n        if (this.tokenData && t && this.tokenData.expireAt > t.expireAt) {\n            // an older token was fetched from the cache, so ignore it\n            return;\n        }\n        this.tokenData = t;\n        this.saveToken(this.origin, token, this.temporary);\n    }\n    /**\n     * Derives a resource token from the stored origin token and signs the resource with the generated resource token\n     *\n     * @param resource The resource which will be accessible with the returned token\n     * @param sign Sign the given resource with a token, if sign is false the resource will only be encoded to a path\n     * @return A resource token which can only be used to access the specified resource\n     */\n    signPath(resource, sign = true) {\n        const { tokenData } = this;\n        const result = Promise.resolve(resource.split('/').map(encodeURIComponent).join('/'));\n        if (!tokenData || !sign) {\n            return result;\n        }\n        return result.then((path) => TokenStorage.hmac(path + tokenData.data, tokenData.sig)\n            .then((hash) => `${path}?BAT=${tokenData.data + hash}`))\n            .catch((e) => {\n            // eslint-disable-next-line no-console\n            console.warn('Can\\'t sign the resource, run the SDK on a secured origin, or provide an alternative hmac implementation on TokenStorage.hmac', e);\n            return result;\n        });\n    }\n}\nTokenStorage.hmac = hmac;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9rZW5TdG9yYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVG9rZW5TdG9yYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFxQi9CLE1BQU0sT0FBTyxZQUFZO0lBaUR2Qjs7OztPQUlHO0lBQ0gsWUFBWSxNQUFjLEVBQUUsS0FBcUIsRUFBRSxTQUFtQjtRQUNwRSxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzFELElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUMvQixDQUFDO0lBcENEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQWE7UUFDeEIsT0FBTztZQUNMLEdBQUcsRUFBRSxLQUFLO1lBQ1YsU0FBUyxFQUFFLFFBQVEsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsR0FBRyxJQUFJO1lBQ3JELFFBQVEsRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLEdBQUcsSUFBSTtZQUNyRCxHQUFHLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztZQUN2QyxJQUFJLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7U0FDNUMsQ0FBQztJQUNKLENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUFJLEtBQUs7UUFDUCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFD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","import { TokenStorage } from './TokenStorage';\nexport class GlobalStorage extends TokenStorage {\n    /**\n     * Creates a global token storage instance for the given origin\n     * A global token storage use a global variable to store the actual origin tokens\n     * @param origin\n     * @return\n     */\n    static create(origin) {\n        return Promise.resolve(new GlobalStorage(origin, GlobalStorage.tokens[origin]));\n    }\n    /**\n     * @inheritDoc\n     */\n    saveToken(origin, token, temporary) {\n        if (!temporary) {\n            if (token) {\n                GlobalStorage.tokens[origin] = token;\n            }\n            else {\n                delete GlobalStorage.tokens[origin];\n            }\n        }\n    }\n}\nGlobalStorage.tokens = {};\nTokenStorage.GLOBAL = GlobalStorage;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2xvYmFsU3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkdsb2JhbFN0b3JhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTlDLE1BQU0sT0FBTyxhQUFjLFNBQVEsWUFBWTtJQUc3Qzs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBYztRQUMxQixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxhQUFhLENBQUMsTUFBTSxFQUFFLGFBQWEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVMsQ0FBQyxNQUFjLEVBQUUsS0FBYSxFQUFFLFNBQWtCO1FBQ3pELElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDZCxJQUFJLEtBQUssRUFBRTtnQkFDVCxhQUFhLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQzthQUN0QztpQkFBTTtnQkFDTCxPQUFPLGFBQWEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDckM7U0FDRjtJQUNILENBQUM7O0FBdkJjLG9CQUFNLEdBQWlDLEVBQUUsQ0FBQztBQTBCM0QsWUFBWSxDQUFDLE1BQU0sR0FBRyxhQUFhLENBQUMifQ==","import { TokenStorage } from './TokenStorage';\n/**\n * @ignore\n */\nexport class WebStorage extends TokenStorage {\n    static isAvailable() {\n        try {\n            // firefox throws an exception if cookies are disabled\n            if (typeof localStorage === 'undefined') {\n                return false;\n            }\n            localStorage.setItem('bq_webstorage_test', 'bq');\n            localStorage.removeItem('bq_webstorage_test');\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Creates a global web storage instance for the given origin\n     * A web token storage use the localStorage or sessionStorage to store the origin tokens\n     * @param origin\n     * @return\n     */\n    static create(origin) {\n        let temporary = false;\n        let token = localStorage.getItem(`BAT:${origin}`);\n        if (!token && typeof sessionStorage !== 'undefined') {\n            token = sessionStorage.getItem(`BAT:${origin}`);\n            temporary = !!token;\n        }\n        return Promise.resolve(new WebStorage(origin, token, temporary));\n    }\n    /**\n     * @inheritDoc\n     */\n    saveToken(origin, token, temporary) {\n        const webStorage = temporary ? sessionStorage : localStorage;\n        if (token) {\n            webStorage.setItem(`BAT:${origin}`, token);\n        }\n        else {\n            webStorage.removeItem(`BAT:${origin}`);\n        }\n    }\n}\nif (WebStorage.isAvailable()) {\n    TokenStorage.WEB_STORAGE = WebStorage;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ViU3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIldlYlN0b3JhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTlDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFVBQVcsU0FBUSxZQUFZO0lBQzFDLE1BQU0sQ0FBQyxXQUFXO1FBQ2hCLElBQUk7WUFDRixzREFBc0Q7WUFDdEQsSUFBSSxPQUFPLFlBQVksS0FBSyxXQUFXLEVBQUU7Z0JBQ3ZDLE9BQU8sS0FBSyxDQUFDO2FBQ2Q7WUFFRCxZQUFZLENBQUMsT0FBTyxDQUFDLG9CQUFvQixFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2pELFlBQVksQ0FBQyxVQUFVLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUM5QyxPQUFPLElBQUksQ0FBQztTQUNiO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixPQUFPLEtBQUssQ0FBQztTQUNkO0lBQ0gsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFjO1FBQzFCLElBQUksU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLEtBQUssR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLE9BQU8sTUFBTSxFQUFFLENBQUMsQ0FBQztRQUVsRCxJQUFJLENBQUMsS0FBSyxJQUFJLE9BQU8sY0FBYyxLQUFLLFdBQVcsRUFBRTtZQUNuRCxLQUFLLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBQyxPQUFPLE1BQU0sRUFBRSxDQUFDLENBQUM7WUFDaEQsU0FBUyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDckI7UUFFRCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxVQUFVLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVMsQ0FBQyxNQUFjLEVBQUUsS0FBb0IsRUFBRSxTQUFrQjtRQUNoRSxNQUFNLFVBQVUsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDO1FBQzdELElBQUksS0FBSyxFQUFFO1lBQ1QsVUFBVSxDQUFDLE9BQU8sQ0FBQyxPQUFPLE1BQU0sRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQzVDO2FBQU07WUFDTCxVQUFVLENBQUMsVUFBVSxDQUFDLE9BQU8sTUFBTSxFQUFFLENBQUMsQ0FBQztTQUN4QztJQUNILENBQUM7Q0FDRjtBQUVELElBQUksVUFBVSxDQUFDLFdBQVcsRUFBRSxFQUFFO0lBQzVCLFlBQVksQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDO0NBQ3ZDIn0=","export { Metadata, MetadataState } from './Metadata';\nexport { Permission } from './Permission';\nexport { Validator } from './Validator';\nexport { ValidationResult } from './ValidationResult';\nexport { Code } from './Code';\nexport { Modules } from './Modules';\nexport { Logger } from './Logger';\nexport { PushMessage } from './PushMessage';\nexport { TokenStorage } from './TokenStorage';\nexport { GlobalStorage } from './GlobalStorage';\nexport { WebStorage } from './WebStorage';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLGFBQWEsRUFBZ0IsTUFBTSxZQUFZLENBQUM7QUFDbkUsT0FBTyxFQUFFLFVBQVUsRUFBaUIsTUFBTSxjQUFjLENBQUM7QUFDekQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzlCLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDcEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNsQyxPQUFPLEVBQUUsV0FBVyxFQUFzQixNQUFNLGVBQWUsQ0FBQztBQUNoRSxPQUFPLEVBQXVCLFlBQVksRUFBYSxNQUFNLGdCQUFnQixDQUFDO0FBQzlFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDIn0=","/* DO NOT TOUCH THIS AUTO-GENERATED FILE */\n/* eslint-disable max-len */\nimport { Message } from './connector';\nexport const ListAllResources = Message.create({\n    method: 'GET',\n    path: '/',\n    status: [200],\n});\nexport const ApiVersion = Message.create({\n    method: 'GET',\n    path: '/version',\n    status: [200],\n});\nexport const Specification = Message.create({\n    method: 'GET',\n    path: '/spec',\n    status: [200],\n});\nexport const GetBloomFilter = Message.create({\n    method: 'GET',\n    path: '/bloomfilter?rules=false',\n    status: [200],\n});\nexport const GetBloomFilterExpirations = Message.create({\n    method: 'GET',\n    path: '/bloomfilter/expirations',\n    status: [200],\n});\nexport const DeleteBloomFilter = Message.create({\n    method: 'DELETE',\n    path: '/bloomfilter?flush=true',\n    status: [204],\n});\nexport const GetOrestesConfig = Message.create({\n    method: 'GET',\n    path: '/config',\n    status: [200],\n});\nexport const UpdateOrestesConfig = Message.create({\n    method: 'PUT',\n    path: '/config',\n    status: [200, 202],\n});\nexport const Connect = Message.create({\n    method: 'GET',\n    path: '/connect',\n    status: [200],\n});\nexport const Status = Message.create({\n    method: 'GET',\n    path: '/status',\n    status: [200],\n});\nexport const EventsUrl = Message.create({\n    method: 'GET',\n    path: '/events-url',\n    status: [200],\n});\nexport const BannedIp = Message.create({\n    method: 'GET',\n    path: '/banned/:ip',\n    status: [204],\n});\nexport const Banned = Message.create({\n    method: 'GET',\n    path: '/banned',\n    status: [],\n});\nexport const Unban = Message.create({\n    method: 'DELETE',\n    path: '/banned',\n    status: [204],\n});\nexport const UnbanIp = Message.create({\n    method: 'DELETE',\n    path: '/banned/:ip',\n    status: [204],\n});\nexport const GetBucketNames = Message.create({\n    method: 'GET',\n    path: '/db',\n    status: [200],\n});\nexport const GetBucketIds = Message.create({\n    method: 'GET',\n    path: '/db/:bucket/ids?start=0&count=-1',\n    status: [200],\n});\nexport const ExportBucket = Message.create({\n    method: 'GET',\n    path: '/db/:bucket',\n    status: [200],\n});\nexport const ImportBucket = Message.create({\n    method: 'PUT',\n    path: '/db/:bucket',\n    status: [200],\n});\nexport const TruncateBucket = Message.create({\n    method: 'DELETE',\n    path: '/db/:bucket',\n    status: [200],\n});\nexport const CreateObject = Message.create({\n    method: 'POST',\n    path: '/db/:bucket',\n    status: [201, 202],\n});\nexport const GetObject = Message.create({\n    method: 'GET',\n    path: '/db/:bucket/:oid',\n    status: [200, 304],\n});\nexport const ReplaceObject = Message.create({\n    method: 'PUT',\n    path: '/db/:bucket/:oid',\n    status: [200, 202],\n});\nexport const DeleteObject = Message.create({\n    method: 'DELETE',\n    path: '/db/:bucket/:oid',\n    status: [202, 204],\n});\nexport const GetAllSchemas = Message.create({\n    method: 'GET',\n    path: '/schema',\n    status: [200],\n});\nexport const UpdateAllSchemas = Message.create({\n    method: 'POST',\n    path: '/schema',\n    status: [200],\n});\nexport const ReplaceAllSchemas = Message.create({\n    method: 'PUT',\n    path: '/schema',\n    status: [200],\n});\nexport const GetSchema = Message.create({\n    method: 'GET',\n    path: '/schema/:bucket',\n    status: [200],\n});\nexport const UpdateSchema = Message.create({\n    method: 'POST',\n    path: '/schema/:bucket',\n    status: [200],\n});\nexport const ReplaceSchema = Message.create({\n    method: 'PUT',\n    path: '/schema/:bucket',\n    status: [200],\n});\nexport const DeleteSchema = Message.create({\n    method: 'DELETE',\n    path: '/schema/:bucket',\n    status: [204],\n});\nexport const AdhocQuery = Message.create({\n    method: 'GET',\n    path: '/db/:bucket/query?q&start=0&count=-1&sort=&eager=&hinted=',\n    status: [200],\n});\nexport const AdhocQueryPOST = Message.create({\n    method: 'POST',\n    path: '/db/:bucket/query?start=0&count=-1&sort=',\n    status: [200],\n});\nexport const AdhocCountQuery = Message.create({\n    method: 'GET',\n    path: '/db/:bucket/count?q',\n    status: [200],\n});\nexport const AdhocCountQueryPOST = Message.create({\n    method: 'POST',\n    path: '/db/:bucket/count',\n    status: [200],\n});\nexport const ListQueryResources = Message.create({\n    method: 'GET',\n    path: '/query',\n    status: [200],\n});\nexport const CreateQuery = Message.create({\n    method: 'POST',\n    path: '/query',\n    status: [201],\n});\nexport const ListThisQueryResources = Message.create({\n    method: 'GET',\n    path: '/query/:qid',\n    status: [200],\n});\nexport const GetQueryCode = Message.create({\n    method: 'GET',\n    path: '/query/:qid/source',\n    status: [200],\n});\nexport const RunQuery = Message.create({\n    method: 'GET',\n    path: '/query/:qid/result?start=0&count=-1',\n    status: [200],\n});\nexport const GetQueryParameters = Message.create({\n    method: 'GET',\n    path: '/query/:qid/parameters',\n    status: [200],\n});\nexport const NewTransaction = Message.create({\n    method: 'POST',\n    path: '/transaction',\n    status: [201],\n});\nexport const CommitTransaction = Message.create({\n    method: 'PUT',\n    path: '/transaction/:tid/committed',\n    status: [200],\n});\nexport const UpdatePartially = Message.create({\n    method: 'POST',\n    path: '/db/:bucket/:oid',\n    status: [200],\n});\nexport const UpdateField = Message.create({\n    method: 'POST',\n    path: '/db/:bucket/:oid/:field',\n    status: [200],\n});\nexport const Login = Message.create({\n    method: 'POST',\n    path: '/db/User/login',\n    status: [200],\n});\nexport const Register = Message.create({\n    method: 'POST',\n    path: '/db/User/register',\n    status: [200, 204],\n});\nexport const Me = Message.create({\n    method: 'GET',\n    path: '/db/User/me',\n    status: [200],\n});\nexport const ValidateUser = Message.create({\n    method: 'GET',\n    path: '/db/User/validate',\n    status: [200],\n});\nexport const Logout = Message.create({\n    method: 'GET',\n    path: '/db/User/logout',\n    status: [204],\n});\nexport const NewPassword = Message.create({\n    method: 'POST',\n    path: '/db/User/password',\n    status: [200],\n});\nexport const ResetPassword = Message.create({\n    method: 'POST',\n    path: '/db/User/reset',\n    status: [200],\n});\nexport const Verify = Message.create({\n    method: 'GET',\n    path: '/db/User/verify?token=',\n    status: [204],\n});\nexport const ChangeUsername = Message.create({\n    method: 'POST',\n    path: '/db/User/changeUsername',\n    status: [204],\n});\nexport const VerifyUsername = Message.create({\n    method: 'GET',\n    path: '/db/User/verifyUsername?token=',\n    status: [204],\n});\nexport const OAuth2 = Message.create({\n    method: 'GET',\n    path: '/db/User/OAuth/:provider?state=&code=&oauth_verifier=&oauth_token=&error_description=',\n    status: [200],\n});\nexport const OAuth1 = Message.create({\n    method: 'GET',\n    path: '/db/User/OAuth1/:provider',\n    status: [200],\n});\nexport const UserToken = Message.create({\n    method: 'POST',\n    path: '/db/User/:oid/token',\n    status: [200],\n});\nexport const RevokeUserToken = Message.create({\n    method: 'DELETE',\n    path: '/db/User/:oid/token',\n    status: [204],\n});\nexport const GetBaqendCode = Message.create({\n    method: 'GET',\n    path: '/code/:bucket/:type',\n    status: [200],\n});\nexport const SetBaqendCode = Message.create({\n    method: 'PUT',\n    path: '/code/:bucket/:type',\n    status: [200, 202],\n});\nexport const DeleteBaqendCode = Message.create({\n    method: 'DELETE',\n    path: '/code/:bucket/:type',\n    status: [202, 204],\n});\nexport const PostBaqendModule = Message.create({\n    method: 'POST',\n    path: '/code/:bucket',\n    status: [200, 204],\n});\nexport const GetBaqendModule = Message.create({\n    method: 'GET',\n    path: '/code/:bucket',\n    status: [200, 204],\n});\nexport const GetAllModules = Message.create({\n    method: 'GET',\n    path: '/code',\n    status: [200],\n});\nexport const ListFiles = Message.create({\n    method: 'GET',\n    path: '/file/:bucket/ids?path=/&start=&count=-1&deep=false',\n    status: [200],\n});\nexport const ListBuckets = Message.create({\n    method: 'GET',\n    path: '/file/buckets',\n    status: [200],\n});\nexport const DownloadArchive = Message.create({\n    method: 'GET',\n    path: '/file',\n    status: [200],\n});\nexport const UploadPatchArchive = Message.create({\n    method: 'POST',\n    path: '/file',\n    status: [200],\n});\nexport const GetFileBucketMetadata = Message.create({\n    method: 'GET',\n    path: '/file/:bucket',\n    status: [200],\n});\nexport const SetFileBucketMetadata = Message.create({\n    method: 'PUT',\n    path: '/file/:bucket',\n    status: [204],\n});\nexport const DeleteFileBucket = Message.create({\n    method: 'DELETE',\n    path: '/file/:bucket',\n    status: [204],\n});\nexport const CreateFile = Message.create({\n    method: 'POST',\n    path: '/file/:bucket',\n    status: [200],\n});\nexport const DownloadFile = Message.create({\n    method: 'GET',\n    path: '/file/:bucket/*oid',\n    status: [200, 304],\n});\nexport const UploadFile = Message.create({\n    method: 'PUT',\n    path: '/file/:bucket/*oid',\n    status: [200],\n});\nexport const GetFileMetadata = Message.create({\n    method: 'HEAD',\n    path: '/file/:bucket/*oid',\n    status: [200],\n});\nexport const UpdateFileMetadata = Message.create({\n    method: 'POST',\n    path: '/file/:bucket/*oid',\n    status: [200],\n});\nexport const DeleteFile = Message.create({\n    method: 'DELETE',\n    path: '/file/:bucket/*oid',\n    status: [200, 204],\n});\nexport const CreateManifest = Message.create({\n    method: 'POST',\n    path: '/pwa/manifest',\n    status: [202],\n});\nexport const DownloadAsset = Message.create({\n    method: 'GET',\n    path: '/asset/*url',\n    status: [200, 304],\n});\nexport const RevalidateAssets = Message.create({\n    method: 'POST',\n    path: '/asset/revalidate',\n    status: [202],\n});\nexport const GetRevalidationStatus = Message.create({\n    method: 'GET',\n    path: '/asset/revalidate/:id',\n    status: [200, 202],\n});\nexport const CancelRevalidation = Message.create({\n    method: 'DELETE',\n    path: '/asset/revalidate/:id',\n    status: [202],\n});\nexport const GetAllRevalidationStatus = Message.create({\n    method: 'GET',\n    path: '/asset/revalidate?state=',\n    status: [200],\n});\nexport const CleanUpAssets = Message.create({\n    method: 'POST',\n    path: '/asset/cleanup',\n    status: [202],\n});\nexport const ListIndexes = Message.create({\n    method: 'GET',\n    path: '/index/:bucket',\n    status: [200],\n});\nexport const CreateDropIndex = Message.create({\n    method: 'POST',\n    path: '/index/:bucket',\n    status: [202],\n});\nexport const DropAllIndexes = Message.create({\n    method: 'DELETE',\n    path: '/index/:bucket',\n    status: [202],\n});\nexport const DeviceRegister = Message.create({\n    method: 'POST',\n    path: '/db/Device/register',\n    status: [200],\n});\nexport const DevicePush = Message.create({\n    method: 'POST',\n    path: '/db/Device/push',\n    status: [204],\n});\nexport const DeviceRegistered = Message.create({\n    method: 'GET',\n    path: '/db/Device/registered',\n    status: [200],\n});\nexport const VAPIDKeys = Message.create({\n    method: 'POST',\n    path: '/config/VAPIDKeys',\n    status: [200],\n});\nexport const VAPIDPublicKey = Message.create({\n    method: 'GET',\n    path: '/config/VAPIDPublicKey',\n    status: [200],\n});\nexport const GCMAKey = Message.create({\n    method: 'POST',\n    path: '/config/GCMKey',\n    status: [204],\n});\nexport const UploadAPNSCertificate = Message.create({\n    method: 'POST',\n    path: '/config/APNSCert',\n    status: [204],\n});\nexport const Install = Message.create({\n    method: 'GET',\n    path: '/speedkit?d=',\n    status: [200],\n});\nexport const SW = Message.create({\n    method: 'GET',\n    path: '/speedkit?r=&v=',\n    status: [200],\n});\nexport const Beacon = Message.create({\n    method: 'POST',\n    path: '/rum/pi',\n    status: [200],\n});\n//# sourceMappingURL=data:application/json;base64,","export class Accessor {\n    /**\n     * @param object\n     * @param attribute\n     * @return\n     */\n    getValue(object, attribute) {\n        return object[attribute.name];\n    }\n    /**\n     * @param object\n     * @param attribute\n     * @param value\n     */\n    setValue(object, attribute, value) {\n        // eslint-disable-next-line no-param-reassign\n        object[attribute.name] = value;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjZXNzb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBY2Nlc3Nvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLE9BQU8sUUFBUTtJQUNuQjs7OztPQUlHO0lBQ0gsUUFBUSxDQUFJLE1BQWUsRUFBRSxTQUF1QjtRQUNsRCxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFhLENBQUM7SUFDNUMsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxRQUFRLENBQUksTUFBZSxFQUFFLFNBQXVCLEVBQUUsS0FBUTtRQUM1RCw2Q0FBNkM7UUFDN0MsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDakMsQ0FBQztDQUNGIn0=","const BAQEND_ID = Symbol('BaqendId');\nconst BAQEND_TYPE = Symbol('BaqendType');\nexport class Enhancer {\n    /**\n     * @param superClass\n     * @return typeConstructor\n     */\n    createProxy(superClass) {\n        return class Proxy extends superClass {\n        };\n    }\n    /**\n     * @param typeConstructor\n     * @returns type the managed type metadata for this class\n     */\n    static getBaqendType(typeConstructor) {\n        return typeConstructor[BAQEND_TYPE];\n    }\n    /**\n     * @param typeConstructor\n     * @return\n     */\n    static getIdentifier(typeConstructor) {\n        return typeConstructor[BAQEND_ID];\n    }\n    /**\n     * @param typeConstructor\n     * @param identifier\n     */\n    static setIdentifier(typeConstructor, identifier) {\n        typeConstructor[BAQEND_ID] = identifier;\n    }\n    /**\n     * @param type\n     * @param typeConstructor\n     */\n    enhance(type, typeConstructor) {\n        if (typeConstructor[BAQEND_TYPE] === type) {\n            return;\n        }\n        if (Object.prototype.hasOwnProperty.call(typeConstructor, BAQEND_TYPE)) {\n            throw new Error('Type is already used by a different manager');\n        }\n        typeConstructor[BAQEND_TYPE] = type;\n        Enhancer.setIdentifier(typeConstructor, type.ref);\n        this.enhancePrototype(typeConstructor.prototype, type);\n    }\n    /**\n     * Enhance the prototype of the type\n     * @param proto\n     * @param type\n     */\n    enhancePrototype(proto, type) {\n        if (type.isEmbeddable) {\n            return; // we do not need to enhance the prototype of embeddable\n        }\n        if (proto.toString === Object.prototype.toString) {\n            // implements a better convenience toString method\n            Object.defineProperty(proto, 'toString', {\n                value: function toString() {\n                    return this._metadata.id || this._metadata.bucket;\n                },\n                enumerable: false,\n            });\n        }\n        // enhance all persistent object properties\n        if (type.superType && type.superType.name === 'Object') {\n            type.superType.declaredAttributes.forEach((attr) => {\n                if (!attr.isMetadata) {\n                    this.enhanceProperty(proto, attr);\n                }\n            });\n        }\n        // enhance all persistent properties\n        type.declaredAttributes.forEach((attr) => {\n            this.enhanceProperty(proto, attr);\n        });\n    }\n    /**\n     * @param proto\n     * @param attribute\n     */\n    enhanceProperty(proto, attribute) {\n        const { name } = attribute;\n        Object.defineProperty(proto, name, {\n            get() {\n                this._metadata.throwUnloadedPropertyAccess(name);\n                return null;\n            },\n            set(value) {\n                this._metadata.throwUnloadedPropertyAccess(name);\n                Object.defineProperty(this, name, {\n                    value,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true,\n                });\n            },\n            configurable: true,\n            enumerable: true,\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5oYW5jZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFbmhhbmNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDckMsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0FBRXpDLE1BQU0sT0FBTyxRQUFRO0lBQ25COzs7T0FHRztJQUNILFdBQVcsQ0FBaUIsVUFBb0I7UUFDOUMsT0FBTyxNQUFNLEtBQU0sU0FBUyxVQUFrQjtTQUFlLENBQUM7SUFDaEUsQ0FBQztJQUVEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxhQUFhLENBQUMsZUFBc0M7UUFDekQsT0FBUSxlQUF1QixDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRDs7O09BR0c7SUFDSCxNQUFNLENBQUMsYUFBYSxDQUFDLGVBQXNDO1FBQ3pELE9BQVEsZUFBdUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsTUFBTSxDQUFDLGFBQWEsQ0FBQyxlQUEyQixFQUFFLFVBQWtCO1FBQ2pFLGVBQXVCLENBQUMsU0FBUyxDQUFDLEdBQUcsVUFBVSxDQUFDO0lBQ25ELENBQUM7SUFFRDs7O09BR0c7SUFDSCxPQUFPLENBQW9CLElBQW9CLEVBQUUsZUFBeUI7UUFDeEUsSUFBSyxlQUF1QixDQUFDLFdBQVcsQ0FBQyxLQUFLLElBQUksRUFBRTtZQUNsRCxPQUFPO1NBQ1I7UUFFRCxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsV0FBVyxDQUFDLEVBQUU7WUFDdEUsTUFBTSxJQUFJLEtBQUssQ0FBQyw2Q0FBNkMsQ0FBQyxDQUFDO1NBQ2hFO1FBRUEsZUFBdUIsQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUM7UUFFN0MsUUFBUSxDQUFDLGFBQWEsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2xELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxlQUFlLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsZ0JBQWdCLENBQW9CLEtBQVEsRUFBRSxJQUFvQjtRQUNoRSxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsT0FBTyxDQUFDLHdEQUF3RDtTQUNqRTtRQUVELElBQUksS0FBSyxDQUFDLFFBQVEsS0FBSyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRTtZQUNoRCxrREFBa0Q7WUFDbEQsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFO2dCQUN2QyxLQUFLLEVBQUUsU0FBUyxRQUFRO29CQUN0QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDO2dCQUNwRCxDQUFDO2dCQUNELFVBQVUsRUFBRSxLQUFLO2FBQ2xCLENBQUMsQ0FBQztTQUNKO1FBRUQsMkNBQTJDO1FBQzNDLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7WUFDdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtnQkFDakQsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7b0JBQ3BCLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUNuQztZQUNILENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxvQ0FBb0M7UUFDcEMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ3ZDLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNILGVBQWUsQ0FBSSxLQUFRLEVBQUUsU0FBeUI7UUFDcEQsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLFNBQVMsQ0FBQztRQUMzQixNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUU7WUFDakMsR0FBRztnQkFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLDJCQUEyQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNqRCxPQUFPLElBQUksQ0FBQztZQUNkLENBQUM7WUFDRCxHQUFHLENBQUMsS0FBSztnQkFDUCxJQUFJLENBQUMsU0FBUyxDQUFDLDJCQUEyQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNqRCxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUU7b0JBQ2hDLEtBQUs7b0JBQ0wsUUFBUSxFQUFFLElBQUk7b0JBQ2QsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFlBQVksRUFBRSxJQUFJO2lCQUNuQixDQUFDLENBQUM7WUFDTCxDQUFDO1lBQ0QsWUFBWSxFQUFFLElBQUk7WUFDbEIsVUFBVSxFQUFFLElBQUk7U0FDakIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGIn0=","// @ts-ignore\nexport class Factory {\n    constructor() {\n        this.type = null;\n        this.prototype = null;\n    }\n    static extend(target, proto) {\n        if (proto !== Factory.prototype) {\n            this.extend(target, Object.getPrototypeOf(proto));\n        }\n        const properties = Object.getOwnPropertyNames(proto);\n        for (let j = 0, len = properties.length; j < len; j += 1) {\n            const prop = properties[j];\n            Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(proto, prop));\n        }\n        return target;\n    }\n    /**\n     * Creates a new Factory for the given type\n     * @param type - the type constructor of T\n     * @return A new object factory to created instances of T\n     */\n    static createFactory(type) {\n        // We want te explicitly name the created factory and give the constructor a properly argument name\n        const factory = Factory.extend((function FactoryConstructor(...args) {\n            return factory.newInstance(args);\n        }), this.prototype);\n        // lets instanceof work properly\n        factory.prototype = type.prototype;\n        factory.type = type;\n        return factory;\n    }\n    /**\n     * Creates a new instance of the factory type\n     * @param args Constructor arguments used for instantiation\n     * @return A new created instance of *\n     * @instance\n     */\n    new(...args) {\n        return this.newInstance(args);\n    }\n    /**\n     * Creates a new instance of the factory type\n     * @param args Constructor arguments used for instantiation\n     * @return A new created instance of *\n     * @instance\n     */\n    newInstance(args) {\n        if (!args || args.length === 0) {\n            // eslint-disable-next-line new-cap\n            return new this.type();\n        }\n        // es6 constructors can't be called, therefore bind all arguments and invoke the constructor\n        // then with the bounded parameters\n        // The first argument is shift out by invocation with `new`.\n        const a = [null];\n        Array.prototype.push.apply(a, args);\n        const boundConstructor = (Function.prototype.bind.apply(this.type, a));\n        // eslint-disable-next-line new-cap\n        return new boundConstructor();\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0JBLGFBQWE7QUFDYixNQUFNLE9BQU8sT0FBTztJQUFwQjtRQWlDUyxTQUFJLEdBQWEsSUFBVyxDQUFDO1FBRTdCLGNBQVMsR0FBTSxJQUFXLENBQUM7SUFpQ3BDLENBQUM7SUFuRVMsTUFBTSxDQUFDLE1BQU0sQ0FBNEIsTUFBUyxFQUFFLEtBQVE7UUFDbEUsSUFBSSxLQUFLLEtBQUssT0FBTyxDQUFDLFNBQVMsRUFBRTtZQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDbkQ7UUFFRCxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3hELE1BQU0sSUFBSSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMzQixNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLHdCQUF3QixDQUFDLEtBQUssRUFBRSxJQUFJLENBQUUsQ0FBQyxDQUFDO1NBQ3BGO1FBRUQsT0FBTyxNQUFlLENBQUM7SUFDekIsQ0FBQztJQUVEOzs7O09BSUc7SUFDTyxNQUFNLENBQUMsYUFBYSxDQUEwQyxJQUFjO1FBQ3BGLG1HQUFtRztRQUNuRyxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBUyxrQkFBa0IsQ0FBQyxHQUFHLElBQVc7WUFDeEUsT0FBTyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLENBQUMsQ0FBYSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUVoQyxnQ0FBZ0M7UUFDaEMsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ25DLE9BQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBRXBCLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFNRDs7Ozs7T0FLRztJQUNILEdBQUcsQ0FBQyxHQUFHLElBQVc7UUFDaEIsT0FBTyxJQUFJLENBQUMsV0FBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILFdBQVcsQ0FBQyxJQUF5QjtRQUNuQyxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQzlCLG1DQUFtQztZQUNuQyxPQUFPLElBQUksSUFBSSxDQUFDLElBQUssRUFBRSxDQUFDO1NBQ3pCO1FBRUQsNEZBQTRGO1FBQzVGLG1DQUFtQztRQUNuQyw0REFBNEQ7UUFDNUQsTUFBTSxDQUFDLEdBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN4QixLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLElBQWEsQ0FBQyxDQUFDO1FBQzdDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hFLG1DQUFtQztRQUNuQyxPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0NBQ0YifQ==","import { Factory } from './Factory';\nimport { Metadata } from '../intersection';\nexport class ManagedFactory extends Factory {\n    constructor() {\n        super(...arguments);\n        /**\n         * Methods that are added to object instances\n         * This property is an alias for this factory type prototype\n         * @name methods\n         */\n        this.methods = null;\n        /**\n         * The managed type of this factory\n         */\n        this.managedType = null;\n        /**\n         * The owning EntityManager where this factory belongs to\n         */\n        this.db = null;\n    }\n    /**\n     * Creates a new ManagedFactory for the given type\n     * @param managedType The metadata of type T\n     * @param db The entity manager instance\n     */\n    static create(managedType, db) {\n        const factory = this.createFactory(managedType.typeConstructor);\n        factory.methods = factory.prototype;\n        factory.managedType = managedType;\n        factory.db = db;\n        return factory;\n    }\n    /**\n     * Creates a new instance and sets the Managed Object to the given json\n     * @param json\n     * @return A new created instance of T\n     */\n    fromJSON(json) {\n        const instance = this.newInstance();\n        return this.managedType.fromJsonValue(Metadata.create(this.managedType, this.db), json, instance, {\n            persisting: false,\n        });\n    }\n    /**\n     * Adds methods to instances of this factories type\n     * @param methods The methods to add\n     * @return\n     */\n    addMethods(methods) {\n        Object.assign(this.methods, methods);\n    }\n    /**\n     * Add a method to instances of this factories type\n     * @param name The method name to add\n     * @param fn The Method to add\n     * @return\n     */\n    addMethod(name, fn) {\n        this.methods[name] = fn;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFuYWdlZEZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJNYW5hZ2VkRmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBS3BDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUzQyxNQUFNLE9BQU8sY0FBa0MsU0FBUSxPQUFVO0lBQWpFOztRQWdCRTs7OztXQUlHO1FBQ0ksWUFBTyxHQUFnQyxJQUFXLENBQUM7UUFFMUQ7O1dBRUc7UUFDSSxnQkFBVyxHQUFtQixJQUFXLENBQUM7UUFFakQ7O1dBRUc7UUFDSSxPQUFFLEdBQWtCLElBQVcsQ0FBQztJQWdDekMsQ0FBQztJQTlEQzs7OztPQUlHO0lBQ0ksTUFBTSxDQUFDLE1BQU0sQ0FBb0IsV0FBMkIsRUFBRSxFQUFpQjtRQUNwRixNQUFNLE9BQU8sR0FBc0IsSUFBSSxDQUFDLGFBQWEsQ0FBdUIsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBRXpHLE9BQU8sQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUNwQyxPQUFPLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUNsQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztRQUVoQixPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0lBbUJEOzs7O09BSUc7SUFDSCxRQUFRLENBQUMsSUFBVTtRQUNqQixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDcEMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUU7WUFDaEcsVUFBVSxFQUFFLEtBQUs7U0FDbEIsQ0FBRSxDQUFDO0lBQ04sQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxVQUFVLENBQUMsT0FBbUM7UUFDNUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILFNBQVMsQ0FBQyxJQUFZLEVBQUUsRUFBWTtRQUNsQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUMxQixDQUFDO0NBQ0YifQ==","import { ManagedFactory } from './ManagedFactory';\nimport { Metadata } from '../intersection';\nexport class EntityFactory extends ManagedFactory {\n    /**\n     * Creates a new instance of the factory type\n     *\n     * @param args Constructor arguments used for instantiation, the constructor will not be called\n     * when no arguments are passed\n     * @return A new created instance of T\n     */\n    newInstance(args) {\n        const instance = super.newInstance(args);\n        Metadata.get(instance).db = this.db;\n        return instance;\n    }\n    /**\n     * Loads the instance for the given id, or null if the id does not exists.\n     * @param id The id to query\n     * @param [options] The load options\n     * @param [options.depth=0] The object depth which will be loaded. Depth 0 loads only this object,\n     * <code>true</code> loads the objects by reachability.\n     * @param [options.refresh=false] Indicates whether the object should be revalidated (cache bypass).\n     * @param [options.local=false] Indicates whether the local copy (from the entity manager)\n     * of an object should be returned if it exists. This value might be stale.\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return A Promise that will be fulfilled when the asynchronous operation completes.\n     */\n    load(id, options, doneCallback, failCallback) {\n        if (typeof options === 'function') {\n            return this.load(id, {}, options, doneCallback);\n        }\n        return this.db.load(this.managedType.typeConstructor, id, options).then(doneCallback, failCallback);\n    }\n    /**\n     * Gets an unloaded reference for the given id.\n     * @param id The id of an object to get a reference for.\n     * @return An unloaded reference to the object with the given id.\n     */\n    ref(id) {\n        return this.db.getReference(this.managedType.ref, id);\n    }\n    /**\n     * Creates a new instance and sets the DatabaseObject to the given json\n     * @param json\n     * @return instance\n     */\n    fromJSON(json) {\n        const obj = this.db.getReference(this.managedType.ref, json.id);\n        return this.managedType.fromJsonValue(Metadata.get(obj), json, obj, { persisting: false });\n    }\n    /**\n     * Creates a new query for this class\n     * @return The query builder\n     */\n    find() {\n        return this.db.createQueryBuilder(this.managedType.typeConstructor);\n    }\n    /**\n     * Creates a new partial update for this class\n     * @param id The id to partial update\n     * @param [partialUpdate] An initial partial update to execute\n     * @return A partial update builder for the given entity id\n     */\n    partialUpdate(id, partialUpdate) {\n        return this.ref(id).partialUpdate(partialUpdate);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW50aXR5RmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkVudGl0eUZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBS2xELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUzQyxNQUFNLE9BQU8sYUFBZ0MsU0FBUSxjQUFpQjtJQUNwRTs7Ozs7O09BTUc7SUFDSCxXQUFXLENBQUMsSUFBeUI7UUFDbkMsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxRQUFRLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3BDLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7O09BWUc7SUFDSCxJQUFJLENBQUMsRUFBVSxFQUFFLE9BQTJFLEVBQUUsWUFBa0IsRUFDOUcsWUFBa0I7UUFDbEIsSUFBSSxPQUFPLE9BQU8sS0FBSyxVQUFVLEVBQUU7WUFDakMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLFlBQVksQ0FBQyxDQUFDO1NBQ2pEO1FBRUQsT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsRUFBRSxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsQ0FBQztJQUN0RyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILEdBQUcsQ0FBQyxFQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFFBQVEsQ0FBQyxJQUFVO1FBQ2pCLE1BQU0sR0FBRyxHQUFNLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFHLElBQWdCLENBQUMsRUFBWSxDQUFDLENBQUM7UUFDMUYsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLENBQUUsQ0FBQztJQUM5RixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFBSTtRQUNGLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILGFBQWEsQ0FBQyxFQUFVLEVBQUUsYUFBb0I7UUFDNUMsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNuRCxDQUFDO0NBQ0YifQ==","import { EntityFactory } from './EntityFactory';\nexport var LoginOption;\n(function (LoginOption) {\n    /**\n     * Do not login the user after a successful registration\n     */\n    LoginOption[LoginOption[\"NO_LOGIN\"] = -1] = \"NO_LOGIN\";\n    /**\n     * Login in after a successful registration and keep the token in a nonpermanent storage, i.e SessionStorage\n     */\n    LoginOption[LoginOption[\"SESSION_LOGIN\"] = 0] = \"SESSION_LOGIN\";\n    /**\n     * Login in after a successful registration and keep the token in a persistent storage, i.e LocalStorage\n     */\n    LoginOption[LoginOption[\"PERSIST_LOGIN\"] = 1] = \"PERSIST_LOGIN\";\n})(LoginOption || (LoginOption = {}));\n/**\n * Creates a new instance of the managed type of this factory\n */\nexport class UserFactory extends EntityFactory {\n    get LoginOption() {\n        return LoginOption;\n    }\n    /**\n     * The current logged in user, or <code>null</code> if the user is not logged in\n     */\n    get me() {\n        return this.db.me;\n    }\n    /**\n     * Register a new user with the given username and password, if the username is not used by an another user.\n     * @param user The username as a string or a <User> Object, which must contain the username.\n     * @param password The password for the given user\n     * @param [loginOption=true] The default logs the user in after a successful\n     * registration and keeps the user logged in over multiple sessions\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return The created user object, for the new registered user.\n     */\n    register(user, password, loginOption, doneCallback, failCallback) {\n        if (loginOption instanceof Function) {\n            return this.register(user, password, true, loginOption, doneCallback);\n        }\n        const userObj = typeof user === 'string' ? this.fromJSON({ username: user }) : user;\n        return this.db.register(userObj, password, loginOption === undefined ? true : loginOption)\n            .then(doneCallback, failCallback);\n    }\n    /**\n     * Log in the user with the given username and password and starts a user session\n     * @param username The username of the user\n     * @param password The password of the user\n     * @param [loginOption=true] The default keeps the user logged in over\n     * multiple sessions\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    login(username, password, loginOption, doneCallback, failCallback) {\n        if (loginOption instanceof Function) {\n            return this.login(username, password, true, loginOption, doneCallback);\n        }\n        return this.db.login(username, password, loginOption === undefined ? true : loginOption)\n            .then(doneCallback, failCallback);\n    }\n    /**\n     * Log in the user assiciated with the given token and starts a user session.\n     * @param token The user token.\n     * @param [loginOption=true] The default keeps the user logged in over\n     * multiple sessions\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    loginWithToken(token, loginOption, doneCallback, failCallback) {\n        if (loginOption instanceof Function) {\n            return this.loginWithToken(token, true, loginOption, doneCallback);\n        }\n        this.db.token = token;\n        return this.db.renew(loginOption).then(doneCallback, failCallback);\n    }\n    /**\n     * Log out the current logged in user and ends the active user session\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    logout(doneCallback, failCallback) {\n        return this.db.logout().then(doneCallback, failCallback);\n    }\n    newPassword(...args) {\n        // detect signature newPassword(token, newPassword, [loginOption=true][, doneCallback[, failCallback]])\n        if (typeof args[2] === 'string') {\n            const [username, password, newPassword, doneCallback, failCallback] = args;\n            return this.db.newPassword(username, password, newPassword).then(doneCallback, failCallback);\n        }\n        // eslint-disable-next-line prefer-const\n        let [token, newPassword, loginOption, doneCallback, failCallback] = args;\n        if (loginOption instanceof Function) {\n            failCallback = doneCallback;\n            doneCallback = loginOption;\n            loginOption = true;\n        }\n        return this.db.newPasswordWithToken(token, newPassword, loginOption).then(doneCallback, failCallback);\n    }\n    /**\n     * Sends an email with a link to reset the password for the given username\n     *\n     * The username must be a valid email address.\n     *\n     * @param username Username (email) to identify the user\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    resetPassword(username, doneCallback, failCallback) {\n        return this.db.resetPassword(username).then(doneCallback, failCallback);\n    }\n    /**\n     * Sends an email with a link to change the current username\n     *\n     * The user is identified by their current username and password.\n     * The username must be a valid email address.\n     *\n     * @param username Current username (email) to identify the user\n     * @param newUsername New username (email) to change the current username to\n     * @param password The current password of the user. Has to be passed to the function for security reason\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    changeUsername(username, newUsername, password, doneCallback, failCallback) {\n        return this.db.changeUsername(username, newUsername, password).then(doneCallback, failCallback);\n    }\n    /**\n     * Requests a perpetual token for the given user\n     *\n     * Only users with the admin role are allowed to request an API token.\n     *\n     * @param user The user object or id of the user object\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    requestAPIToken(user, doneCallback, failCallback) {\n        return this.db.requestAPIToken(this.managedType.typeConstructor, user).then(doneCallback, failCallback);\n    }\n    /**\n     * Revoke all created tokens for the given user\n     *\n     * This method will revoke all previously issued tokens and the user must login again.\n     *\n     * @param user The user object or id of the user object\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    revokeAllTokens(user, doneCallback, failCallback) {\n        return this.db.revokeAllTokens(this.managedType.typeConstructor, user).then(doneCallback, failCallback);\n    }\n}\n/**\n * @property oauth default properties\n * @property google default oauth properties for Google\n * @property facebook default oauth properties for Facebook\n * @property github default oauth properties for GitHub\n * @property twitter default oauth properties for Twitter\n * @property linkedin default oauth properties for LinkedIn\n * @property {Object} oauth.salesforce default oauth properties for Salesforce\n */\nUserFactory.DefaultOptions = {\n    google: {\n        width: 585,\n        height: 545,\n        scope: 'email',\n    },\n    facebook: {\n        width: 1140,\n        height: 640,\n        scope: 'email',\n    },\n    github: {\n        width: 1040,\n        height: 580,\n        scope: 'user:email',\n    },\n    twitter: {\n        width: 740,\n        height: 730,\n    },\n    linkedin: {\n        width: 630,\n        height: 530,\n        scope: 'r_liteprofile',\n    },\n    salesforce: {\n        width: 585,\n        height: 545,\n        scope: 'email',\n    },\n};\n['Google', 'Facebook', 'GitHub', 'Twitter', 'LinkedIn', 'Salesforce'].forEach((name) => {\n    const methodName = `loginWith${name}`;\n    // do not use a lambda here since we will loose the this context\n    UserFactory.prototype[methodName] = function loginWithOAuth(clientID, options, doneCallback, failCallback) {\n        if (options instanceof Function) {\n            return this[methodName](clientID, {}, options, doneCallback);\n        }\n        const opt = Object.assign(Object.assign({}, UserFactory.DefaultOptions[name.toLowerCase()]), options || {});\n        return this.db.loginWithOAuth(name, clientID, opt).then(doneCallback, failCallback);\n    };\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlckZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJVc2VyRmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFHaEQsTUFBTSxDQUFOLElBQVksV0FhWDtBQWJELFdBQVksV0FBVztJQUNyQjs7T0FFRztJQUNILHNEQUFhLENBQUE7SUFDYjs7T0FFRztJQUNILCtEQUFpQixDQUFBO0lBQ2pCOztPQUVHO0lBQ0gsK0RBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQWJXLFdBQVcsS0FBWCxXQUFXLFFBYXRCO0FBRUQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sV0FBWSxTQUFRLGFBQXlCO0lBQ3hELElBQVcsV0FBVztRQUNwQixPQUFPLFdBQVcsQ0FBQztJQUNyQixDQUFDO0lBMkNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQ7Ozs7Ozs7OztPQVNHO0lBQ0gsUUFBUSxDQUFDLElBQXlCLEVBQUUsUUFBZ0IsRUFBRSxXQUE4QyxFQUNsRyxZQUFrQixFQUFFLFlBQWtCO1FBQ3RDLElBQUksV0FBVyxZQUFZLFFBQVEsRUFBRTtZQUNuQyxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQyxDQUFDO1NBQ3ZFO1FBRUQsTUFBTSxPQUFPLEdBQUcsT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNwRixPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxLQUFLLFNBQVMsQ0FBQyxDQUFD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","import * as message from '../message';\nimport { PushMessage } from '../intersection';\nimport { EntityFactory } from './EntityFactory';\nexport class DeviceFactory extends EntityFactory {\n    /**\n     * Push message will be used to send a push notification to a set of devices\n     */\n    get PushMessage() {\n        return PushMessage;\n    }\n    /**\n     * The current registered device, or <code>null</code> if the device is not registered\n     * @type model.Device\n     */\n    get me() {\n        return this.db.deviceMe;\n    }\n    /**\n     * Returns true if the devices is already registered, otherwise false.\n     * @type boolean\n     */\n    get isRegistered() {\n        return this.db.isDeviceRegistered;\n    }\n    /**\n     * Loads the Public VAPID Key which can be used to subscribe a Browser for Web Push notifications\n     * @return The public VAPID Web Push subscription key\n     */\n    loadWebPushKey() {\n        const msg = new message.VAPIDPublicKey();\n        msg.responseType('arraybuffer');\n        return this.db.send(msg).then((response) => response.entity);\n    }\n    register(os, tokenOrSubscription, device, doneCallback, failCallback) {\n        if (device instanceof Function) {\n            return this.register(os, tokenOrSubscription, null, device, doneCallback);\n        }\n        const subscription = typeof tokenOrSubscription === 'string' ? { token: tokenOrSubscription } : tokenOrSubscription;\n        return this.db.registerDevice(os, subscription, device).then(doneCallback, failCallback);\n    }\n    /**\n     * Uses the info from the given {@link PushMessage} message to send an push notification.\n     * @param pushMessage to send an push notification.\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    push(pushMessage, doneCallback, failCallback) {\n        return this.db.pushDevice(pushMessage).then(doneCallback, failCallback);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlRmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkRldmljZUZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLE9BQU8sTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTlDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVoRCxNQUFNLE9BQU8sYUFBYyxTQUFRLGFBQTJCO0lBQzVEOztPQUVHO0lBQ0gsSUFBVyxXQUFXO1FBQ3BCLE9BQU8sV0FBVyxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDO0lBQzFCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUFJLFlBQVk7UUFDZCxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsa0JBQWtCLENBQUM7SUFDcEMsQ0FBQztJQUVEOzs7T0FHRztJQUNILGNBQWM7UUFDWixNQUFNLEdBQUcsR0FBRyxJQUFJLE9BQU8sQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN6QyxHQUFHLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQTBCRCxRQUFRLENBQUMsRUFBVSxFQUFFLG1CQUE4QyxFQUFFLE1BQXNDLEVBQ3pHLFlBQWtCLEVBQUUsWUFBa0I7UUFDdEMsSUFBSSxNQUFNLFlBQVksUUFBUSxFQUFFO1lBQzlCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsbUJBQW1CLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztTQUMzRTtRQUVELE1BQU0sWUFBWSxHQUFHLE9BQU8sbUJBQW1CLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxtQkFBbUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQztRQUVwSCxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsQ0FBQztJQUMzRixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0gsSUFBSSxDQUFDLFdBQXdCLEVBQUUsWUFBa0IsRUFBRSxZQUFrQjtRQUNuRSxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDMUUsQ0FBQztDQUNGIn0=","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar _a;\nimport { PersistentError } from '../error';\nimport { Acl } from '../Acl';\nimport { uuid, trailingSlashIt, } from '../util';\nimport * as message from '../message';\nimport { StatusCode, } from '../connector';\nconst FILE_BUCKET = '/file';\nconst FILE_BUCKET_LENGTH = FILE_BUCKET.length;\nconst ID = Symbol('Id');\nconst METADATA = Symbol('Metadata');\nconst DATA = Symbol('Data');\n/**\n * Creates a file object, which represents one specific file reference.\n * This File object can afterwards be used to up- and download the file contents or to retrieves and change the files\n * metadata.\n *\n * The file data can be uploaded and downloaded as:\n *\n *  <table class=\"table\">\n *   <tr>\n *     <th>type</th>\n *     <th>JavaScript type</th>\n *     <th>Description</th>\n *   </tr>\n *   <tr>\n *     <td>'arraybuffer'</td>\n *     <td>ArrayBuffer</td>\n *     <td>The content is represented as a fixed-length raw binary data buffer</td>\n *   </tr>\n *   <tr>\n *     <td>'blob'</th>\n *     <td>Blob</td>\n *     <td>The content is represented as a simple blob</td>\n *   </tr>\n *   <tr>\n *     <td>'json'</td>\n *     <td>object|array|string</td>\n *     <td>The file content is represented as json</td>\n *   </tr>\n *   <tr>\n *     <td>'text'</td>\n *     <td>string</td>\n *     <td>The file content is represented through the string</td>\n *   </tr>\n *   <tr>\n *     <td>'base64'</td>\n *     <td>string</td>\n *     <td>The file content as base64 encoded string</td>\n *   </tr>\n *   <tr>\n *     <td>'data-url'</td>\n *     <td>string</td>\n *     <td>A data url which represents the file content</td>\n *   </tr>\n * </table>\n *\n */\nexport class File {\n    /**\n     * Creates a new file object which represents a file at the given id. Data which is provided to the constructor will\n     * be uploaded by invoking {@link upload()}\n     * @param fileOptions The fileOptions used to create a new file object, or just the id of the file\n     */\n    constructor(fileOptions) {\n        /**\n         * The database connection to use\n         */\n        this.db = null; // is lazy initialized and never null\n        this[_a] = null;\n        // Is fileOptions just an id?\n        const opt = typeof fileOptions === 'string' ? { id: fileOptions } : (fileOptions || {});\n        if (opt.id) {\n            // Check validity of id\n            const nameSeparator = opt.id.indexOf('/', '/file/'.length);\n            if (nameSeparator === -1 || opt.id.indexOf('/file/') !== 0) {\n                throw new Error(`Invalid file reference ${opt.id}`);\n            }\n            this[ID] = opt.id;\n        }\n        else {\n            this[ID] = this.createIdFromOptions(opt);\n        }\n        // Assign metadata\n        this.setDataOptions(opt);\n        this.isFolder = this.id.charAt(this.id.length - 1) === '/';\n    }\n    /**\n     * The complete id of the file, including folder and name\n     */\n    get id() {\n        return this[ID];\n    }\n    // @ts-ignore\n    get url() {\n        throw new Error('This method is removed. Use the asynchronous File.createURL() method instead.');\n    }\n    /**\n     * The name of the file\n     */\n    get name() {\n        return this.id.substring(this.id.lastIndexOf('/', this.id.length - 2) + 1);\n    }\n    /**\n     * The mimeType of the file, only accessible after fetching the metadata or downloading/uploading/providing the file\n     */\n    get mimeType() {\n        if (this.isFolder) {\n            throw new Error('A folder has no mimeType');\n        }\n        this.checkAvailable();\n        return this[METADATA].mimeType;\n    }\n    /**\n     * The current file acl, only accessible after fetching the metadata or downloading/uploading/providing the file\n     */\n    get acl() {\n        this.checkAvailable();\n        return this[METADATA].acl;\n    }\n    /**\n     * The last modified date of the file, only accessible after fetching the metadata\n     * or downloading/uploading/providing the eTag\n     */\n    get lastModified() {\n        if (this.isFolder) {\n            throw new Error('A folder has no lastModified');\n        }\n        this.checkAvailable();\n        return this[METADATA].lastModified;\n    }\n    /**\n     * The creation date of the file, only accessible after fetching the metadata\n     * or downloading/uploading/providing the eTag\n     */\n    get createdAt() {\n        if (this.isFolder) {\n            throw new Error('A folder has no creation date');\n        }\n        this.checkAvailable();\n        return this[METADATA].createdAt;\n    }\n    /**\n     * The eTag of the file, only accessible after fetching the metadata or downloading/uploading/providing the file\n     */\n    get eTag() {\n        if (this.isFolder) {\n            throw new Error('A folder has no eTag');\n        }\n        this.checkAvailable();\n        return this[METADATA].eTag;\n    }\n    /**\n     * The custom headers of the file, only accessible after fetching the metadata or downloading/uploading/providing\n     * the file\n     */\n    get headers() {\n        if (this.isFolder) {\n            throw new Error('A folder has no custom headers');\n        }\n        this.checkAvailable();\n        return this[METADATA].headers;\n    }\n    /**\n     * The size of the file, only accessible after fetching the metadata or downloading/uploading/providing the file\n     */\n    get size() {\n        if (this.isFolder) {\n            throw new Error('A folder has no size');\n        }\n        this.checkAvailable();\n        return this[METADATA].size;\n    }\n    /**\n     * The root bucket of this file\n     */\n    get bucket() {\n        return this.id.substring(FILE_BUCKET_LENGTH + 1, this.id.indexOf('/', FILE_BUCKET_LENGTH + 1));\n    }\n    /**\n     * The full path under the bucket of this file\n     */\n    get key() {\n        return this.id.substring(this.id.indexOf('/', FILE_BUCKET_LENGTH + 1) + 1);\n    }\n    /**\n     * The full path of the file.\n     */\n    get path() {\n        return this.id.substring(FILE_BUCKET_LENGTH);\n    }\n    /**\n     * The parent folder of the file.\n     */\n    get parent() {\n        return this.id.substring(FILE_BUCKET_LENGTH, this.id.lastIndexOf('/', this.id.length - 2));\n    }\n    /**\n     * Indicates if the metadata are loaded.\n     */\n    get isMetadataLoaded() {\n        return !!this[METADATA];\n    }\n    /**\n     * Parses an E-Tag header\n     * @param eTag The E-Tag to parse or something falsy\n     * @return Returns the parsed E-Tag or null, if it could not be parsed\n     */\n    static parseETag(eTag) {\n        if (!eTag) {\n            return null;\n        }\n        const match = eTag.match(/^(?:[wW]\\/)?[\"'](.*)[\"']$/);\n        if (!match) {\n            return null;\n        }\n        return match[1];\n    }\n    /**\n     * The fully url to the file, can be directly used to link the file, i.e. in link tags ot image sources\n     * @param authorize - Authorize the the link with an temporary token, to give authorized access to this protected\n     * resource default false if the root bucket is www, true otherwise\n     * @return A url with an optional token, to give direct access o the linked resource\n     */\n    createURL(authorize) {\n        if (this.isFolder) {\n            throw new Error('Url can not be created for folders.');\n        }\n        return this.db.createURL(this.id, typeof authorize === 'boolean' ? authorize : this.bucket !== 'www');\n    }\n    /**\n     * Uploads the file content which was provided in the constructor or by uploadOptions.data\n     * @param uploadOptions The upload options\n     * @param [uploadOptions.force=false] force the upload and overwrite any existing files without validating\n     * it\n     * @param [uploadOptions.progress] listen to progress changes during upload\n     * @param doneCallback The callback is invoked after the upload succeed successfully\n     * @param failCallback The callback is invoked if any error is occurred\n     * @return A promise which will be fulfilled with this file object where the metadata is updated\n     */\n    upload(uploadOptions, doneCallback, failCallback) {\n        var _b;\n        const opt = uploadOptions || {};\n        if (this.isFolder) {\n            throw new Error('A folder cannot be uploaded');\n        }\n        this.setDataOptions(opt);\n        const uploadMessage = new message.UploadFile(this.bucket, this.key)\n            .entity(this[DATA].data, (_b = this[DATA]) === null || _b === void 0 ? void 0 : _b.type);\n        const meta = this[METADATA];\n        if (meta) {\n            uploadMessage.acl(meta.acl);\n            uploadMessage.contentLength(meta.size);\n            uploadMessage.mimeType(meta.mimeType);\n            uploadMessage.customHeaders(meta.headers);\n        }\n        uploadMessage.progress(opt.progress || null);\n        this.conditional(uploadMessage, opt);\n        this.db.addToBlackList(this.id);\n        return this.db.send(uploadMessage).then((response) => {\n            this[DATA] = null;\n            this.fromJSON(response.entity);\n            return this;\n        }).then(doneCallback, failCallback);\n    }\n    /**\n     * Download a file and providing it in the requested type\n     * @param downloadOptions The download options\n     * @param downloadOptions.type=\"blob\" The type used to provide the file\n     * @param downloadOptions.refresh=false Indicates to make a revalidation request and not use the cache\n     * @param doneCallback The callback is invoked after the download succeed\n     * successfully\n     * @param failCallback The callback is invoked if any error is occurred\n     * @return A promise which will be fulfilled with the downloaded file content\n     */\n    download(downloadOptions, doneCallback, failCallback) {\n        const opt = downloadOptions || {};\n        if (this.isFolder) {\n            throw new Error('A folder cannot be downloaded');\n        }\n        const type = opt.type || 'blob';\n        const downloadMessage = new message.DownloadFile(this.bucket, this.key)\n            .responseType(type);\n        this.db.ensureCacheHeader(this.id, downloadMessage, opt.refresh);\n        return this.db.send(downloadMessage).then((response) => {\n            this.db.addToWhiteList(this.id);\n            this.fromHeaders(response.headers);\n            return response.entity;\n        }, (e) => {\n            if (e.status === StatusCode.OBJECT_NOT_FOUND) {\n                return null;\n            }\n            throw e;\n        }).then(doneCallback, failCallback);\n    }\n    /**\n     * Deletes a file\n     * @param deleteOptions The delete options\n     * @param deleteOptions.force=false force the deletion without verifying any version\n     * @param doneCallback The callback is invoked after the deletion succeed successfully\n     * @param failCallback The callback is invoked if any error is occurred\n     * @return A promise which will be fulfilled with this file object,\n     * or with a list of all deleted files, if this file is an folder\n     */\n    delete(deleteOptions, doneCallback, failCallback) {\n        const opt = deleteOptions || {};\n        const deleteMessage = new message.DeleteFile(this.bucket, this.key);\n        this.conditional(deleteMessage, opt);\n        if (!this.isFolder) {\n            this.db.addToBlackList(this.id);\n        }\n        return this.db.send(deleteMessage).then((response) => {\n            if (!this.isFolder) {\n                return this;\n            }\n            return response.entity.map((fileId) => new this.db.File(fileId));\n        }).then(doneCallback, failCallback);\n    }\n    /**\n     * Creates the file id from given options.\n     * @param fileOptions\n     * @return\n     */\n    createIdFromOptions(fileOptions) {\n        var _b;\n        let path;\n        if (fileOptions.path) {\n            path = fileOptions.path;\n        }\n        else {\n            const parent = trailingSlashIt(fileOptions.parent || '/www');\n            if (parent.length < 3) {\n                throw new Error(`Invalid parent name: ${parent}`);\n            }\n            const name = fileOptions.name || ((_b = fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.data) === null || _b === void 0 ? void 0 : _b.name) || uuid();\n            path = parent + name;\n        }\n        // Add leading slash if missing\n        if (path.charAt(0) !== '/') {\n            path = `/${path}`;\n        }\n        // Check path validity\n        if (path.indexOf('//') !== -1 || path.length < 3) {\n            throw new Error(`Invalid path: ${path}`);\n        }\n        return FILE_BUCKET + path;\n    }\n    /**\n     * Makes the given message a conditional request based on the file metadata\n     * @param msg The message to make conditional\n     * @param options additional request options\n     * @param options.force=false Force the request operation by didn't make it conditional\n     */\n    conditional(msg, options) {\n        if (options.force) {\n            return;\n        }\n        const meta = this[METADATA];\n        if (!meta || (!meta.lastModified && !meta.eTag)) {\n            msg.ifNoneMatch('*');\n            return;\n        }\n        msg.ifUnmodifiedSince(meta.lastModified);\n        msg.ifMatch(meta.eTag);\n    }\n    /**\n     * Gets the file metadata of a file\n     * @param options The load metadata options\n     * @param [options.refresh=false] Force a revalidation while fetching the metadata\n     * @param doneCallback The callback is invoked after the metadata is fetched\n     * @param failCallback The callback is invoked if any error has occurred\n     * @return A promise which will be fulfilled with this file\n     */\n    loadMetadata(options, doneCallback, failCallback) {\n        const opt = options || {};\n        if (this.isFolder) {\n            throw new Error('A folder has no mata data.');\n        }\n        const msg = new message.GetFileMetadata(this.bucket, this.key);\n        this.db.ensureCacheHeader(this.id, msg, opt.refresh);\n        return this.db.send(msg).then((response) => {\n            // do not white list the file, because head-request does not revalidate the cache.\n            this.fromHeaders(response.headers);\n            return this;\n        }, (e) => {\n            if (e.status === StatusCode.OBJECT_NOT_FOUND) {\n                return null;\n            }\n            throw e;\n        }).then(doneCallback, failCallback);\n    }\n    /**\n     * Updates the mata data of this file.\n     * @param options The save metadata options\n     * @param [options.force=false] force the update and overwrite the existing metadata without validating it\n     * @param doneCallback The callback is invoked after the metadata is saved\n     * @param failCallback The callback is invoked if any error has occurred\n     * @return A promise which will be fulfilled with this file\n     */\n    saveMetadata(options, doneCallback, failCallback) {\n        const opt = options || {};\n        const json = this.toJSON();\n        const msg = new message.UpdateFileMetadata(this.bucket, this.key)\n            .entity(json);\n        this.conditional(msg, opt);\n        return this.db.send(msg).then((response) => {\n            this.fromJSON(response.entity);\n            return this;\n        }).then(doneCallback, failCallback);\n    }\n    /**\n     * Validates and sets the file metadata based on the given options\n     * @param options\n     * @private\n     */\n    setDataOptions(options) {\n        const { data, type } = options, metadata = __rest(options, [\"data\", \"type\"]);\n        if (!data) {\n            return;\n        }\n        // Set data\n        this[DATA] = { type, data };\n        const mimeType = this.guessMimeType(options) || undefined;\n        this.fromJSON(Object.assign(Object.assign({}, metadata), { mimeType }));\n    }\n    /**\n     * Gets the MIME type of given file options.\n     * @param options\n     * @return Returns the guessed MIME type or null, if it could not be guessed.\n     * @private\n     */\n    guessMimeType(options) {\n        const { mimeType } = options;\n        if (mimeType) {\n            return mimeType;\n        }\n        if (typeof Blob !== 'undefined' && options.data instanceof Blob) {\n            return options.data.type;\n        }\n        if (options.type === 'data-url' && typeof options.data === 'string') {\n            const match = options.data.match(/^data:(.+?)(;base64)?,.*$/);\n            return match && match[1];\n        }\n        return null;\n    }\n    /**\n     * @param headers\n     */\n    fromHeaders(headers) {\n        this.fromJSON({\n            eTag: File.parseETag(headers.etag),\n            lastModified: headers['last-modified'],\n            createdAt: headers['baqend-created-at'],\n            mimeType: headers['content-type'],\n            acl: headers['baqend-acl'] && JSON.parse(headers['baqend-acl']),\n            size: +headers['baqend-size'],\n            headers: headers['baqend-custom-headers'] && JSON.parse(headers['baqend-custom-headers']),\n        });\n    }\n    /**\n     * Deserialize the given JSON file metadata back to this file instance\n     *\n     * If the JSON object contains an ID, it must match with this file ID, otherwise an exception is thrown.\n     *\n     * @param json The json to deserialize\n     */\n    fromJSON(json) {\n        const { id } = json;\n        if (id && this.id !== id) {\n            throw new Error(`This file id ${this.id} does not match the given json id ${id}`);\n        }\n        const meta = this[METADATA] || {};\n        let acl;\n        if (json.acl instanceof Acl) {\n            acl = json.acl;\n        }\n        else {\n            acl = meta.acl || new Acl();\n            if (json.acl) {\n                acl.fromJSON(json.acl);\n            }\n        }\n        // keep last known lastModified, createdAt, eTag and headers\n        this[METADATA] = Object.assign(Object.assign({}, this[METADATA]), { mimeType: json.mimeType, lastModified: (json.lastModified && new Date(json.lastModified)) || meta.lastModified, createdAt: (json.createdAt && new Date(json.createdAt)) || meta.createdAt, eTag: json.eTag || meta.eTag, acl, size: typeof json.size === 'number' ? json.size : json.contentLength, headers: json.headers || meta.headers || {} });\n    }\n    /**\n     * Serialize the file metadata of this object to json\n     * @return The serialized file metadata as json\n     */\n    toJSON() {\n        var _b;\n        this.checkAvailable();\n        const meta = this[METADATA];\n        return {\n            id: this.id,\n            mimeType: meta.mimeType,\n            eTag: meta.eTag,\n            acl: (_b = meta.acl) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            size: meta.size,\n            lastModified: meta.lastModified && meta.lastModified.toISOString(),\n            createdAt: meta.createdAt && meta.createdAt.toISOString(),\n            headers: meta.headers,\n        };\n    }\n    /**\n     * Checks whenever metadata are already loaded of the file, throws an error otherwise\n     * @return\n     */\n    checkAvailable() {\n        if (!this.isMetadataLoaded) {\n            throw new PersistentError(`The file metadata of ${this.id} is not available.`);\n        }\n    }\n}\n_a = DATA;\n//# sourceMappingURL=data:application/json;base64,","import { Factory } from './Factory';\nimport { File } from './File';\nimport * as message from '../message';\nimport { trailingSlashIt } from '../util';\nimport { StatusCode } from '../connector';\nimport { Permission } from '../intersection';\nexport class FileFactory extends Factory {\n    constructor() {\n        super(...arguments);\n        /**\n         * The owning EntityManager where this factory belongs to\n         */\n        this.db = null;\n    }\n    /**\n     * Creates a new FileFactory for the given type\n     * @param db\n     * @return A new file factory\n     */\n    static create(db) {\n        const factory = this.createFactory(File);\n        factory.db = db;\n        return factory;\n    }\n    /**\n     * Creates a new file\n     * @param args Constructor arguments used for instantiation, the constructor will not be called\n     * when no arguments are passed\n     * @return A new created file\n     */\n    newInstance(args) {\n        const instance = super.newInstance(args);\n        instance.db = this.db;\n        return instance;\n    }\n    /**\n     * Deserialize the file metadata from a json object back to a new file instance\n     * @param json The file metadata as json\n     * @return The deserialize File instance\n     */\n    fromJSON(json) {\n        const file = this.newInstance([json.id]);\n        file.fromJSON(json);\n        return file;\n    }\n    /**\n     * Updates the metadata of the root file directory formally the file \"bucket\"\n     * @param bucket The name of the root file directory\n     * @param metadata The new metadata for the bucket\n     * @param doneCallback Invoked if the operation succeeds\n     * @param failCallback The callback is invoked if any error has occurred\n     * @return A promise which will fulfilled with the updated metadata\n     */\n    saveMetadata(bucket, metadata, doneCallback, failCallback) {\n        const msg = new message.SetFileBucketMetadata(bucket, metadata);\n        return this.db.send(msg).then(doneCallback, failCallback);\n    }\n    /**\n     * Gets the metadata of the root folder (formally the file \"bucket\")\n     * @param bucket The name of the root file directory\n     * @param options The load metadata options\n     * @param [options.refresh=false] Force a revalidation while fetching the metadata\n     * @param doneCallback\n     * The callback is invoked after the metadata is fetched\n     * @param failCallback The callback is invoked if any error has occurred\n     * @return A promise which will be fulfilled with the bucket ACLs\n     */\n    loadMetadata(bucket, options, doneCallback, failCallback) {\n        const msg = new message.GetFileBucketMetadata(bucket);\n        // this._db.ensureCacheHeader(this.id, msg, options.refresh);\n        // do not white list the file, because head-request does not revalidate the cache.\n        return this.db.send(msg).then((response) => {\n            const result = {};\n            Permission.BASE_PERMISSIONS.forEach((key) => {\n                result[key] = Permission.fromJSON(response.entity[key] || {});\n            });\n            return result;\n        }, (e) => {\n            if (e.status === StatusCode.OBJECT_NOT_FOUND) {\n                return null;\n            }\n            throw e;\n        }).then(doneCallback, failCallback);\n    }\n    /**\n     * Lists all the buckets.\n     * @param doneCallback The callback is invoked with the listed buckets\n     * @param failCallback The callback is invoked if any error has occurred\n     * @return The listed buckets.\n     */\n    listBuckets(doneCallback, failCallback) {\n        return this.db.send(new message.ListBuckets()).then((response) => (response.entity.map((bucket) => this.new(`${bucket}/`)))).then(doneCallback, failCallback);\n    }\n    /**\n     * Lists the files (and folders) in the given folder.\n     *\n     * @param folderOrPath The folder/path to list.\n     * @param start The file/folder from where to start listing (not included)\n     * @param count The maximum number of files to return.\n     * @param doneCallback The callback is invoked with the listed files\n     * @param failCallback The callback is invoked if any error has occurred\n     * @return The listed files/folders.\n     */\n    listFiles(folderOrPath, start, count, doneCallback, failCallback) {\n        let folder;\n        if (typeof folderOrPath === 'string') {\n            const path = trailingSlashIt(folderOrPath);\n            folder = this.new({ path });\n        }\n        else {\n            folder = folderOrPath;\n        }\n        const path = folder.key;\n        const { bucket } = folder;\n        return this.db.send(new message.ListFiles(bucket, path, start ? start.key : undefined, count)).then((response) => (response.entity.map((file) => this.new(file)))).then(doneCallback, failCallback);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsZUZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJGaWxlRmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxJQUFJLEVBQWUsTUFBTSxRQUFRLENBQUM7QUFDM0MsT0FBTyxLQUFLLE9BQU8sTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFXLGVBQWUsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUNuRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQStCN0MsTUFBTSxPQUFPLFdBQVksU0FBUSxPQUFhO0lBQTlDOztRQVlFOztXQUVHO1FBQ0ksT0FBRSxHQUFrQixJQUFXLENBQUM7SUEyR3pDLENBQUM7SUF6SEM7Ozs7T0FJRztJQUNILE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBaUI7UUFDN0IsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBb0IsSUFBSSxDQUFDLENBQUM7UUFDNUQsT0FBTyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDaEIsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztJQU9EOzs7OztPQUtHO0lBQ0gsV0FBVyxDQUFDLElBQXFCO1FBQy9CLE1BQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekMsUUFBUSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ3RCLE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsUUFBUSxDQUFDLElBQWE7UUFDcEIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFZLENBQUMsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxR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","/**\n * This decorator modifies the enumerable flag of an class member\n * @param value - the enumerable value of the property descriptor\n */\nexport function enumerable(value) {\n    return function decorate(target, propertyKey, descriptor) {\n        // eslint-disable-next-line no-param-reassign\n        descriptor.enumerable = value;\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW51bWVyYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImVudW1lcmFibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLFVBQVUsQ0FBQyxLQUFjO0lBQ3ZDLE9BQU8sU0FBUyxRQUFRLENBQ3RCLE1BQVcsRUFDWCxXQUFtQixFQUNuQixVQUE4QjtRQUU5Qiw2Q0FBNkM7UUFDN0MsVUFBVSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDaEMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyJ9","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { enumerable } from '../util/enumerable';\nimport { Enhancer } from './Enhancer';\nimport { Metadata } from '../intersection';\nexport class Managed {\n    /**\n     * Initialize the given instance\n     * @param instance The managed instance to initialize\n     * @param properties The optional properties to set on the instance\n     */\n    static init(instance, properties) {\n        const type = Enhancer.getBaqendType(instance.constructor);\n        if (type.isEntity) {\n            Object.defineProperty(instance, '_metadata', {\n                value: Metadata.create(type),\n                configurable: true,\n            });\n        }\n        if (properties) {\n            Object.assign(instance, properties);\n        }\n    }\n    /**\n     * Creates a subclass of this class\n     * @param {Class<*>} childClass\n     * @return {Class<*>} The extended child class\n     */\n    static extend(childClass) {\n        // eslint-disable-next-line no-param-reassign\n        childClass.prototype = Object.create(this.prototype, {\n            constructor: {\n                value: childClass,\n                configurable: true,\n                writable: true,\n            },\n        });\n        // eslint-disable-next-line no-param-reassign\n        childClass.extend = Managed.extend;\n        return childClass;\n    }\n    /**\n     * The default constructor, copy all given properties to this object\n     * @param properties - The optional properties to copy\n     */\n    constructor(properties) {\n        Managed.init(this, properties);\n    }\n    /**\n     * Returns this object identifier or the baqend type of this object\n     * @return the object id or type whatever is available\n     */\n    toString() {\n        const type = Enhancer.getBaqendType(this.constructor);\n        return type.ref;\n    }\n    /**\n     * Converts the managed object to an JSON-Object.\n     * @return JSON-Object\n     * @method\n     */\n    toJSON() {\n        const type = Enhancer.getBaqendType(this.constructor);\n        return type.toJsonValue(Metadata.create(type), this, { persisting: false });\n    }\n}\n__decorate([\n    enumerable(false)\n], Managed.prototype, \"toString\", null);\n__decorate([\n    enumerable(false)\n], Managed.prototype, \"toJSON\", null);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFuYWdlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk1hbmFnZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRWhELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBZTNDLE1BQU0sT0FBTyxPQUFPO0lBQ2xCOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQWlCLEVBQUUsVUFBc0M7UUFDbkUsTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFFLENBQUM7UUFDM0QsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLE1BQU0sQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLFdBQVcsRUFBRTtnQkFDM0MsS0FBSyxFQUFFLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBdUIsQ0FBQztnQkFDL0MsWUFBWSxFQUFFLElBQUk7YUFDbkIsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxJQUFJLFVBQVUsRUFBRTtZQUNkLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQ3JDO0lBQ0gsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQWlDO1FBQzdDLDZDQUE2QztRQUM3QyxVQUFVLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNuRCxXQUFXLEVBQUU7Z0JBQ1gsS0FBSyxFQUFFLFVBQVU7Z0JBQ2pCLFlBQVksRUFBRSxJQUFJO2dCQUNsQixRQUFRLEVBQUUsSUFBSTthQUNmO1NBQ0YsQ0FBQyxDQUFDO1FBQ0gsNkNBQTZDO1FBQzVDLFVBQWtCLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDNUMsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztJQUVEOzs7T0FHRztJQUNILFlBQVksVUFBc0M7UUFDaEQsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVEOzs7T0FHRztJQUVILFFBQVE7UUFDTixNQUFNLElBQUksR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN0RCxPQUFPLElBQUssQ0FBQyxHQUFHLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7O09BSUc7SUFFSCxNQUFNO1FBQ0osTUFBTSxJQUFJLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFFLENBQUM7UUFDdkQsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDOUUsQ0FBQztDQUNGO0FBZkM7SUFEQyxVQUFVLENBQUMsS0FBSyxDQUFDO3VDQUlqQjtBQVFEO0lBREMsVUFBVSxDQUFDLEtBQUssQ0FBQztxQ0FJakIifQ==","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Managed } from './Managed';\nimport { EntityPartialUpdateBuilder } from '../partialupdate';\nimport { enumerable } from '../util/enumerable';\nimport { PersistentError } from '../error';\nimport { Enhancer } from './Enhancer';\nexport class Entity extends Managed {\n    /**\n     * The unique id of this object\n     *\n     * Sets the unique id of this object, if the id is not formatted as an valid id,\n     * it will be used as the key component of the id has the same affect as setting the key\n     *\n     * @type string\n     */\n    get id() {\n        return this._metadata.id;\n    }\n    set id(value) {\n        if (this._metadata.id) {\n            throw new Error(`The id can't be set twice: ${value}`);\n        }\n        const val = `${value}`;\n        if (val.indexOf(`/db/${this._metadata.bucket}/`) === 0) {\n            this._metadata.id = value;\n        }\n        else {\n            this.key = value;\n        }\n    }\n    /**\n     * The unique key part of the id\n     * When the key of the unique id is set an error will be thrown if an id is already set.\n     * @type string\n     */\n    get key() {\n        return this._metadata.key;\n    }\n    set key(value) {\n        this._metadata.key = value;\n    }\n    /**\n     * The version of this object\n     * @type number\n     * @readonly\n     */\n    get version() {\n        return this._metadata.version;\n    }\n    /**\n     * The object read/write permissions\n     * @type Acl\n     * @readonly\n     */\n    get acl() {\n        this._metadata.throwUnloadedPropertyAccess('acl');\n        return this._metadata.acl;\n    }\n    /**\n     * Attach this object to the given db\n     * @param db The db which will be used for future crud operations\n     * @return\n     */\n    attach(db) {\n        db.attach(this);\n    }\n    ready(doneCallback) {\n        return this._metadata.ready().then(() => this).then(doneCallback);\n    }\n    /**\n     * Saves the object. Inserts the object if it doesn't exists and updates the object if the object exist.\n     * @param [options] The save options\n     * @param [options.force=false] Force the save operation, the version will not be validated.\n     * @param [options.depth=0] The object depth which will be saved. Depth 0 save this object only,\n     * <code>true</code> saves the objects by reachability.\n     * @param [options.refresh=false] Refresh the local object state from remote.\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return A Promise that will be fulfilled when the asynchronous operation completes.\n     */\n    save(options, doneCallback, failCallback) {\n        if (typeof options === 'function') {\n            return this.save({}, options, doneCallback);\n        }\n        return this._metadata.db.save(this, options).then(doneCallback, failCallback);\n    }\n    /**\n     * Inserts a new object. Inserts the object if it doesn't exists and raise an error if the object already exist.\n     * @param [options] The insertion options\n     * @param [options.depth=0] The object depth which will be inserted. Depth 0 insert this object only,\n     * <code>true</code> inserts objects by reachability.\n     * @param [options.refresh=false] Refresh the local object state from remote.\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return A Promise that will be fulfilled when the asynchronous operation completes.\n     * @method\n     */\n    insert(options, doneCallback, failCallback) {\n        if (typeof options === 'function') {\n            return this.insert({}, options, doneCallback);\n        }\n        return this._metadata.db.insert(this, options).then(doneCallback, failCallback);\n    }\n    /**\n     * Updates an existing object\n     *\n     * Updates the object if it exists and raise an error if the object doesn't exist.\n     *\n     * @param [options] The update options\n     * @param [options.force=false] Force the update operation,\n     * the version will not be validated, only existence will be checked.\n     * @param [options.depth=0] The object depth which will be updated. Depth 0 updates this object only,\n     * <code>true</code> updates objects by reachability.\n     * @param [options.refresh=false] Refresh the local object state from remote.\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return A Promise that will be fulfilled when the asynchronous operation completes.\n     * @method\n     */\n    update(options, doneCallback, failCallback) {\n        if (typeof options === 'function') {\n            return this.update({}, options, doneCallback);\n        }\n        return this._metadata.db.update(this, options).then(doneCallback, failCallback);\n    }\n    /**\n     * Resolves the referenced object in the specified depth\n     *\n     * Only unresolved objects will be loaded unless the refresh option is specified.\n     *\n     * Removed objects will be marked as removed.\n     * @param [options] The load options\n     * @param [options.depth=0] The object depth which will be loaded. Depth set to <code>true</code>\n     * loads objects by reachability.\n     * @param [options.refresh=false] Refresh the local object state from remote.\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return A Promise that will be fulfilled when the asynchronous operation completes.\n     * @method\n     */\n    load(options, doneCallback, failCallback) {\n        if (typeof options === 'function') {\n            return this.load({}, options, doneCallback);\n        }\n        const opt = Object.assign({ local: true }, options);\n        if (this.id === null) {\n            throw new PersistentError(\"This object can't be loaded, it does have an id.\");\n        }\n        return this._metadata.db.load(this.id, undefined, opt).then(doneCallback, failCallback);\n    }\n    /**\n     * Deletes an existing object\n     *\n     * @param [options] The remove options\n     * @param [options.force=false] Force the remove operation, the version will not be validated.\n     * @param [options.depth=0] The object depth which will be removed. Depth 0 removes this object only,\n     * <code>true</code> removes objects by reachability.\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return A Promise that will be fulfilled when the asynchronous operation completes.\n     * @method\n     */\n    delete(options, doneCallback, failCallback) {\n        if (typeof options === 'function') {\n            return this.delete({}, options, doneCallback);\n        }\n        return this._metadata.db.delete(this, options).then(doneCallback, failCallback);\n    }\n    /**\n     * Saves the object and repeats the operation if the object is out of date\n     *\n     * In each pass the callback will be called. Ths first parameter of the callback is the entity and the second one\n     * is a function to abort the process.\n     *\n     * @param cb Will be called in each pass\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return A Promise that will be fulfilled when the asynchronous operation completes.\n     * @method\n     */\n    optimisticSave(cb, doneCallback, failCallback) {\n        return this._metadata.db.optimisticSave(this, cb).then(doneCallback, failCallback);\n    }\n    attr() {\n        throw new Error('Attr is not yet implemented.');\n    }\n    /**\n     * Validates the entity by using the validation code of the entity type\n     *\n     * @return Contains the result of the Validation\n     * @method\n     */\n    validate() {\n        return this._metadata.db.validate(this);\n    }\n    /**\n     * Starts a partial update on this entity\n     *\n     * @param operations initial operations which should be executed\n     * @return\n     */\n    partialUpdate(operations) {\n        return new EntityPartialUpdateBuilder(this, operations);\n    }\n    /**\n     * Get all objects which refer to this object\n     *\n     * @param [options] Some options to pass\n     * @param [options.classes] An array of class names to filter for, null for no filter\n     * @return A promise resolving with an array of all referencing objects\n     * @method\n     */\n    getReferencing(options) {\n        const { db } = this._metadata;\n        const references = this._metadata.type.getReferencing(db, options);\n        // Query all possibly referencing objects\n        const allResults = Array.from(references).map(([ref, attrs]) => {\n            // Create query for given entity\n            const qb = db.createQueryBuilder(ref.typeConstructor);\n            // Add term for each attribute\n            const terms = [];\n            attrs.forEach((attr) => {\n                terms.push(qb.equal(attr, this));\n            });\n            // If more than one term, put everything in a disjunction\n            const query = terms.length === 1 ? terms[0] : qb.or(terms);\n            return query.resultList();\n        });\n        return Promise.all(allResults).then((results) => (\n        // Filter out all objects which did not match\n        results.filter((result) => !!result.length))).then((results) => (\n        // Flat the array of results\n        Array.prototype.concat.apply([], results)));\n    }\n    /**\n     * Returns this object identifier or the baqend type of this object\n     * @return the object id or type whatever is available\n     */\n    toString() {\n        const type = Enhancer.getBaqendType(this.constructor);\n        return this.id || type.ref;\n    }\n    /**\n     * Converts the object to an JSON-Object\n     * @param [options=false] to json options by default excludes the metadata\n     * @param [options.excludeMetadata=false] Excludes the metadata form the serialized json\n     * @param [options.depth=0] Includes up to depth referenced objects into the serialized json\n     * @return JSON-Object\n     * @method\n     */\n    toJSON(options) {\n        // JSON.stringify calls toJSON with the parent key as the first argument.\n        // Therefore ignore all unknown option types.\n        let opt = options;\n        if (typeof opt === 'boolean') {\n            opt = {\n                excludeMetadata: opt,\n            };\n        }\n        if (typeof opt !== 'object') {\n            opt = {};\n        }\n        const state = this._metadata;\n        return state.type.toJsonValue(state, this, opt);\n    }\n}\n__decorate([\n    enumerable(true)\n], Entity.prototype, \"id\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"key\", null);\n__decorate([\n    enumerable(true)\n], Entity.prototype, \"version\", null);\n__decorate([\n    enumerable(true)\n], Entity.prototype, \"acl\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"attach\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"ready\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"save\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"insert\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"update\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"load\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"delete\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"optimisticSave\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"attr\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"validate\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"partialUpdate\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"getReferencing\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"toString\", null);\n__decorate([\n    enumerable(false)\n], Entity.prototype, \"toJSON\", null);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW50aXR5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiRW50aXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDcEMsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFLM0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQVF0QyxNQUFNLE9BQU8sTUFBTyxTQUFRLE9BQU87SUFtQmpDOzs7Ozs7O09BT0c7SUFFSCxJQUFJLEVBQUU7UUFDSixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFJLEVBQUUsQ0FBQyxLQUFvQjtRQUN6QixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFO1lBQ3JCLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLEtBQUssRUFBRSxDQUFDLENBQUM7U0FDeEQ7UUFFRCxNQUFNLEdBQUcsR0FBRyxHQUFHLEtBQUssRUFBRSxDQUFDO1FBQ3ZCLElBQUksR0FBRyxDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDdEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEdBQUcsS0FBSyxDQUFDO1NBQzNCO2FBQU07WUFDTCxJQUFJLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQztTQUNsQjtJQUNILENBQUM7SUFFRDs7OztPQUlHO0lBRUgsSUFBSSxHQUFHO1FBQ0wsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBSSxHQUFHLENBQUMsS0FBSztRQUNYLElBQUks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","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { enumerable } from '../util/enumerable';\nimport { Entity } from './Entity';\nexport class User extends Entity {\n    /**\n     * Change the password of the given user\n     *\n     * @param currentPassword Current password of the user\n     * @param password New password of the user\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    newPassword(currentPassword, password, doneCallback, failCallback) {\n        return this._metadata.db.newPassword(this.username, currentPassword, password).then(doneCallback, failCallback);\n    }\n    /**\n     * Change the username of the current user\n     *\n     * @param newUsername New username for the current user\n     * @param password The password of the current user\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    changeUsername(newUsername, password, doneCallback, failCallback) {\n        return this._metadata.db.changeUsername(this.username, newUsername, password).then(doneCallback, failCallback);\n    }\n    /**\n     * Requests a perpetual token for the user\n     *\n     * Only users with the admin role are allowed to request an API token.\n     *\n     * @param doneCallback Called when the operation succeed.\n     * @param failCallback Called when the operation failed.\n     * @return\n     */\n    requestAPIToken(doneCallback, failCallback) {\n        return this._metadata.db.requestAPIToken(this.constructor, this)\n            .then(doneCallback, failCallback);\n    }\n}\n__decorate([\n    enumerable(false)\n], User.prototype, \"newPassword\", null);\n__decorate([\n    enumerable(false)\n], User.prototype, \"changeUsername\", null);\n__decorate([\n    enumerable(false)\n], User.prototype, \"requestAPIToken\", null);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlVzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFJbEMsTUFBTSxPQUFPLElBQUssU0FBUSxNQUFNO0lBVzlCOzs7Ozs7OztPQVFHO0lBRUgsV0FBVyxDQUFDLGVBQXVCLEVBQUUsUUFBZ0IsRUFBRSxZQUFrQixFQUFFLFlBQWtCO1FBQzNGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFVLEVBQUUsZUFBZSxFQUFFLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDcEgsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBRUgsY0FBYyxDQUFDLFdBQW1CLEVBQUUsUUFBZ0IsRUFBRSxZQUFrQixFQUFFLFlBQWtCO1FBQzFGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFVLEVBQUUsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDbkgsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBRUgsZUFBZSxDQUFDLFlBQWtCLEVBQUUsWUFBa0I7UUFDcEQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQWdDLEVBQUUsSUFBSSxDQUFDO2FBQ2xGLElBQUksQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDdEMsQ0FBQztDQUNGO0FBaENDO0lBREMsVUFBVSxDQUFDLEtBQUssQ0FBQzt1Q0FHakI7QUFZRDtJQURDLFVBQVUsQ0FBQyxLQUFLLENBQUM7MENBR2pCO0FBWUQ7SUFEQyxVQUFVLENBQUMsS0FBSyxDQUFDOzJDQUlqQiJ9","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { User } from './User';\nimport { Entity } from './Entity';\nimport { enumerable } from '../util/enumerable';\nexport class Role extends Entity {\n    constructor() {\n        super(...arguments);\n        /**\n         * A set of users which have this role\n         */\n        this.users = null;\n        /**\n         * The name of the role\n         */\n        this.name = null;\n    }\n    /**\n     * Test if the given user has this role\n     * @param user The user to check\n     * @return <code>true</code> if the given user has this role,\n     * otherwise <code>false</code>\n     */\n    hasUser(user) {\n        return !!this.users && this.users.has(user);\n    }\n    /**\n     * Add the given user to this role\n     * @param user The user to add\n     */\n    addUser(user) {\n        if (user instanceof User) {\n            if (!this.users) {\n                this.users = new Set();\n            }\n            this.users.add(user);\n        }\n        else {\n            throw new Error('Only user instances can be added to a role.');\n        }\n    }\n    /**\n     * Remove the given user from this role\n     * @param user The user to remove\n     */\n    removeUser(user) {\n        if (user instanceof User) {\n            if (this.users) {\n                this.users.delete(user);\n            }\n        }\n        else {\n            throw new Error('Only user instances can be removed from a role.');\n        }\n    }\n}\n__decorate([\n    enumerable(false)\n], Role.prototype, \"hasUser\", null);\n__decorate([\n    enumerable(false)\n], Role.prototype, \"addUser\", null);\n__decorate([\n    enumerable(false)\n], Role.prototype, \"removeUser\", null);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm9sZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlJvbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUM5QixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVoRCxNQUFNLE9BQU8sSUFBSyxTQUFRLE1BQU07SUFBaEM7O1FBQ0U7O1dBRUc7UUFDSSxVQUFLLEdBQTJCLElBQUksQ0FBQztRQUU1Qzs7V0FFRztRQUNJLFNBQUksR0FBa0IsSUFBSSxDQUFDO0lBNENwQyxDQUFDO0lBMUNDOzs7OztPQUtHO0lBRUgsT0FBTyxDQUFDLElBQWdCO1FBQ3RCLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVEOzs7T0FHRztJQUVILE9BQU8sQ0FBQyxJQUFnQjtRQUN0QixJQUFJLElBQUksWUFBWSxJQUFJLEVBQUU7WUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO2FBQ3hCO1lBRUQsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDdEI7YUFBTTtZQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsNkNBQTZDLENBQUMsQ0FBQztTQUNoRTtJQUNILENBQUM7SUFFRDs7O09BR0c7SUFFSCxVQUFVLENBQUMsSUFBZ0I7UUFDekIsSUFBSSxJQUFJLFlBQVksSUFBSSxFQUFFO1lBQ3hCLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtnQkFDZCxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN6QjtTQUNGO2FBQU07WUFDTCxNQUFNLElBQUksS0FBSyxDQUFDLGlEQUFpRCxDQUFDLENBQUM7U0FDcEU7SUFDSCxDQUFDO0NBQ0Y7QUFuQ0M7SUFEQyxVQUFVLENBQUMsS0FBSyxDQUFDO21DQUdqQjtBQU9EO0lBREMsVUFBVSxDQUFDLEtBQUssQ0FBQzttQ0FXakI7QUFPRDtJQURDLFVBQVUsQ0FBQyxLQUFLLENBQUM7c0NBU2pCIn0=","export { Accessor } from './Accessor';\nexport { Enhancer } from './Enhancer';\nexport { Factory } from './Factory';\nexport { ManagedFactory } from './ManagedFactory';\nexport { EntityFactory } from './EntityFactory';\nexport { LoginOption, UserFactory } from './UserFactory';\nexport { DeviceFactory } from './DeviceFactory';\nexport { FileFactory } from './FileFactory';\nexport { Managed } from './Managed';\nexport { Entity } from './Entity';\nexport { Role } from './Role';\nexport { User } from './User';\nexport { File, } from './File';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUFFLE9BQU8sRUFBbUIsTUFBTSxXQUFXLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBZ0IsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBc0IsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDcEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNsQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzlCLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDOUIsT0FBTyxFQUNTLElBQUksR0FDbkIsTUFBTSxRQUFRLENBQUMifQ==","export const isNode = false;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXMtbm9kZS1icm93c2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaXMtbm9kZS1icm93c2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMifQ==","export const atob = window.atob.bind(window);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXRvYi1icm93c2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXRvYi1icm93c2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyJ9","export function hmac(message, key) {\n    const encoder = new TextEncoder();\n    return Promise.resolve(crypto.subtle.importKey('raw', // raw format of the key - should be Uint8Array\n    encoder.encode(key), {\n        name: 'HMAC',\n        hash: { name: 'SHA-1' },\n    }, false, // export = false\n    ['sign', 'verify']))\n        .then((cryptoKey) => crypto.subtle.sign('HMAC', cryptoKey, encoder.encode(message)))\n        .then((signature) => {\n        const byteArray = new Uint8Array(signature);\n        return byteArray.reduce((token, x) => token + x.toString(16).padStart(2, '0'), '');\n    });\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG1hYy1icm93c2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaG1hYy1icm93c2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sVUFBVSxJQUFJLENBQUMsT0FBZSxFQUFFLEdBQVc7SUFDL0MsTUFBTSxPQUFPLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQztJQUVsQyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQ3BCLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUNyQixLQUFLLEVBQUUsK0NBQStDO0lBQ3RELE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQ25CO1FBQ0UsSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFO0tBQ3hCLEVBQ0QsS0FBSyxFQUFFLGlCQUFpQjtJQUN4QixDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FDbkIsQ0FDRjtTQUNFLElBQUksQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDbkYsSUFBSSxDQUFDLENBQUMsU0FBUyxFQUFFLEVBQUU7UUFDbEIsTUFBTSxTQUFTLEdBQUcsSUFBSSxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUMsT0FBTyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNyRixDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMifQ==","/**\n * This base class provides an lock interface to execute exclusive operations\n */\nexport class Lockable {\n    constructor() {\n        /**\n         * Indicates if there is currently an onging exclusive operation\n         * @type boolean\n         * @private\n         */\n        this.isLocked = false;\n        /**\n         * A promise which represents the state of the least exclusive operation\n         * @type Promise\n         * @private\n         */\n        this.readyPromise = Promise.resolve(this);\n    }\n    /**\n     * Indicates if there is currently no exclusive operation executed\n     * <code>true</code> If no exclusive lock is hold\n     */\n    get isReady() {\n        return !this.isLocked;\n    }\n    /**\n     * Waits on the previously requested operation and calls the doneCallback if the operation is fulfilled\n     * @param doneCallback The callback which will be invoked when the previously\n     * operations on this object is completed.\n     * @param failCallback When the lock can't be released caused by a none\n     * recoverable error\n     * @return A promise which completes successfully, when the previously requested\n     * operation completes\n     */\n    ready(doneCallback, failCallback) {\n        return this.readyPromise.then(doneCallback, failCallback);\n    }\n    /**\n     * Try to aquire an exclusive lock and executes the given callback.\n     * @param callback The exclusive operation to execute\n     * @param [critical=false] Indicates if the operation is critical. If the operation is critical and the\n     * operation fails, then the lock will not be released\n     * @return A promise\n     * @throws If the lock can't be aquired\n     * @protected\n     */\n    withLock(callback, critical = false) {\n        if (this.isLocked) {\n            throw new Error('Current operation has not been finished.');\n        }\n        try {\n            this.isLocked = true;\n            const result = callback().then((res) => {\n                this.isLocked = false;\n                return res;\n            }, (e) => {\n                if (!critical) {\n                    this.isLocked = false;\n                }\n                throw e;\n            });\n            this.readyPromise = result.then(() => this, (e) => {\n                if (!critical) {\n                    return this;\n                }\n                throw e;\n            });\n            return result;\n        }\n        catch (e) {\n            if (critical) {\n                this.readyPromise = Promise.reject(e);\n            }\n            else {\n                this.isLocked = false;\n            }\n            throw e;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9ja2FibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJMb2NrYWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUNILE1BQU0sT0FBTyxRQUFRO0lBS25CO1FBQ0U7Ozs7V0FJRztRQUNILElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBRXRCOzs7O1dBSUc7UUFDSCxJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVEOzs7T0FHRztJQUNILElBQUksT0FBTztRQUNULE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3hCLENBQUM7SUFFRDs7Ozs7Ozs7T0FRRztJQUNILEtBQUssQ0FBQyxZQUFrQyxFQUFFLFlBQW9DO1FBQzVFLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQzVELENBQUM7SUFFRDs7Ozs7Ozs7T0FRRztJQUNILFFBQVEsQ0FBSSxRQUEwQixFQUFFLFFBQVEsR0FBRyxLQUFLO1FBQ3RELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLDBDQUEwQyxDQUFDLENBQUM7U0FDN0Q7UUFFRCxJQUFJO1lBQ0YsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7WUFDckIsTUFBTSxNQUFNLEdBQUcsUUFBUSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO2dCQUN0QixPQUFPLEdBQUcsQ0FBQztZQUNiLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFO2dCQUNQLElBQUksQ0FBQyxRQUFRLEVBQUU7b0JBQ2IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7aUJBQ3ZCO2dCQUNELE1BQU0sQ0FBQyxDQUFDO1lBQ1YsQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUU7Z0JBQ2hELElBQUksQ0FBQyxRQUFRLEVBQUU7b0JBQ2IsT0FBTyxJQUFJLENBQUM7aUJBQ2I7Z0JBQ0QsTUFBTSxDQUFDLENBQUM7WUFDVixDQUFDLENBQUMsQ0FBQztZQUVILE9BQU8sTUFBTSxDQUFDO1NBQ2Y7UUFBQyxPQUFPLENBQUMsRUFBRTtZQUNWLElBQUksUUFBUSxFQUFFO2dCQUNaLElBQUksQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN2QztpQkFBTTtnQkFDTCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQzthQUN2QjtZQUNELE1BQU0sQ0FBQyxDQUFDO1NBQ1Q7SUFDSCxDQUFDO0NBQ0YifQ==","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 } from 'uuid';\nconst uuid = v4;\nexport { uuid };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXVpZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInV1aWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUxQixNQUFNLElBQUksR0FBRyxFQUFVLENBQUM7QUFVeEIsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDIn0=","/* eslint-disable no-console */\nconst alreadyWarned = {};\nexport function deprecated(alternativeSignature) {\n    return function decorateProperty(target, name, descriptor = {\n        writable: true,\n        enumerable: false,\n        configurable: true,\n    }) {\n        const type = typeof target === 'string' ? target : target.constructor.name;\n        const deprecatedSignature = `${type}.${name}`;\n        const logWarning = () => {\n            if (!alreadyWarned[deprecatedSignature]) {\n                alreadyWarned[deprecatedSignature] = true;\n                console.warn(`Usage of ${deprecatedSignature} is deprecated, use ${alternativeSignature} instead.`);\n            }\n        };\n        const deprecatedDescriptor = {\n            enumerable: descriptor.enumerable,\n            configurable: descriptor.configurable,\n        };\n        if (descriptor.get || descriptor.set) {\n            if (descriptor.get) {\n                deprecatedDescriptor.get = function get() {\n                    logWarning();\n                    return descriptor.get.call(this);\n                };\n            }\n            if (descriptor.set) {\n                deprecatedDescriptor.set = function set(value) {\n                    logWarning();\n                    return descriptor.set.call(this, value);\n                };\n            }\n        }\n        else {\n            let propertyValue = descriptor.value;\n            deprecatedDescriptor.get = function get() {\n                logWarning();\n                return propertyValue;\n            };\n            if (descriptor.writable) {\n                deprecatedDescriptor.set = function set(value) {\n                    logWarning();\n                    propertyValue = value;\n                };\n            }\n        }\n        return deprecatedDescriptor;\n    };\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwcmVjYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRlcHJlY2F0ZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0JBQStCO0FBQy9CLE1BQU0sYUFBYSxHQUFtQyxFQUFFLENBQUM7QUFDekQsTUFBTSxVQUFVLFVBQVUsQ0FBQyxvQkFBNEI7SUFDckQsT0FBTyxTQUFTLGdCQUFnQixDQUM5QixNQUF1QixFQUN2QixJQUFZLEVBQ1osYUFBaUM7UUFDL0IsUUFBUSxFQUFFLElBQUk7UUFDZCxVQUFVLEVBQUUsS0FBSztRQUNqQixZQUFZLEVBQUUsSUFBSTtLQUNuQjtRQUVELE1BQU0sSUFBSSxHQUFHLE9BQU8sTUFBTSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQztRQUMzRSxNQUFNLG1CQUFtQixHQUFHLEdBQUcsSUFBSSxJQUFJLElBQUksRUFBRSxDQUFDO1FBQzlDLE1BQU0sVUFBVSxHQUFHLEdBQUcsRUFBRTtZQUN0QixJQUFJLENBQUMsYUFBYSxDQUFDLG1CQUFtQixDQUFDLEVBQUU7Z0JBQ3ZDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLElBQUksQ0FBQztnQkFDMUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLG1CQUFtQix1QkFBdUIsb0JBQW9CLFdBQVcsQ0FBQyxDQUFDO2FBQ3JHO1FBQ0gsQ0FBQyxDQUFDO1FBRUYsTUFBTSxvQkFBb0IsR0FBdUI7WUFDL0MsVUFBVSxFQUFFLFVBQVUsQ0FBQyxVQUFVO1lBQ2pDLFlBQVksRUFBRSxVQUFVLENBQUMsWUFBWTtTQUN0QyxDQUFDO1FBRUYsSUFBSSxVQUFVLENBQUMsR0FBRyxJQUFJLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDcEMsSUFBSSxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUNsQixvQkFBb0IsQ0FBQyxHQUFHLEdBQUcsU0FBUyxHQUFHO29CQUNyQyxVQUFVLEVBQUUsQ0FBQztvQkFDYixPQUFPLFVBQVUsQ0FBQyxHQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNwQyxDQUFDLENBQUM7YUFDSDtZQUVELElBQUksVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDbEIsb0JBQW9CLENBQUMsR0FBRyxHQUFHLFNBQVMsR0FBRyxDQUFDLEtBQUs7b0JBQzNDLFVBQVUsRUFBRSxDQUFDO29CQUNiLE9BQU8sVUFBVSxDQUFDLEdBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUMzQyxDQUFDLENBQUM7YUFDSDtTQUNGO2FBQU07WUFDTCxJQUFJLGFBQWEsR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDO1lBRXJDLG9CQUFvQixDQUFDLEdBQUcsR0FBRyxTQUFTLEdBQUc7Z0JBQ3JDLFVBQVUsRUFBRSxDQUFDO2dCQUNiLE9BQU8sYUFBYSxDQUFDO1lBQ3ZCLENBQUMsQ0FBQztZQUVGLElBQUksVUFBVSxDQUFDLFFBQVEsRUFBRTtnQkFDdkIsb0JBQW9CLENBQUMsR0FBRyxHQUFHLFNBQVMsR0FBRyxDQUFDLEtBQUs7b0JBQzNDLFVBQVUsRUFBRSxDQUFDO29CQUNiLGFBQWEsR0FBRyxLQUFLLENBQUM7Z0JBQ3hCLENBQUMsQ0FBQzthQUNIO1NBQ0Y7UUFFRCxPQUFPLG9CQUFvQixDQUFDO0lBQzlCLENBQUMsQ0FBQztBQUNKLENBQUMifQ==","/**\n * Adds a trailing slash to a string if it is missing\n * @param str\n * @return\n * @name trailingSlashIt\n * @memberOf prototype\n * @function\n */\nexport function trailingSlashIt(str) {\n    if (str.charAt(str.length - 1) !== '/') {\n        return `${str}/`;\n    }\n    return str;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhaWxpbmdTbGFzaEl0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidHJhaWxpbmdTbGFzaEl0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLFVBQVUsZUFBZSxDQUFDLEdBQVc7SUFDekMsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxFQUFFO1FBQ3RDLE9BQU8sR0FBRyxHQUFHLEdBQUcsQ0FBQztLQUNsQjtJQUVELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyJ9","export { isNode } from './is-node';\nexport { atob } from './atob';\nexport { hmac } from './hmac';\nexport { Lockable } from './Lockable';\nexport { uuid } from './uuid';\nexport { deprecated } from './deprecated';\nexport { trailingSlashIt } from './trailingSlashIt';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ25DLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDOUIsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUM5QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFLOUIsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUMifQ==","export const PersistentError = (() => {\n    function PersistentErrorConstructor(message, cause) {\n        if (Object.prototype.hasOwnProperty.call(Error, 'captureStackTrace')) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            this.stack = (new Error()).stack;\n        }\n        this.message = (message || 'An unexpected persistent error occurred.');\n        this.name = this.constructor.name;\n        if (cause) {\n            this.cause = cause;\n            if (cause.stack) {\n                this.stack += `\\nCaused By: ${cause.stack}`;\n            }\n        }\n    }\n    // custom errors must be manually extended, since JS Errors can't be super called in a class hierarchy,\n    // otherwise the super call destroys the origin 'this' reference\n    PersistentErrorConstructor.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: PersistentErrorConstructor,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n    return PersistentErrorConstructor;\n})();\nPersistentError.of = function of(error) {\n    if (error instanceof PersistentError) {\n        return error;\n    }\n    return new PersistentError(null, error);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGVyc2lzdGVudEVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUGVyc2lzdGVudEVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9DQSxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsQ0FBQyxHQUFHLEVBQUU7SUFDbkMsU0FBUywwQkFBMEIsQ0FBd0IsT0FBc0IsRUFBRSxLQUFhO1FBQzlGLElBQUksTUFBTSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxtQkFBbUIsQ0FBQyxFQUFFO1lBQ3BFLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ2pEO2FBQU07WUFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsSUFBSSxLQUFLLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQztTQUNsQztRQUVELElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxPQUFPLElBQUksMENBQTBDLENBQUMsQ0FBQztRQUN2RSxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO1FBRWxDLElBQUksS0FBSyxFQUFFO1lBQ1QsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDbkIsSUFBSSxLQUFLLENBQUMsS0FBSyxFQUFFO2dCQUNmLElBQUksQ0FBQyxLQUFLLElBQUksZ0JBQWdCLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQzthQUM3QztTQUNGO0lBQ0gsQ0FBQztJQUVELHVHQUF1RztJQUN2RyxnRUFBZ0U7SUFDaEUsMEJBQTBCLENBQUMsU0FBUyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsRUFBRTtRQUNwRSxXQUFXLEVBQUU7WUFDWCxLQUFLLEVBQUUsMEJBQTBCO1lBQ2pDLFFBQVEsRUFBRSxJQUFJO1lBQ2QsVUFBVSxFQUFFLEtBQUs7WUFDakIsWUFBWSxFQUFFLElBQUk7U0FDbkI7S0FDRixDQUFDLENBQUM7SUFFSCxPQUFPLDBCQUErRCxDQUFDO0FBQ3pFLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFFTCxlQUFlLENBQUMsRUFBRSxHQUFHLFNBQVMsRUFBRSxDQUFDLEtBQVk7SUFDM0MsSUFBSSxLQUFLLFlBQVksZUFBZSxFQUFFO1FBQ3BDLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFFRCxPQUFPLElBQUksZUFBZSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztBQUMxQyxDQUFDLENBQUMifQ==","import { PersistentError } from './PersistentError';\nexport class CommunicationError extends PersistentError {\n    /**\n     * @param httpMessage The http message which was send\n     * @param response The received entity headers and content\n     */\n    constructor(httpMessage, response) {\n        const entity = response.entity || response.error || {};\n        const state = (response.status === 0 ? 'Request' : 'Response');\n        const message = entity.message\n            || (httpMessage && `Handling the ${state} for ${httpMessage.request.method} ${httpMessage.request.path}`)\n            || 'A communication error occurred.';\n        super(message, entity);\n        this.name = entity.className || 'CommunicationError';\n        this.reason = entity.reason || 'Communication failed';\n        this.status = response.status;\n        if (entity.data) {\n            this.data = entity.data;\n        }\n        let cause = entity;\n        while (cause && cause.stackTrace) {\n            this.stack += `\\nServerside Caused by: ${cause.className} ${cause.message}`;\n            const { stackTrace } = cause;\n            for (let i = 0; i < stackTrace.length; i += 1) {\n                const el = stackTrace[i];\n                this.stack += `\\n    at ${el.className}.${el.methodName}`;\n                this.stack += ` (${el.fileName}:${el.lineNumber})`;\n            }\n            cause = cause.cause;\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tbXVuaWNhdGlvbkVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQ29tbXVuaWNhdGlvbkVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUlwRCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsZUFBZTtJQWdCckQ7OztPQUdHO0lBQ0gsWUFBWSxXQUEyQixFQUFFLFFBQWtCO1FBQ3pELE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxNQUFNLElBQUksUUFBUSxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDdkQsTUFBTSxLQUFLLEdBQUcsQ0FBQyxRQUFRLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUMvRCxNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTztlQUN2QixDQUFDLFdBQVcsSUFBSSxnQkFBZ0IsS0FBSyxRQUFRLFdBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7ZUFDdEcsaUNBQWlDLENBQUM7UUFFekMsS0FBSyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztRQUV2QixJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxTQUFTLElBQUksb0JBQW9CLENBQUM7UUFDckQsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxJQUFJLHNCQUFzQixDQUFDO1FBQ3RELElBQUksQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQztRQUU5QixJQUFJLE1BQU0sQ0FBQyxJQUFJLEVBQUU7WUFDZixJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7U0FDekI7UUFFRCxJQUFJLEtBQUssR0FBRyxNQUFNLENBQUM7UUFDbkIsT0FBTyxLQUFLLElBQUksS0FBSyxDQUFDLFVBQVUsRUFBRTtZQUNoQyxJQUFJLENBQUMsS0FBSyxJQUFJLDJCQUEyQixLQUFLLENBQUMsU0FBUyxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUU1RSxNQUFNLEVBQUUsVUFBVSxFQUFFLEdBQUcsS0FBSyxDQUFDO1lBQzdCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQzdDLE1BQU0sRUFBRSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFFekIsSUFBSSxDQUFDLEtBQUssSUFBSSxZQUFZLEVBQUUsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDO2dCQUMxRCxJQUFJLENBQUMsS0FBSyxJQUFJLEtBQUssRUFBRSxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUMsVUFBVSxHQUFHLENBQUM7YUFDcEQ7WUFFRCxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztTQUNyQjtJQUNILENBQUM7Q0FDRiJ9","import { PersistentError } from './PersistentError';\nexport class IllegalEntityError extends PersistentError {\n    /**\n     * @param entity - The entity which cause the error\n     */\n    constructor(entity) {\n        super(`Entity ${entity} is not a valid entity`);\n        this.entity = entity;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWxsZWdhbEVudGl0eUVycm9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiSWxsZWdhbEVudGl0eUVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUdwRCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsZUFBZTtJQU1yRDs7T0FFRztJQUNILFlBQVksTUFBYztRQUN4QixLQUFLLENBQUMsVUFBVSxNQUFNLHdCQUF3QixDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdkIsQ0FBQztDQUNGIn0=","import { PersistentError } from './PersistentError';\nexport class EntityExistsError extends PersistentError {\n    /**\n     * @param entity - The entity which cause the error\n     */\n    constructor(entity) {\n        super(`The entity ${entity} is managed by a different db.`);\n        this.entity = entity;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW50aXR5RXhpc3RzRXJyb3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFbnRpdHlFeGlzdHNFcnJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHcEQsTUFBTSxPQUFPLGlCQUFrQixTQUFRLGVBQWU7SUFNcEQ7O09BRUc7SUFDSCxZQUFZLE1BQWM7UUFDeEIsS0FBSyxDQUFDLGNBQWMsTUFBTSxnQ0FBZ0MsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7Q0FDRiJ9","import { PersistentError } from './PersistentError';\nexport class RollbackError extends PersistentError {\n    constructor(cause) {\n        super('The transaction has been roll backed', cause);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm9sbGJhY2tFcnJvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlJvbGxiYWNrRXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRXBELE1BQU0sT0FBTyxhQUFjLFNBQVEsZUFBZTtJQUNoRCxZQUFZLEtBQVk7UUFDdEIsS0FBSyxDQUFDLHNDQUFzQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3ZELENBQUM7Q0FDRiJ9","export { PersistentError } from './PersistentError';\nexport { CommunicationError } from './CommunicationError';\nexport { IllegalEntityError } from './IllegalEntityError';\nexport { EntityExistsError } from './EntityExistsError';\nexport { RollbackError } from './RollbackError';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDIn0=","export var PersistenceType;\n(function (PersistenceType) {\n    PersistenceType[PersistenceType[\"BASIC\"] = 0] = \"BASIC\";\n    PersistenceType[PersistenceType[\"EMBEDDABLE\"] = 1] = \"EMBEDDABLE\";\n    PersistenceType[PersistenceType[\"ENTITY\"] = 2] = \"ENTITY\";\n    PersistenceType[PersistenceType[\"MAPPED_SUPERCLASS\"] = 3] = \"MAPPED_SUPERCLASS\";\n})(PersistenceType || (PersistenceType = {}));\nexport class Type {\n    /**\n     * @param ref\n     * @param typeConstructor\n     */\n    constructor(ref, typeConstructor) {\n        if (ref.indexOf('/db/') !== 0) {\n            throw new SyntaxError(`Type ref ${ref} is invalid.`);\n        }\n        this.ref = ref;\n        this.name = ref.substring(4);\n        this._typeConstructor = typeConstructor;\n    }\n    /**\n     * The persistent type of this type\n     */\n    get persistenceType() {\n        return -1;\n    }\n    /**\n     * @type boolean\n     * @readonly\n     */\n    get isBasic() {\n        return this.persistenceType === PersistenceType.BASIC;\n    }\n    /**\n     * @type boolean\n     * @readonly\n     */\n    get isEmbeddable() {\n        return this.persistenceType === PersistenceType.EMBEDDABLE;\n    }\n    /**\n     * @type boolean\n     * @readonly\n     */\n    get isEntity() {\n        return this.persistenceType === PersistenceType.ENTITY;\n    }\n    /**\n     * @type boolean\n     * @readonly\n     */\n    get isMappedSuperclass() {\n        return this.persistenceType === PersistenceType.MAPPED_SUPERCLASS;\n    }\n    /**\n     * The type constructor of this type\n     */\n    get typeConstructor() {\n        return this._typeConstructor;\n    }\n    /**\n     * @param typeConstructor - sets the type constructor of this type if it is not already set\n     */\n    set typeConstructor(typeConstructor) {\n        if (this._typeConstructor) {\n            throw new Error('typeConstructor has already been set.');\n        }\n        this._typeConstructor = typeConstructor;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxDQUFOLElBQVksZUFLWDtBQUxELFdBQVksZUFBZTtJQUN6Qix1REFBUyxDQUFBO0lBQ1QsaUVBQWMsQ0FBQTtJQUNkLHlEQUFVLENBQUE7SUFDViwrRUFBcUIsQ0FBQTtBQUN2QixDQUFDLEVBTFcsZUFBZSxLQUFmLGVBQWUsUUFLMUI7QUFFRCxNQUFNLE9BQWdCLElBQUk7SUFpRXhCOzs7T0FHRztJQUNILFlBQXNCLEdBQVcsRUFBRSxlQUEwQjtRQUMzRCxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzdCLE1BQU0sSUFBSSxXQUFXLENBQUMsWUFBWSxHQUFHLGNBQWMsQ0FBQyxDQUFDO1NBQ3REO1FBRUQsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDZixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGVBQWUsQ0FBQztJQUMxQyxDQUFDO0lBcEVEOztPQUVHO0lBQ0gsSUFBSSxlQUFlO1FBQ2pCLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDWixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsZUFBZSxLQUFLLGVBQWUsQ0FBQyxLQUFLLENBQUM7SUFDeEQsQ0FBQztJQUVEOzs7T0FHRztJQUNILElBQUksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLGVBQWUsS0FBSyxlQUFlLENBQUMsVUFBVSxDQUFDO0lBQzdELENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxlQUFlLEtBQUssZUFBZSxDQUFDLE1BQU0sQ0FBQztJQUN6RCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFBSSxrQkFBa0I7UUFDcEIsT0FBTyxJQUFJLENBQUMsZUFBZSxLQUFLLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQztJQUNwRSxDQUFDO0lBRUQ7O09BRUc7SUFDSCxJQUFJLGVBQWU7UUFDakIsT0FBTyxJQUFJLENBQUMsZ0JBQWtCLENBQUM7SUFDakMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsSUFBSSxlQUFlLENBQUMsZUFBeUI7UUFDM0MsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDekIsTUFBTSxJQUFJLEtBQUssQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDO1NBQzFEO1FBQ0QsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGVBQWUsQ0FBQztJQUMxQyxDQUFDO0NBNENGIn0=","import { Type } from './Type';\nimport { Enhancer, Entity, Managed, } from '../binding';\nimport { Permission } from '../intersection';\nexport class ManagedType extends Type {\n    /**\n     * @param ref or full class name\n     * @param typeConstructor The type constructor of the managed lass\n     */\n    constructor(ref, typeConstructor) {\n        super(ref.indexOf('/db/') !== 0 ? `/db/${ref}` : ref, typeConstructor);\n        this.enhancer = null;\n        this.declaredAttributes = [];\n        this.schemaAddPermission = new Permission();\n        this.schemaReplacePermission = new Permission();\n        this.metadata = null;\n        this.superType = null;\n        this._validationCode = null;\n    }\n    /**\n     * @type Function\n     */\n    get validationCode() {\n        return this._validationCode;\n    }\n    /**\n     * @param code\n     */\n    set validationCode(code) {\n        this._validationCode = code;\n    }\n    /**\n     * The Managed class\n     */\n    get typeConstructor() {\n        if (!this._typeConstructor) {\n            this.typeConstructor = this.createProxyClass();\n        }\n        return this._typeConstructor;\n    }\n    /**\n     * The Managed class constructor\n     * @param typeConstructor The managed class constructor\n     */\n    set typeConstructor(typeConstructor) {\n        if (this._typeConstructor) {\n            throw new Error('Type constructor has already been set.');\n        }\n        const isEntity = typeConstructor.prototype instanceof Entity;\n        if (this.isEntity) {\n            if (!isEntity) {\n                throw new TypeError('Entity classes must extends the Entity class.');\n            }\n        }\n        else if (!(typeConstructor.prototype instanceof Managed) || isEntity) {\n            throw new TypeError('Embeddable classes must extends the Managed class.');\n        }\n        this.enhancer.enhance(this, typeConstructor);\n        this._typeConstructor = typeConstructor;\n    }\n    /**\n     * Initialize this type\n     * @param enhancer The class enhancer used to instantiate an instance of this managed class\n     */\n    init(enhancer) {\n        this.enhancer = enhancer;\n        if (this._typeConstructor && !Enhancer.getIdentifier(this._typeConstructor)) {\n            Enhancer.setIdentifier(this._typeConstructor, this.ref);\n        }\n    }\n    /**\n     * Creates a new instance of the managed type, without invoking any constructors\n     *\n     * This method is used to create object instances which are loaded form the backend.\n     *\n     * @return The created instance\n     */\n    create() {\n        const instance = Object.create(this.typeConstructor.prototype);\n        Managed.init(instance);\n        return instance;\n    }\n    /**\n     * An iterator which returns all attributes declared by this type and inherited form all super types\n     * @return\n     */\n    attributes() {\n        let iter;\n        let index = 0;\n        const type = this;\n        if (this.superType) {\n            iter = this.superType.attributes();\n        }\n        return {\n            [Symbol.iterator]() {\n                return this;\n            },\n            next() {\n                if (iter) {\n                    const item = iter.next();\n                    if (!item.done) {\n                        return item;\n                    }\n                    iter = null;\n                }\n                if (index < type.declaredAttributes.length) {\n                    const value = type.declaredAttributes[index];\n                    index += 1;\n                    return { value, done: false };\n                }\n                return { done: true, value: undefined };\n            },\n        };\n    }\n    /**\n     * Adds an attribute to this type\n     * @param attr The attribute to add\n     * @param order Position of the attribute\n     * @return\n     */\n    addAttribute(attr, order) {\n        if (this.getAttribute(attr.name)) {\n            throw new Error(`An attribute with the name ${attr.name} is already declared.`);\n        }\n        let initOrder;\n        if (!attr.order) {\n            initOrder = typeof order === 'undefined' ? this.declaredAttributes.length : order;\n        }\n        else {\n            initOrder = attr.order;\n        }\n        attr.init(this, initOrder);\n        this.declaredAttributes.push(attr);\n        if (this._typeConstructor && this.name !== 'Object') {\n            this.enhancer.enhanceProperty(this._typeConstructor, attr);\n        }\n    }\n    /**\n     * Removes an attribute from this type\n     * @param name The Name of the attribute which will be removed\n     * @return\n     */\n    removeAttribute(name) {\n        const { length } = this.declaredAttributes;\n        this.declaredAttributes = this.declaredAttributes.filter((val) => val.name !== name);\n        if (length === this.declaredAttributes.length) {\n            throw new Error(`An Attribute with the name ${name} is not declared.`);\n        }\n    }\n    /**\n     * @param name\n     * @return\n     */\n    getAttribute(name) {\n        let attr = this.getDeclaredAttribute(name);\n        if (!attr && this.superType) {\n            attr = this.superType.getAttribute(name);\n        }\n        return attr;\n    }\n    /**\n     * @param val Name or order of the attribute\n     * @return\n     */\n    getDeclaredAttribute(val) {\n        return this.declaredAttributes.filter((attr) => attr.name === val || attr.order === val)[0] || null;\n    }\n    /**\n     * @inheritDoc\n     */\n    fromJsonValue(state, jsonObject, currentObject, options) {\n        if (!jsonObject || !currentObject) {\n            return null;\n        }\n        const iter = this.attributes();\n        for (let el = iter.next(); !el.done; el = iter.next()) {\n            const attribute = el.value;\n            if (!options.onlyMetadata || attribute.isMetadata) {\n                attribute.setJsonValue(state, currentObject, jsonObject[attribute.name], options);\n            }\n        }\n        return currentObject;\n    }\n    /**\n     * @inheritDoc\n     */\n    toJsonValue(state, object, options) {\n        if (!(object instanceof this.typeConstructor)) {\n            return null;\n        }\n        const value = {};\n        const iter = this.attributes();\n        for (let el = iter.next(); !el.done; el = iter.next()) {\n            const attribute = el.value;\n            if (!options.excludeMetadata || !attribute.isMetadata) {\n                value[attribute.name] = attribute.getJsonValue(state, object, options);\n            }\n        }\n        return value;\n    }\n    /**\n     * Converts ths type schema to json\n     * @return\n     */\n    toJSON() {\n        const fields = {};\n        this.declaredAttributes.forEach((attribute) => {\n            if (!attribute.isMetadata) {\n                fields[attribute.name] = attribute;\n            }\n        });\n        return Object.assign(Object.assign(Object.assign({ class: this.ref, fields, acl: {\n                schemaAdd: this.schemaAddPermission.toJSON(),\n                schemaReplace: this.schemaReplacePermission.toJSON(),\n            } }, (this.superType && { superClass: this.superType.ref })), (this.isEmbeddable && { embedded: true })), (this.metadata && { metadata: this.metadata }));\n    }\n    /**\n     * Returns iterator to get all referenced entities\n     * @return\n     */\n    references() {\n        const attributes = this.attributes();\n        let attribute;\n        let embeddedAttributes;\n        return {\n            [Symbol.iterator]() {\n                return this;\n            },\n            next() {\n                for (;;) {\n                    if (embeddedAttributes) {\n                        const item = embeddedAttributes.next();\n                        if (!item.done) {\n                            return { value: { path: [attribute.name].concat(item.value.path) } };\n                        }\n                        embeddedAttributes = null;\n                    }\n                    const item = attributes.next();\n                    if (item.done) {\n                        // currently TS requires a undefined value here https://github.com/microsoft/TypeScript/issues/38479\n                        return { done: true, value: undefined };\n                    }\n                    attribute = item.value;\n                    const type = attribute.isCollection\n                        ? attribute.elementType\n                        : attribute.type;\n                    if (type.isEntity) {\n                        return { value: { path: [attribute.name] } };\n                    }\n                    if (type.isEmbeddable) {\n                        embeddedAttributes = type.references();\n                    }\n                }\n            },\n        };\n    }\n    /**\n     * Retrieves whether this type has specific metadata\n     *\n     * @param key\n     * @return\n     */\n    hasMetadata(key) {\n        return !!this.metadata && !!this.metadata[key];\n    }\n    /**\n     * Gets some metadata of this type\n     *\n     * @param key\n     * @return\n     */\n    getMetadata(key) {\n        if (!this.hasMetadata(key)) {\n            return null;\n        }\n        return this.metadata[key];\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","import { File } from '../binding';\nimport { GeoPoint } from '../GeoPoint';\nimport { PersistenceType, Type } from './Type';\nfunction dateToJson(value) {\n    // remove trailing zeros\n    return value instanceof Date ? value.toISOString().replace(/\\.?0*Z/, 'Z') : null;\n}\nfunction jsonToDate(json, currentValue) {\n    const date = typeof json === 'string' ? new Date(json) : null;\n    if (currentValue && date) {\n        // compare normalized date strings instead of plain strings\n        return currentValue.toISOString() === date.toISOString() ? currentValue : date;\n    }\n    return date;\n}\nexport class BasicType extends Type {\n    /**\n     * Creates a new instance of a native db type\n     * @param ref The db ref of this type\n     * @param typeConstructor The javascript class of this type\n     * @param noResolving Indicates if this type is not the main type of the constructor\n     */\n    constructor(ref, typeConstructor, noResolving) {\n        const id = ref.indexOf('/db/') === 0 ? ref : `/db/${ref}`;\n        super(id, typeConstructor);\n        this.noResolving = !!noResolving;\n    }\n    /**\n     * @inheritDoc\n     */\n    get persistenceType() {\n        return PersistenceType.BASIC;\n    }\n    /**\n     * @inheritDoc\n     */\n    toJsonValue(state, currentValue) {\n        return currentValue === null || currentValue === undefined ? null : this.typeConstructor(currentValue);\n    }\n    /**\n     * @inheritDoc\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    fromJsonValue(state, json, currentValue) {\n        return json === null || json === undefined ? null : json;\n    }\n    toString() {\n        return `BasicType(${this.ref})`;\n    }\n}\nBasicType.Boolean = new class BooleanType extends BasicType {\n    fromJsonValue(state, json, currentValue) {\n        return typeof json === 'string' ? json !== 'false' : super.fromJsonValue(state, json, currentValue);\n    }\n}('Boolean', Boolean);\nBasicType.Double = new class DoubleType extends BasicType {\n    fromJsonValue(state, json, currentValue) {\n        return typeof json === 'string' ? parseFloat(json) : super.fromJsonValue(state, json, currentValue);\n    }\n}('Double', Number);\nBasicType.Integer = new class IntegerType extends BasicType {\n    fromJsonValue(state, json, currentValue) {\n        return typeof json === 'string' ? parseInt(json, 10) : super.fromJsonValue(state, json, currentValue);\n    }\n}('Integer', Number);\nBasicType.String = new class StringType extends BasicType {\n}('String', String);\nBasicType.DateTime = new class DateTimeType extends BasicType {\n    toJsonValue(state, value) {\n        return dateToJson(value);\n    }\n    fromJsonValue(state, json, currentValue) {\n        return jsonToDate(json, currentValue);\n    }\n}('DateTime', Date);\nBasicType.Date = new class DateType extends BasicType {\n    toJsonValue(state, value) {\n        const json = dateToJson(value);\n        return json ? json.substring(0, json.indexOf('T')) : null;\n    }\n    fromJsonValue(state, json, currentValue) {\n        return jsonToDate(json, currentValue);\n    }\n}('Date', Date);\nBasicType.Time = new class TimeType extends BasicType {\n    toJsonValue(state, value) {\n        const json = dateToJson(value);\n        return json ? json.substring(json.indexOf('T') + 1) : null;\n    }\n    fromJsonValue(state, json, currentValue) {\n        return typeof json === 'string' ? jsonToDate(`1970-01-01T${json}`, currentValue) : null;\n    }\n}('Time', Date);\nBasicType.File = new class FileType extends BasicType {\n    toJsonValue(state, value) {\n        return value instanceof File ? value.id : null;\n    }\n    fromJsonValue(state, json, currentValue) {\n        if (!json) {\n            return null;\n        }\n        if (currentValue && currentValue.id === json) {\n            return currentValue;\n        }\n        if (state.db) {\n            return new state.db.File(json);\n        }\n        return null;\n    }\n}('File', File);\nBasicType.GeoPoint = new class GeoPointType extends BasicType {\n    toJsonValue(state, value) {\n        return value instanceof GeoPoint ? value.toJSON() : null;\n    }\n    fromJsonValue(state, json) {\n        return json ? new GeoPoint(json) : null;\n    }\n}('GeoPoint', GeoPoint);\nBasicType.JsonArray = new class JsonArrayType extends BasicType {\n    toJsonValue(state, value) {\n        return Array.isArray(value) ? value : null;\n    }\n    fromJsonValue(state, json) {\n        return Array.isArray(json) ? json : null;\n    }\n}('JsonArray', Array);\nBasicType.JsonObject = new class JsonObjectType extends BasicType {\n    toJsonValue(state, value) {\n        if (value && value.constructor === Object) {\n            return value;\n        }\n        return null;\n    }\n}('JsonObject', Object);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmFzaWNUeXBlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQmFzaWNUeXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDbEMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2QyxPQUFPLEVBQUUsZUFBZSxFQUFFLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUcvQyxTQUFTLFVBQVUsQ0FBQyxLQUFrQjtJQUNwQyx3QkFBd0I7SUFDeEIsT0FBTyxLQUFLLFlBQVksSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ25GLENBQUM7QUFFRCxTQUFTLFVBQVUsQ0FBQyxJQUFVLEVBQUUsWUFBeUI7SUFDdkQsTUFBTSxJQUFJLEdBQUcsT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQzlELElBQUksWUFBWSxJQUFJLElBQUksRUFBRTtRQUN4QiwyREFBMkQ7UUFDM0QsT0FBTyxZQUFZLENBQUMsV0FBVyxFQUFFLEtBQUssSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztLQUNoRjtJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQUVELE1BQU0sT0FBTyxTQUFhLFNBQVEsSUFBTztJQXFIdkM7Ozs7O09BS0c7SUFDSCxZQUFZLEdBQVcsRUFBRSxlQUF5QixFQUFFLFdBQXFCO1FBQ3ZFLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FB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","import { Accessor } from '../binding';\nexport var PersistentAttributeType;\n(function (PersistentAttributeType) {\n    PersistentAttributeType[PersistentAttributeType[\"BASIC\"] = 0] = \"BASIC\";\n    PersistentAttributeType[PersistentAttributeType[\"ELEMENT_COLLECTION\"] = 1] = \"ELEMENT_COLLECTION\";\n    PersistentAttributeType[PersistentAttributeType[\"EMBEDDED\"] = 2] = \"EMBEDDED\";\n    PersistentAttributeType[PersistentAttributeType[\"MANY_TO_MANY\"] = 3] = \"MANY_TO_MANY\";\n    PersistentAttributeType[PersistentAttributeType[\"MANY_TO_ONE\"] = 4] = \"MANY_TO_ONE\";\n    PersistentAttributeType[PersistentAttributeType[\"ONE_TO_MANY\"] = 5] = \"ONE_TO_MANY\";\n    PersistentAttributeType[PersistentAttributeType[\"ONE_TO_ONE\"] = 6] = \"ONE_TO_ONE\";\n})(PersistentAttributeType || (PersistentAttributeType = {}));\nconst ATTACHED_STATE = Symbol('AttachedState');\nconst ATTACHED_SIZE = Symbol('AttachedSize');\nexport class Attribute {\n    /**\n     * @param name The attribute name\n     * @param isMetadata <code>true</code> if the attribute is an metadata attribute\n     */\n    constructor(name, isMetadata) {\n        this.isId = false;\n        this.isVersion = false;\n        this.isAcl = false;\n        this.order = null;\n        this.accessor = null;\n        this.declaringType = null;\n        this.metadata = null;\n        this.isMetadata = !!isMetadata;\n        this.name = name;\n    }\n    static attachState(obj, state, overwriteExistingValue = false) {\n        if (state !== undefined && (overwriteExistingValue || obj[ATTACHED_STATE] === undefined)) {\n            // ensure that this property is not visible on browsers which do not support Symbols\n            Object.defineProperty(obj, ATTACHED_STATE, { value: state, configurable: true });\n        }\n        return obj[ATTACHED_STATE];\n    }\n    /**\n     * Attach and returns the the given size on the collection, in a meaner that it isn't enumerable\n     * @param {Set<*>|Map<*,*>} collection The collection where the size is attached on\n     * @param {number} size The size which should be attached, the previously attached size will be\n     * returned if omitted\n     * @return {number} The actual or new attached size whenever a new size was provided or not\n     */\n    static attachSize(collection, size) {\n        if (size !== undefined) {\n            // ensure that this property is not visible on browsers which do not support Symbols\n            Object.defineProperty(collection, ATTACHED_SIZE, { value: size, configurable: true });\n        }\n        return collection[ATTACHED_SIZE] || -1;\n    }\n    /**\n     * Returns the persistent attribute type\n     */\n    get persistentAttributeType() {\n        return -1;\n    }\n    /**\n     * @type boolean\n     * @readonly\n     */\n    get isAssociation() {\n        return this.persistentAttributeType > PersistentAttributeType.EMBEDDED;\n    }\n    get isCollection() {\n        return this.persistentAttributeType === PersistentAttributeType.ELEMENT_COLLECTION;\n    }\n    /**\n     * @param declaringType The type that owns this attribute\n     * @param order Position of the attribute\n     * @return\n     */\n    init(declaringType, order) {\n        if (this.declaringType) {\n            throw new Error('The attribute is already initialized.');\n        }\n        this.order = order;\n        this.accessor = new Accessor();\n        this.declaringType = declaringType;\n    }\n    /**\n     * @param entity\n     * @return\n     */\n    getValue(entity) {\n        return this.accessor.getValue(entity, this);\n    }\n    /**\n     * @param entity\n     * @param value\n     */\n    setValue(entity, value) {\n        this.accessor.setValue(entity, this, value);\n    }\n    /**\n     * Retrieves whether this type has specific metadata\n     *\n     * @param key\n     * @return\n     */\n    hasMetadata(key) {\n        return !!this.metadata && key in this.metadata;\n    }\n    /**\n     * Gets some metadata of this type\n     *\n     * @param key\n     * @return\n     */\n    getMetadata(key) {\n        if (!this.hasMetadata(key)) {\n            return null;\n        }\n        return this.metadata[key] || null;\n    }\n    /**\n     * Converts this attribute field to json\n     * @return The attribute description as json\n     */\n    toJSON() {\n        return Object.assign({ name: this.name, order: this.order }, (this.metadata && { metadata: this.metadata }));\n    }\n}\nAttribute.PersistentAttributeType = PersistentAttributeType;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXR0cmlidXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQXR0cmlidXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQVcsTUFBTSxZQUFZLENBQUM7QUFLL0MsTUFBTSxDQUFOLElBQVksdUJBUVg7QUFSRCxXQUFZLHVCQUF1QjtJQUNqQyx1RUFBUyxDQUFBO0lBQ1QsaUdBQXNCLENBQUE7SUFDdEIsNkVBQVksQ0FBQTtJQUNaLHFGQUFnQixDQUFBO0lBQ2hCLG1GQUFlLENBQUE7SUFDZixtRkFBZSxDQUFBO0lBQ2YsaUZBQWMsQ0FBQTtBQUNoQixDQUFDLEVBUlcsdUJBQXVCLEtBQXZCLHVCQUF1QixRQVFsQztBQUVELE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUMvQyxNQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7QUFFN0MsTUFBTSxPQUFnQixTQUFTO0lBa0Y3Qjs7O09BR0c7SUFDSCxZQUFzQixJQUFZLEVBQUUsVUFBb0I7UUFqRmpELFNBQUksR0FBRyxLQUFLLENBQUM7UUFFYixjQUFTLEdBQUcsS0FBSyxDQUFDO1FBRWxCLFVBQUssR0FBRyxLQUFLLENBQUM7UUFJZCxVQUFLLEdBQWtCLElBQUksQ0FBQztRQUU1QixhQUFRLEdBQW9CLElBQUksQ0FBQztRQUVqQyxrQkFBYSxHQUE0QixJQUFJLENBQUM7UUFFOUMsYUFBUSxHQUFvQyxJQUFJLENBQUM7UUFvRXRELElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQztRQUMvQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0lBbERELE1BQU0sQ0FBQyxXQUFXLENBQUksR0FBb0QsRUFBRSxLQUFTLEVBQ25GLHlCQUFrQyxLQUFLO1FBQ3ZDLElBQUksS0FBSyxLQUFLLFNBQVMsSUFBSSxDQUFDLHNCQUFzQixJQUFLLEdBQVcsQ0FBQyxjQUFj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","import { Attribute, PersistentAttributeType } from './Attribute';\nimport { PersistenceType } from './Type';\nexport class SingularAttribute extends Attribute {\n    /**\n     * @param name\n     * @param type\n     * @param isMetadata <code>true</code> if the attribute is an metadata attribute\n     */\n    constructor(name, type, isMetadata) {\n        super(name, isMetadata);\n        this.type = type;\n    }\n    /**\n     * The constructor of the element type of this attribute\n     */\n    get typeConstructor() {\n        return this.type.typeConstructor;\n    }\n    /**\n     * @inheritDoc\n     */\n    get persistentAttributeType() {\n        switch (this.type.persistenceType) {\n            case PersistenceType.BASIC:\n                return PersistentAttributeType.BASIC;\n            case PersistenceType.EMBEDDABLE:\n                return PersistentAttributeType.EMBEDDED;\n            case PersistenceType.ENTITY:\n                return PersistentAttributeType.ONE_TO_MANY;\n            default:\n                throw new Error('Unknown persistent attribute type.');\n        }\n    }\n    /**\n     * @inheritDoc\n     */\n    getJsonValue(state, object, options) {\n        const persistedState = Attribute.attachState(object, {});\n        const value = this.getValue(object);\n        const changed = persistedState[this.name] !== value;\n        if (options.persisting) {\n            persistedState[this.name] = value;\n        }\n        if (changed) {\n            state.setDirty();\n        }\n        return this.type.toJsonValue(state, value, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    setJsonValue(state, object, jsonValue, options) {\n        const value = this.type.fromJsonValue(state, jsonValue, this.getValue(object), options);\n        if (options.persisting) {\n            const persistedState = Attribute.attachState(object, {});\n            persistedState[this.name] = value;\n        }\n        this.setValue(object, value);\n    }\n    /**\n     * @inheritDoc\n     */\n    toJSON() {\n        return Object.assign({ type: this.type.ref }, super.toJSON());\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2luZ3VsYXJBdHRyaWJ1dGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJTaW5ndWxhckF0dHJpYnV0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxlQUFlLEVBQVEsTUFBTSxRQUFRLENBQUM7QUFPL0MsTUFBTSxPQUFPLGlCQUFxQixTQUFRLFNBQVk7SUEwQnBEOzs7O09BSUc7SUFDSCxZQUFZLElBQVksRUFBRSxJQUFhLEVBQUUsVUFBb0I7UUFDM0QsS0FBSyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0lBL0JEOztPQUVHO0lBQ0gsSUFBSSxlQUFlO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7SUFDbkMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsSUFBSSx1QkFBdUI7UUFDekIsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUNqQyxLQUFLLGVBQWUsQ0FBQyxLQUFLO2dCQUN4QixPQUFPLHVCQUF1QixDQUFDLEtBQUssQ0FBQztZQUN2QyxLQUFLLGVBQWUsQ0FBQyxVQUFVO2dCQUM3QixPQUFPLHVCQUF1QixDQUFDLFFBQVEsQ0FBQztZQUMxQyxLQUFLLGVBQWUsQ0FBQyxNQUFNO2dCQUN6QixPQUFPLHVCQUF1QixDQUFDLFdBQVcsQ0FBQztZQUM3QztnQkFDRSxNQUFNLElBQUksS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7U0FDekQ7SUFDSCxDQUFDO0lBWUQ7O09BRUc7SUFDSCxZQUFZLENBQUMsS0FBbUIsRUFBRSxNQUFlLEVBQy9DLE9BQXFGO1FBQ3JGLE1BQU0sY0FBYyxHQUEyQixTQUFTLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNqRixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3BDLE1BQU0sT0FBTyxHQUFHLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSyxDQUFDO1FBRXBELElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRTtZQUN0QixjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQztTQUNuQztRQUVELElBQUksT0FBTyxFQUFFO1lBQ1gsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ2xCO1FBRUQsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFRDs7T0FFRztJQUNILFlBQVksQ0FBQyxLQUFtQixFQUFFLE1BQWUsRUFBRSxTQUFlLEVBQ2hFLE9BQXdEO1FBQ3hELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUV4RixJQUFJLE9BQU8sQ0FBQyxVQUFVLEVBQUU7WUFDdEIsTUFBTSxjQUFjLEdBQTJCLFNBQVMsQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ2pGLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDO1NBQ25DO1FBRUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVEOztPQUVHO0lBQ0gsTUFBTTtRQUNKLHVCQUNFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFDaEIsS0FBSyxDQUFDLE1BQU0sRUFBRSxFQUNqQjtJQUNKLENBQUM7Q0FDRiJ9","import { Attribute, PersistentAttributeType } from './Attribute';\nexport var CollectionType;\n(function (CollectionType) {\n    CollectionType[CollectionType[\"COLLECTION\"] = 0] = \"COLLECTION\";\n    CollectionType[CollectionType[\"LIST\"] = 1] = \"LIST\";\n    CollectionType[CollectionType[\"MAP\"] = 2] = \"MAP\";\n    CollectionType[CollectionType[\"SET\"] = 3] = \"SET\";\n})(CollectionType || (CollectionType = {}));\nexport class PluralAttribute extends Attribute {\n    /**\n     * @param name - The attribute name\n     * @param typeConstructor - The collection constructor of the attribute\n     * @param elementType - The type of the elements of the attribute collection\n     */\n    constructor(name, typeConstructor, elementType) {\n        super(name);\n        this.elementType = elementType;\n        this.typeConstructor = typeConstructor;\n    }\n    /**\n     * @inheritDoc\n     */\n    get persistentAttributeType() {\n        return PersistentAttributeType.ELEMENT_COLLECTION;\n    }\n    /**\n     * Retrieves a serialized string value of the given json which can be used as object keys\n     * @param json The json of which the key should be retrieved\n     * @return A serialized version of the json\n     */\n    keyValue(json) {\n        if (json && typeof json === 'object' && 'id' in json) {\n            return String(json.id);\n        }\n        return String(json);\n    }\n}\nPluralAttribute.CollectionType = CollectionType;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGx1cmFsQXR0cmlidXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUGx1cmFsQXR0cmlidXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFakUsTUFBTSxDQUFOLElBQVksY0FLWDtBQUxELFdBQVksY0FBYztJQUN4QiwrREFBYyxDQUFBO0lBQ2QsbURBQVEsQ0FBQTtJQUNSLGlEQUFPLENBQUE7SUFDUCxpREFBTyxDQUFBO0FBQ1QsQ0FBQyxFQUxXLGNBQWMsS0FBZCxjQUFjLFFBS3pCO0FBRUQsTUFBTSxPQUFnQixlQUFzQixTQUFRLFNBQVk7SUFtQjlEOzs7O09BSUc7SUFDSCxZQUFzQixJQUFZLEVBQUUsZUFBeUIsRUFBRSxXQUFvQjtRQUNqRixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsQ0FBQztRQUMvQixJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztJQUN6QyxDQUFDO0lBaEJEOztPQUVHO0lBQ0gsSUFBSSx1QkFBdUI7UUFDekIsT0FBTyx1QkFBdUIsQ0FBQyxrQkFBa0IsQ0FBQztJQUNwRCxDQUFDO0lBYUQ7Ozs7T0FJRztJQUNPLFFBQVEsQ0FBQyxJQUFVO1FBQzNCLElBQUksSUFBSSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxJQUFJLElBQUksSUFBSSxFQUFFO1lBQ3BELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUN4QjtRQUVELE9BQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RCLENBQUM7O0FBeENzQiw4QkFBYyxHQUFHLGNBQWMsQ0FBQyJ9","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n// eslint-disable-next-line max-classes-per-file\nimport { DeviceFactory, Entity, EntityFactory, Role, User, UserFactory, } from '../binding';\nimport { ManagedType } from './ManagedType';\nimport { PersistenceType } from './Type';\nimport { BasicType } from './BasicType';\nimport { SingularAttribute } from './SingularAttribute';\nimport { PluralAttribute } from './PluralAttribute';\nimport { Attribute } from './Attribute';\nimport { Metadata, Permission } from '../intersection';\nexport class EntityType extends ManagedType {\n    /**\n     * @param ref\n     * @param superType\n     * @param typeConstructor\n     */\n    constructor(ref, superType, typeConstructor) {\n        super(ref, typeConstructor);\n        this.declaredId = null;\n        this.declaredVersion = null;\n        this.declaredAcl = null;\n        this.loadPermission = new Permission();\n        this.updatePermission = new Permission();\n        this.deletePermission = new Permission();\n        this.queryPermission = new Permission();\n        this.schemaSubclassPermission = new Permission();\n        this.insertPermission = new Permission();\n        this.superType = superType;\n    }\n    /**\n     * @inheritDoc\n     */\n    get persistenceType() {\n        return PersistenceType.ENTITY;\n    }\n    get id() {\n        return this.declaredId || this.superType.id;\n    }\n    get version() {\n        return this.declaredVersion || this.superType.version;\n    }\n    get acl() {\n        return this.declaredAcl || this.superType.acl;\n    }\n    /**\n     * @inheritDoc\n     */\n    createProxyClass() {\n        let { typeConstructor } = this.superType;\n        if (typeConstructor === Object) {\n            switch (this.name) {\n                case 'User':\n                    typeConstructor = User;\n                    break;\n                case 'Role':\n                    typeConstructor = Role;\n                    break;\n                default:\n                    typeConstructor = Entity;\n                    break;\n            }\n        }\n        return this.enhancer.createProxy(typeConstructor);\n    }\n    /**\n     * Gets all on this class referencing attributes\n     *\n     * @param db The instances will be found by this EntityManager\n     * @param [options] Some options to pass\n     * @param [options.classes] An array of class names to filter for, null for no filter\n     * @return A map from every referencing class to a set of its referencing attribute names\n     */\n    getReferencing(db, options) {\n        const opts = Object.assign({}, options);\n        const { entities } = db.metamodel;\n        const referencing = new Map();\n        const names = Object.keys(entities);\n        for (let i = 0, len = names.length; i < len; i += 1) {\n            const name = names[i];\n            // Skip class if not in class filter\n            if (!opts.classes || opts.classes.indexOf(name) !== -1) {\n                const entity = entities[name];\n                const iter = entity.attributes();\n                for (let el = iter.next(); !el.done; el = iter.next()) {\n                    const attr = el.value;\n                    // Filter only referencing singular and collection attributes\n                    if ((attr instanceof SingularAttribute && attr.type === this)\n                        || (attr instanceof PluralAttribute && attr.elementType === this)) {\n                        const typeReferences = referencing.get(attr.declaringType) || new Set();\n                        typeReferences.add(attr.name);\n                        referencing.set(attr.declaringType, typeReferences);\n                    }\n                }\n            }\n        }\n        return referencing;\n    }\n    /**\n     * @inheritDoc\n     */\n    createObjectFactory(db) {\n        switch (this.name) {\n            case 'User':\n                return UserFactory.create(this, db);\n            case 'Device':\n                return DeviceFactory.create(this, db);\n            default:\n                return EntityFactory.create(this, db);\n        }\n    }\n    /**\n     * @param state The root object state, can be <code>null</code> if a currentObject is provided\n     * @param jsonObject The json data to merge\n     * @param currentObject The object where the jsonObject will be merged into, if the current object is null,\n     * a new instance will be created\n     * @param options The options used to apply the json\n     * @param [options.persisting=false] indicates if the current state will be persisted.\n     * Used to update the internal change tracking state of collections and mark the object persistent or dirty afterwards\n     * @param [options.onlyMetadata=false] Indicates if only the metadata should be updated\n     * @return The merged entity instance\n     */\n    fromJsonValue(state, jsonObject, currentObject, options) {\n        var _a, _b;\n        // handle references\n        if (typeof jsonObject === 'string') {\n            return ((_a = state.db) === null || _a === void 0 ? void 0 : _a.getReference(jsonObject)) || null;\n        }\n        if (!jsonObject || typeof jsonObject !== 'object') {\n            return null;\n        }\n        const json = jsonObject;\n        const opt = Object.assign({ persisting: false, onlyMetadata: false }, options);\n        let obj;\n        if (currentObject) {\n            const currentObjectState = Metadata.get(currentObject);\n            // merge state into the current object if:\n            // 1. The provided json does not contains an id and we have an already created object for it\n            // 2. The object was created without an id and was later fetched from the server (e.g. User/Role)\n            // 3. The provided json has the same id as the current object, they can differ on embedded json for a reference\n            if (!json.id || !currentObjectState.id || json.id === currentObjectState.id) {\n                obj = currentObject;\n            }\n        }\n        if (!obj) {\n            obj = (_b = state.db) === null || _b === void 0 ? void 0 : _b.getReference(this.typeConstructor, json.id);\n        }\n        if (!obj) {\n            return null;\n        }\n        const objectState = Metadata.get(obj);\n        // deserialize our properties\n        objectState.enable(false);\n        super.fromJsonValue(objectState, json, obj, opt);\n        objectState.enable(true);\n        if (opt.persisting) {\n            objectState.setPersistent();\n        }\n        else if (!opt.onlyMetadata) {\n            objectState.setDirty();\n        }\n        return obj;\n    }\n    /**\n     * Converts the given object to json\n     * @param state The root object state\n     * @param object The object to convert\n     * @param [options=false] to json options by default excludes the metadata\n     * @param [options.excludeMetadata=false] Excludes the metadata form the serialized json\n     * @param [options.depth=0] Includes up to depth referenced objects into the serialized json\n     * @param [options.persisting=false] indicates if the current state will be persisted.\n     *  Used to update the internal change tracking state of collections and mark the object persistent if its true\n     * @return JSON-Object\n     */\n    toJsonValue(state, object, options) {\n        const { depth = 0, persisting = false } = options || {};\n        const isInDepth = depth === true || depth > -1;\n        // check if object is already loaded in state\n        const objectState = object && Metadata.get(object);\n        if (isInDepth && objectState && objectState.isAvailable) {\n            // serialize our properties\n            objectState.enable(false);\n            const json = super.toJsonValue(objectState, object, Object.assign(Object.assign({}, options), { persisting, depth: typeof depth === 'boolean' ? depth : depth - 1 }));\n            objectState.enable(true);\n            return json;\n        }\n        if (state.db && object instanceof this.typeConstructor) {\n            object.attach(state.db);\n            return object.id;\n        }\n        return null;\n    }\n    toString() {\n        return `EntityType(${this.ref})`;\n    }\n    toJSON() {\n        const _a = super.toJSON(), { acl } = _a, json = __rest(_a, [\"acl\"]);\n        return Object.assign(Object.assign({}, json), { acl: Object.assign(Object.assign({}, acl), { schemaSubclass: this.schemaSubclassPermission.toJSON(), load: this.loadPermission.toJSON(), insert: this.insertPermission.toJSON(), update: this.updatePermission.toJSON(), delete: this.deletePermission.toJSON(), query: this.queryPermission.toJSON() }) });\n    }\n}\nEntityType.Object = class ObjectType extends EntityType {\n    static get ref() {\n        return '/db/Object';\n    }\n    constructor() {\n        super(EntityType.Object.ref, null, Object);\n        this.declaredId = new class extends SingularAttribute {\n            constructor() {\n                super('id', BasicType.String, true);\n            }\n            getJsonValue(state) {\n                return state.id || undefined;\n            }\n            setJsonValue(state, object, jsonValue) {\n                if (!state.id) {\n                    // eslint-disable-next-line no-param-reassign\n                    state.id = jsonValue;\n                }\n            }\n        }();\n        this.declaredId.init(this, 0);\n        this.declaredId.isId = true;\n        this.declaredVersion = new class extends SingularAttribute {\n            constructor() {\n                super('version', BasicType.Integer, true);\n            }\n            getJsonValue(state) {\n                return state.version || undefined;\n            }\n            setJsonValue(state, object, jsonValue) {\n                if (jsonValue) {\n                    // eslint-disable-next-line no-param-reassign\n                    state.version = jsonValue;\n                }\n            }\n        }();\n        this.declaredVersion.init(this, 1);\n        this.declaredVersion.isVersion = true;\n        this.declaredAcl = new class extends SingularAttribute {\n            constructor() {\n                super('acl', BasicType.JsonObject, true);\n            }\n            getJsonValue(state, object, options) {\n                const persisted = Attribute.attachState(object, {});\n                const persistedAcl = persisted.acl || {};\n                const acl = state.acl.toJSON();\n                const unchanged = Object.keys(acl).every((permission) => {\n                    const oldPermission = (persistedAcl[permission] || {});\n                    const newPermission = acl[permission];\n                    const newKeys = Object.keys(newPermission);\n                    const oldKeys = Object.keys(oldPermission);\n                    return newKeys.length === oldKeys.length\n                        && newKeys.every((ref) => oldPermission[ref] === newPermission[ref]);\n                });\n                if (!unchanged) {\n                    state.setDirty();\n                }\n                if (options.persisting) {\n                    persisted.acl = acl;\n                }\n                return acl;\n            }\n            setJsonValue(state, object, jsonValue, options) {\n                const acl = (jsonValue || {});\n                if (options.persisting) {\n                    const persistedState = Attribute.attachState(object, {});\n                    persistedState.acl = acl;\n                }\n                state.acl.fromJSON(acl);\n            }\n        }();\n        this.declaredAcl.init(this, 2);\n        this.declaredAcl.isAcl = true;\n        this.declaredAttributes = [this.declaredId, this.declaredVersion, this.declaredAcl];\n    }\n    createObjectFactory() {\n        throw new Error(\"Objects can't be directly created and persisted\");\n    }\n};\n//# sourceMappingURL=data:application/json;base64,","import { ManagedType } from './ManagedType';\nimport { PersistenceType } from './Type';\nimport { Managed, ManagedFactory } from '../binding';\nexport class EmbeddableType extends ManagedType {\n    /**\n     * @inheritDoc\n     */\n    get persistenceType() {\n        return PersistenceType.EMBEDDABLE;\n    }\n    /**\n     * @inheritDoc\n     */\n    createProxyClass() {\n        return this.enhancer.createProxy(Managed);\n    }\n    /**\n     * @inheritDoc\n     */\n    createObjectFactory(db) {\n        return ManagedFactory.create(this, db);\n    }\n    /**\n     * @inheritDoc\n     */\n    fromJsonValue(state, jsonObject, currentObject, options) {\n        let obj = currentObject;\n        if (jsonObject) {\n            if (!(obj instanceof this.typeConstructor)) {\n                obj = this.create();\n            }\n        }\n        return super.fromJsonValue(state, jsonObject, obj, options);\n    }\n    toString() {\n        return `EmbeddableType(${this.ref})`;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW1iZWRkYWJsZVR5cGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFbWJlZGRhYmxlVHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDekMsT0FBTyxFQUFFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFLckQsTUFBTSxPQUFPLGNBQWtDLFNBQVEsV0FBYztJQUNuRTs7T0FFRztJQUNILElBQUksZUFBZTtRQUNqQixPQUFPLGVBQWUsQ0FBQyxVQUFVLENBQUM7SUFDcEMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsZ0JBQWdCO1FBQ2QsT0FBTyxJQUFJLENBQUMsUUFBUyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxtQkFBbUIsQ0FBQyxFQUFpQjtRQUNuQyxPQUFPLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRDs7T0FFRztJQUNILGFBQWEsQ0FBQyxLQUFtQixFQUFFLFVBQWdCLEVBQUUsYUFBdUIsRUFDMUUsT0FBd0Q7UUFDeEQsSUFBSSxHQUFHLEdBQUcsYUFBYSxDQUFDO1FBRXhCLElBQUksVUFBVSxFQUFFO1lBQ2QsSUFBSSxDQUFDLENBQUMsR0FBRyxZQUFZLElBQUksQ0FBQyxlQUFlLENBQUMsRUFBRTtnQkFDMUMsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQzthQUNyQjtTQUNGO1FBRUQsT0FBTyxLQUFLLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCxRQUFRO1FBQ04sT0FBTyxrQkFBa0IsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDO0lBQ3ZDLENBQUM7Q0FDRiJ9","import { CollectionType, PluralAttribute } from './PluralAttribute';\nimport { Attribute } from './Attribute';\nexport class ListAttribute extends PluralAttribute {\n    /**\n     * Get the type id for this list type\n     */\n    static get ref() {\n        return '/db/collection.List';\n    }\n    /**\n     * @inheritDoc\n     */\n    get collectionType() {\n        return CollectionType.LIST;\n    }\n    /**\n     * @param name\n     * @param elementType\n     */\n    constructor(name, elementType) {\n        super(name, Array, elementType);\n    }\n    /**\n     * @inheritDoc\n     */\n    getJsonValue(state, object, options) {\n        const value = this.getValue(object);\n        if (!(value instanceof this.typeConstructor)) {\n            return null;\n        }\n        const len = value.length;\n        const persisting = new Array(len);\n        const attachedState = Attribute.attachState(value);\n        const persistedState = attachedState || [];\n        let changed = !attachedState || attachedState.length !== len;\n        const json = new Array(len);\n        for (let i = 0; i < len; i += 1) {\n            const el = value[i];\n            json[i] = this.elementType.toJsonValue(state, el, options);\n            persisting[i] = el;\n            changed = changed || persistedState[i] !== el;\n        }\n        if (options.persisting) {\n            Attribute.attachState(value, persisting, true);\n        }\n        if (changed) {\n            state.setDirty();\n        }\n        return json;\n    }\n    /**\n     * @inheritDoc\n     */\n    setJsonValue(state, object, json, options) {\n        let value = null;\n        if (json) {\n            value = this.getValue(object);\n            const len = json.length;\n            if (!(value instanceof this.typeConstructor)) {\n                value = new this.typeConstructor(len); // eslint-disable-line new-cap\n            }\n            const persisting = new Array(len);\n            const persistedState = Attribute.attachState(value) || [];\n            // clear additional items\n            if (len < value.length) {\n                value.splice(len, value.length - len);\n            }\n            for (let i = 0; i < len; i += 1) {\n                const el = this.elementType.fromJsonValue(state, json[i], persistedState[i], options);\n                value[i] = el;\n                persisting[i] = el;\n            }\n            if (options.persisting) {\n                Attribute.attachState(value, persisting, true);\n            }\n        }\n        this.setValue(object, value);\n    }\n    /**\n     * @inheritDoc\n     */\n    toJSON() {\n        return Object.assign({ type: `${ListAttribute.ref}[${this.elementType.ref}]` }, super.toJSON());\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlzdEF0dHJpYnV0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkxpc3RBdHRyaWJ1dGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBTXhDLE1BQU0sT0FBTyxhQUFpQixTQUFRLGVBQW1DO0lBQ3ZFOztPQUVHO0lBQ0gsTUFBTSxLQUFLLEdBQUc7UUFDWixPQUFPLHFCQUFxQixDQUFDO0lBQy9CLENBQUM7SUFFRDs7T0FFRztJQUNILElBQUksY0FBYztRQUNoQixPQUFPLGNBQWMsQ0FBQyxJQUFJLENBQUM7SUFDN0IsQ0FBQztJQUVEOzs7T0FHRztJQUNILFlBQVksSUFBWSxFQUFFLFdBQW9CO1FBQzVDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRDs7T0FFRztJQUNILFlBQVksQ0FBQyxLQUFtQixFQUFFLE1BQWUsRUFDL0MsT0FBcUY7UUFDckYsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVwQyxJQUFJLENBQUMsQ0FBQyxLQUFLLFlBQVksSUFBSSxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQzVDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxNQUFNLEdBQUcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3pCLE1BQU0sVUFBVSxHQUFpQixJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoRCxNQUFNLGFBQWEsR0FBc0IsU0FBUyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0RSxNQUFNLGNBQWMsR0FBRyxhQUFhLElBQUksRUFBRSxDQUFDO1FBRTNDLElBQUksT0FBTyxHQUFHLENBQUMsYUFBYSxJQUFJLGFBQWEsQ0FBQyxNQUFN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","import { CollectionType, PluralAttribute } from './PluralAttribute';\nimport { Attribute } from './Attribute';\nimport { PersistentError } from '../error';\nexport class MapAttribute extends PluralAttribute {\n    /**\n     * @param name\n     * @param keyType\n     * @param elementType\n     */\n    constructor(name, keyType, elementType) {\n        super(name, Map, elementType);\n        this.keyType = keyType;\n    }\n    /**\n     * Get the type id for this map type\n     * @return\n     */\n    static get ref() {\n        return '/db/collection.Map';\n    }\n    /**\n     * @inheritDoc\n     */\n    get collectionType() {\n        return CollectionType.MAP;\n    }\n    /**\n     * @inheritDoc\n     */\n    getJsonValue(state, object, options) {\n        const value = this.getValue(object);\n        if (!(value instanceof this.typeConstructor)) {\n            return null;\n        }\n        const persisting = {};\n        const persistedState = Attribute.attachState(value) || {};\n        let changed = Attribute.attachSize(value) !== value.size;\n        const json = {};\n        const iter = value.entries();\n        for (let el = iter.next(); !el.done; el = iter.next()) {\n            const entry = el.value;\n            if (entry[0] === null || entry[0] === undefined) {\n                throw new PersistentError('Map keys can\\'t be null nor undefined.');\n            }\n            const jsonKey = this.keyValue(this.keyType.toJsonValue(state, entry[0], options));\n            json[jsonKey] = this.elementType.toJsonValue(state, entry[1], options);\n            persisting[jsonKey] = [entry[0], entry[1]];\n            changed = changed || (persistedState[jsonKey] || [])[1] !== entry[1];\n        }\n        if (options.persisting) {\n            Attribute.attachState(value, persisting, true);\n            Attribute.attachSize(value, value.size);\n        }\n        if (changed) {\n            state.setDirty();\n        }\n        return json;\n    }\n    /**\n     * @inheritDoc\n     */\n    setJsonValue(state, object, json, options) {\n        let value = null;\n        if (json) {\n            value = this.getValue(object);\n            if (!(value instanceof this.typeConstructor)) {\n                // eslint-disable-next-line new-cap\n                value = new this.typeConstructor();\n            }\n            const persisting = {};\n            const persistedState = Attribute.attachState(value) || {};\n            value.clear();\n            const jsonKeys = Object.keys(json);\n            for (let i = 0, len = jsonKeys.length; i < len; i += 1) {\n                const jsonKey = jsonKeys[i];\n                const persistedEntry = persistedState[jsonKey] || [];\n                // ensures that \"false\" keys will be converted to false, disallow null as keys\n                const key = this.keyType.fromJsonValue(state, jsonKey, persistedEntry[0], options);\n                const val = this.elementType.fromJsonValue(state, json[jsonKey], persistedEntry[1], options);\n                persisting[jsonKey] = [key, val];\n                value.set(key, val);\n            }\n            if (options.persisting) {\n                Attribute.attachState(value, persisting, true);\n                Attribute.attachSize(value, value.size);\n            }\n        }\n        this.setValue(object, value);\n    }\n    /**\n     * @inheritDoc\n     */\n    toJSON() {\n        return Object.assign({ type: `${MapAttribute.ref}[${this.keyType.ref},${this.elementType.ref}]` }, super.toJSON());\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwQXR0cmlidXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiTWFwQXR0cmlidXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN4QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBTTNDLE1BQU0sT0FBTyxZQUFtQixTQUFRLGVBQTJDO0lBa0JqRjs7OztPQUlHO0lBQ0gsWUFBWSxJQUFZLEVBQUUsT0FBZ0IsRUFBRSxXQUFvQjtRQUM5RCxLQUFLLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUM5QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBdkJEOzs7T0FHRztJQUNILE1BQU0sS0FBSyxHQUFHO1FBQ1osT0FBTyxvQkFBb0IsQ0FBQztJQUM5QixDQUFDO0lBRUQ7O09BRUc7SUFDSCxJQUFJLGNBQWM7UUFDaEIsT0FBTyxjQUFjLENBQUMsR0FBRyxDQUFDO0lBQzVCLENBQUM7SUFZRDs7T0FFRztJQUNILFlBQVksQ0FBQyxLQUFtQixFQUFFLE1BQWUsRUFDL0MsT0FBcUY7UUFDckYsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVwQyxJQUFJLENBQUMsQ0FBQyxLQUFLLFlBQVksSUFBSSxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQzVDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxNQUFNLFVBQVUsR0FBMEMsRUFBRSxDQUFDO1FBQzdELE1BQU0sY0FBYyxHQUEwQyxTQUFTLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNqRyxJQUFJLE9BQU8sR0FBRyxTQUFTLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxL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","import { CollectionType, PluralAttribute } from './PluralAttribute';\nimport { Attribute } from './Attribute';\nexport class SetAttribute extends PluralAttribute {\n    /**\n     * Get the type id for this set type\n     * @return\n     */\n    static get ref() {\n        return '/db/collection.Set';\n    }\n    /**\n     * @inheritDoc\n     */\n    get collectionType() {\n        return CollectionType.SET;\n    }\n    /**\n     * @param name The name of the attribute\n     * @param elementType The element type of the collection\n     */\n    constructor(name, elementType) {\n        super(name, Set, elementType);\n    }\n    /**\n     * @inheritDoc\n     */\n    getJsonValue(state, object, options) {\n        const value = this.getValue(object);\n        if (!(value instanceof this.typeConstructor)) {\n            return null;\n        }\n        const persisting = {};\n        const persistedState = Attribute.attachState(value) || {};\n        let changed = Attribute.attachSize(value) !== value.size;\n        const json = [];\n        const iter = value.values();\n        for (let item = iter.next(); !item.done; item = iter.next()) {\n            const el = item.value;\n            const jsonValue = this.elementType.toJsonValue(state, el, options);\n            json.push(jsonValue);\n            const keyValue = this.keyValue(jsonValue);\n            persisting[keyValue] = el;\n            changed = changed || persistedState[keyValue] !== el;\n        }\n        if (options.persisting) {\n            Attribute.attachState(value, persisting, true);\n            Attribute.attachSize(value, value.size);\n        }\n        if (changed) {\n            state.setDirty();\n        }\n        return json;\n    }\n    /**\n     * @inheritDoc\n     */\n    setJsonValue(state, object, json, options) {\n        let value = null;\n        if (json) {\n            value = this.getValue(object);\n            if (!(value instanceof this.typeConstructor)) {\n                value = new this.typeConstructor(); // eslint-disable-line new-cap\n            }\n            const persisting = {};\n            const persistedState = Attribute.attachState(value) || {};\n            value.clear();\n            for (let i = 0, len = json.length; i < len; i += 1) {\n                const jsonValue = json[i];\n                const keyValue = this.keyValue(jsonValue);\n                const el = this.elementType.fromJsonValue(state, jsonValue, persistedState[keyValue], options);\n                value.add(el);\n                persisting[keyValue] = el;\n            }\n            if (options.persisting) {\n                Attribute.attachState(value, persisting, true);\n                Attribute.attachSize(value, value.size);\n            }\n        }\n        this.setValue(object, value);\n    }\n    /**\n     * @inheritDoc\n     */\n    toJSON() {\n        return Object.assign({ type: `${SetAttribute.ref}[${this.elementType.ref}]` }, super.toJSON());\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2V0QXR0cmlidXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU2V0QXR0cmlidXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQU14QyxNQUFNLE9BQU8sWUFBZ0IsU0FBUSxlQUFpQztJQUNwRTs7O09BR0c7SUFDSCxNQUFNLEtBQUssR0FBRztRQUNaLE9BQU8sb0JBQW9CLENBQUM7SUFDOUIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsSUFBSSxjQUFjO1FBQ2hCLE9BQU8sY0FBYyxDQUFDLEdBQUcsQ0FBQztJQUM1QixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsWUFBWSxJQUFZLEVBQUUsV0FBb0I7UUFDNUMsS0FBSyxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsWUFBWSxDQUFDLEtBQW1CLEVBQUUsTUFBZSxFQUMvQyxPQUFxRjtRQUNyRixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXBDLElBQUksQ0FBQyxDQUFDLEtBQUssWUFBWSxJQUFJLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDNUMsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELE1BQU0sVUFBVSxHQUE4QixFQUFFLENBQUM7UUFDakQsTUFBTSxjQUFjLEdBQVksU0FBUyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDbkUsSUFBSSxPQUFPLEdBQUcsU0FBUyxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxLQUFLLENBQUMsSUFBSSxDQUFDO1FBRXpELE1BQU0sSUFBSSxHQUFjLEVBQUUsQ0FBQztRQUMzQixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsTUFBTSxF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","import { BasicType } from './BasicType';\nimport { EntityType } from './EntityType';\nimport { EmbeddableType } from './EmbeddableType';\nimport { ListAttribute } from './ListAttribute';\nimport { MapAttribute } from './MapAttribute';\nimport { SetAttribute } from './SetAttribute';\nimport { SingularAttribute } from './SingularAttribute';\nimport { PersistentError } from '../error';\nimport { Validator } from '../intersection';\nexport class ModelBuilder {\n    constructor() {\n        this.models = {};\n        this.modelDescriptors = null;\n        Object.keys(BasicType).forEach((typeName) => {\n            const basicType = BasicType[typeName];\n            if (basicType instanceof BasicType) {\n                this.models[basicType.ref] = basicType;\n            }\n        });\n    }\n    /**\n     * @param ref\n     * @return\n     */\n    getModel(ref) {\n        if (ref in this.models) {\n            return this.models[ref];\n        }\n        const model = this.buildModel(ref);\n        this.models[ref] = model;\n        return model;\n    }\n    /**\n     * @param modelDescriptors\n     * @return\n     */\n    buildModels(modelDescriptors) {\n        this.modelDescriptors = {};\n        modelDescriptors.forEach((modelDescriptor) => {\n            this.modelDescriptors[modelDescriptor.class] = modelDescriptor;\n        });\n        Object.keys(this.modelDescriptors).forEach((ref) => {\n            try {\n                const model = this.getModel(ref);\n                this.buildAttributes(model);\n            }\n            catch (e) {\n                throw new PersistentError(`Can't create model for entity class ${ref}`, e);\n            }\n        });\n        // ensure at least an object entity\n        this.getModel(EntityType.Object.ref);\n        return this.models;\n    }\n    /**\n     * @param ref\n     * @return\n     */\n    buildModel(ref) {\n        const modelDescriptor = this.modelDescriptors[ref];\n        let type;\n        if (ref === EntityType.Object.ref) {\n            type = new EntityType.Object();\n        }\n        else if (modelDescriptor) {\n            if (modelDescriptor.embedded) {\n                type = new EmbeddableType(ref);\n            }\n            else {\n                const superTypeIdentifier = modelDescriptor.superClass || EntityType.Object.ref;\n                type = new EntityType(ref, this.getModel(superTypeIdentifier));\n            }\n        }\n        else {\n            throw new TypeError(`No model available for ${ref}`);\n        }\n        type.metadata = {};\n        if (modelDescriptor) {\n            type.metadata = modelDescriptor.metadata || {};\n            const permissions = modelDescriptor.acl || {};\n            Object.keys(permissions).forEach((permission) => {\n                const permissionProperty = `${permission}Permission`;\n                type[permissionProperty].fromJSON(permissions[permission]);\n            });\n        }\n        return type;\n    }\n    /**\n     * @param model\n     * @return\n     */\n    buildAttributes(model) {\n        const modelDescriptor = this.modelDescriptors[model.ref];\n        const fields = modelDescriptor.fields;\n        Object.keys(fields).forEach((name) => {\n            const field = fields[name];\n            if (!model.getAttribute(name)) { // skip predefined attributes\n                model.addAttribute(this.buildAttribute(field), field.order);\n            }\n        });\n        if (typeof modelDescriptor.validationCode === 'string') {\n            // eslint-disable-next-line no-param-reassign\n            model.validationCode = Validator.compile(model, modelDescriptor.validationCode);\n        }\n    }\n    /**\n     * @param field The field metadata\n     * @param field.name The name of zhe field\n     * @param field.type The type reference of the field\n     * @param field.order The order number of the field\n     * @param field.metadata Additional metadata of the field\n     * @return\n     */\n    buildAttribute(field) {\n        // TODO: remove readonly if createdAt and updatedAt becomes real metadata fields in the schema\n        const isMetadata = field.flags && (field.flags.indexOf('METADATA') !== -1 || field.flags.indexOf('READONLY') !== -1);\n        const { name } = field;\n        const ref = field.type;\n        if (ref.indexOf('/db/collection.') !== 0) {\n            const singularAttribute = new SingularAttribute(name, this.getModel(ref), isMetadata);\n            singularAttribute.metadata = field.metadata;\n            return singularAttribute;\n        }\n        const collectionType = ref.substring(0, ref.indexOf('['));\n        const elementType = ref.substring(ref.indexOf('[') + 1, ref.indexOf(']')).trim();\n        switch (collectionType) {\n            case ListAttribute.ref:\n                return new ListAttribute(name, this.getModel(elementType));\n            case SetAttribute.ref:\n                return new SetAttribute(name, this.getModel(elementType));\n            case MapAttribute.ref: {\n                const keyType = elementType.substring(0, elementType.indexOf(',')).trim();\n                const valueType = elementType.substring(elementType.indexOf(',') + 1).trim();\n                return new MapAttribute(name, this.getModel(keyType), this.getModel(valueType));\n            }\n            default:\n                throw new TypeError(`No collection available for ${ref}`);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kZWxCdWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiTW9kZWxCdWlsZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUMxQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUszQyxPQUFPLEVBQWMsU0FBUyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFeEQsTUFBTSxPQUFPLFlBQVk7SUFLdkI7UUFKUSxXQUFNLEdBQWdDLEVBQUUsQ0FBQztRQUV6QyxxQkFBZ0IsR0FBcUMsSUFBSSxDQUFDO1FBRy9ELE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFnQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQzFFLE1BQU0sU0FBUyxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN0QyxJQUFJLFNBQVMsWUFBWSxTQUFTLEVBQUU7Z0JBQ2xDLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQzthQUN4QztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNILFFBQVEsQ0FBQyxHQUFXO1FBQ2xCLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDdEIsT0FB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","/**\n * Creates a new index instance which is needed to create an\n * database index.\n */\nexport class DbIndex {\n    /**\n     * @param keys The name of the field which will be used\n     * for the index,\n     * an object of an field and index type combination or\n     * an array of objects to create an compound index\n     * @param unique Indicates if the index will be unique\n     */\n    constructor(keys, unique) {\n        if (typeof keys === 'string') {\n            const key = {};\n            key[keys] = DbIndex.ASC;\n            this.keys = [key];\n        }\n        else if (Array.isArray(keys)) {\n            this.keys = keys;\n        }\n        else if (keys) {\n            this.keys = [keys];\n        }\n        else {\n            throw new Error('The keys parameter must be an String, Object or Array.');\n        }\n        this.unique = unique === true;\n    }\n    /**\n     * Returns DbIndex Object created from the given JSON\n     * @param json\n     * @return\n     */\n    static fromJSON(json) {\n        return new DbIndex(json.keys, json.unique);\n    }\n    /**\n     * Indicates if this index is for the given field or includes it in a compound index\n     * @param name The name of the field to check for\n     * @return <code>true</code> if the index contains this field\n     */\n    hasKey(name) {\n        for (let i = 0; i < this.keys.length; i += 1) {\n            if (this.keys[i][name]) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Indicates if this index is a compound index of multiple attributes\n     * @type boolean\n     * @readonly\n     */\n    get isCompound() {\n        return this.keys.length > 1;\n    }\n    /**\n     * Indicates if this index is an unique index\n     * @type boolean\n     * @readonly\n     */\n    get isUnique() {\n        return this.unique;\n    }\n    /**\n     * Returns a JSON representation of the Index object\n     *\n     * @return A Json of this Index object\n     */\n    toJSON() {\n        return {\n            unique: this.unique,\n            keys: this.keys,\n        };\n    }\n}\nDbIndex.ASC = 'asc';\nDbIndex.DESC = 'desc';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGJJbmRleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkRiSW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7OztHQUdHO0FBQ0gsTUFBTSxPQUFPLE9BQU87SUF1QmxCOzs7Ozs7T0FNRztJQUNILFlBQVksSUFBbUQsRUFBRSxNQUFnQjtRQUMvRSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtZQUM1QixNQUFNLEdBQUcsR0FBMEIsRUFBRSxDQUFDO1lBQ3RDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO1lBQ3hCLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNuQjthQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM5QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUNsQjthQUFNLElBQUksSUFBSSxFQUFFO1lBQ2YsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3BCO2FBQU07WUFDTCxNQUFNLElBQUksS0FBSyxDQUFDLHdEQUF3RCxDQUFDLENBQUM7U0FDM0U7UUFFRCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sS0FBSyxJQUFJLENBQUM7SUFDaEMsQ0FBQztJQTlCRDs7OztPQUlHO0lBQ0ksTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFhO1FBQ2xDLE9BQU8sSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQWlCLEVBQUUsSUFBSSxDQUFDLE1BQWlCLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBeUJEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsSUFBWTtRQUNqQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM1QyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3RCLE9BQU8sSUFBSSxDQUFDO2FBQ2I7U0FDRjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILE1BQU07UUFDSixPQUFPO1lBQ0wsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO1lBQ25CLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSTtTQUNoQixDQUFDO0lBQ0osQ0FBQzs7QUF2RnNCLFdBQUcsR0FBRyxLQUFLLENBQUM7QUFFWixZQUFJLEdBQUcsTUFBTSxDQUFDIn0=","import { ManagedType } from './ManagedType';\nimport { EntityType } from './EntityType';\nimport { Enhancer } from '../binding';\nimport { ModelBuilder } from './ModelBuilder';\nimport { DbIndex } from './DbIndex';\nimport { Lockable, } from '../util';\nimport { StatusCode } from '../connector';\nimport * as message from '../message';\nexport class Metamodel extends Lockable {\n    /**\n     * Constructs a new metamodel instance which represents the complete schema of one baqend app\n     * @param entityManagerFactory\n     */\n    constructor(entityManagerFactory) {\n        super();\n        /**\n         * Defines if the Metamodel has been finalized\n         */\n        this.isInitialized = false;\n        this.entities = {};\n        this.embeddables = {};\n        this.baseTypes = {};\n        this.enhancer = new Enhancer();\n        this.entityManagerFactory = entityManagerFactory;\n    }\n    /**\n     * Prepare the Metamodel for custom schema creation\n     * @param jsonMetamodel initialize the metamodel with the serialized json schema\n     * @return\n     */\n    init(jsonMetamodel) {\n        if (this.isInitialized) {\n            throw new Error('Metamodel is already initialized.');\n        }\n        this.fromJSON(jsonMetamodel || []);\n        this.isInitialized = true;\n    }\n    /**\n     * @param arg\n     * @return\n     */\n    getRef(arg) {\n        let ref;\n        if (typeof arg === 'string') {\n            ref = arg;\n            if (ref.indexOf('/db/') !== 0) {\n                ref = `/db/${arg}`;\n            }\n        }\n        else {\n            ref = Enhancer.getIdentifier(arg);\n        }\n        return ref;\n    }\n    /**\n     * Return the metamodel entity type representing the entity.\n     *\n     * @param typeConstructor - the type of the represented entity\n     * @return the metamodel entity type or null if the class is not a managed entity\n     */\n    entity(typeConstructor) {\n        const ref = this.getRef(typeConstructor);\n        return ref ? this.entities[ref] : null;\n    }\n    /**\n     * Return the metamodel basic type representing the native class.\n     * @param typeConstructor - the type of the represented native class\n     * @return the metamodel basic type\n     */\n    baseType(typeConstructor) {\n        let ref = null;\n        if (typeof typeConstructor === 'string') {\n            ref = this.getRef(typeConstructor);\n        }\n        else {\n            const baseTypesNames = Object.keys(this.baseTypes);\n            for (let i = 0, len = baseTypesNames.length; i < len; i += 1) {\n                const name = baseTypesNames[i];\n                const type = this.baseTypes[name];\n                if (!type.noResolving && type.typeConstructor === typeConstructor) {\n                    ref = name;\n                    break;\n                }\n            }\n        }\n        return ref ? this.baseTypes[ref] : null;\n    }\n    /**\n     * Return the metamodel embeddable type representing the embeddable class.\n     * @param typeConstructor - the type of the represented embeddable class\n     * @return the metamodel embeddable type or null if the class is not a managed embeddable\n     */\n    embeddable(typeConstructor) {\n        const ref = this.getRef(typeConstructor);\n        return ref ? this.embeddables[ref] : null;\n    }\n    /**\n     * Return the metamodel managed type representing the entity, mapped superclass, or embeddable class.\n     *\n     * @param typeConstructor - the type of the represented managed class\n     * @return the metamodel managed type\n     */\n    managedType(typeConstructor) {\n        return this.entity(typeConstructor) || this.embeddable(typeConstructor);\n    }\n    /**\n     * @param type\n     * @return the added type\n     */\n    addType(type) {\n        let types = {};\n        if (type.isBasic) {\n            types = this.baseTypes;\n        }\n        else if (type.isEmbeddable) {\n            type.init(this.enhancer);\n            types = this.embeddables;\n        }\n        else if (type.isEntity) {\n            const entityType = type;\n            entityType.init(this.enhancer);\n            types = this.entities;\n            if (entityType.superType === null && entityType.ref !== EntityType.Object.ref) {\n                entityType.superType = this.entity(EntityType.Object.ref);\n            }\n        }\n        if (types[type.ref]) {\n            throw new Error(`The type ${type.ref} is already declared.`);\n        }\n        types[type.ref] = type;\n        return type;\n    }\n    /**\n     * Load all schema data from the server\n     * @return\n     */\n    load() {\n        if (!this.isInitialized) {\n            return this.withLock(() => {\n                const msg = new message.GetAllSchemas();\n                return this.entityManagerFactory.send(msg).then((response) => {\n                    this.init(response.entity);\n                    return this;\n                });\n            });\n        }\n        throw new Error('Metamodel is already initialized.');\n    }\n    /**\n     * Store all local schema data on the server, or the provided one\n     *\n     * Note: The schema must be initialized, by init or load\n     *\n     * @param managedType The specific type to persist, if omitted the complete schema\n     * will be updated\n     * @return\n     */\n    save(managedType) {\n        return this.sendUpdate(managedType || this.toJSON()).then(() => this);\n    }\n    /**\n     * Update the metamodel with the schema\n     *\n     * The provided data object will be forwarded to the UpdateAllSchemas resource.\n     * The underlying schema of this Metamodel object will be replaced by the result.\n     *\n     * @param data The JSON which will be send to the UpdateAllSchemas resource.\n     * @return\n     */\n    update(data) {\n        return this.sendUpdate(data).then((response) => {\n            this.fromJSON(response.entity);\n            return this;\n        });\n    }\n    sendUpdate(data) {\n        return this.withLock(() => {\n            let msg;\n            if (data instanceof ManagedType) {\n                msg = new message.UpdateSchema(data.name, data.toJSON());\n            }\n            else {\n                msg = new message.UpdateAllSchemas(data);\n            }\n            return this.entityManagerFactory.send(msg);\n        });\n    }\n    /**\n     * Get the current schema types as json\n     * @return the json data\n     */\n    toJSON() {\n        if (!this.isInitialized) {\n            throw new Error('Metamodel is not initialized.');\n        }\n        return [].concat(Object.keys(this.entities).map((ref) => this.entities[ref].toJSON()), Object.keys(this.embeddables).map((ref) => this.embeddables[ref].toJSON()));\n    }\n    /**\n     * Replace the current schema by the provided one in json\n     * @param json The json schema data\n     * @return\n     */\n    fromJSON(json) {\n        const builder = new ModelBuilder();\n        const models = builder.buildModels(json);\n        this.baseTypes = {};\n        this.embeddables = {};\n        this.entities = {};\n        Object.keys(models).forEach((ref) => this.addType(models[ref]));\n    }\n    /**\n     * Creates an index\n     *\n     * @param bucket Name of the Bucket\n     * @param index Will be applied for the given bucket\n     * @return\n     */\n    createIndex(bucket, index) {\n        const msg = new message.CreateDropIndex(bucket, Object.assign(Object.assign({}, index.toJSON()), { drop: false }));\n        return this.entityManagerFactory.send(msg);\n    }\n    /**\n     * Drops an index\n     *\n     * @param bucket Name of the Bucket\n     * @param index Will be dropped for the given bucket\n     * @return\n     */\n    dropIndex(bucket, index) {\n        const msg = new message.CreateDropIndex(bucket, Object.assign(Object.assign({}, index.toJSON()), { drop: true }));\n        return this.entityManagerFactory.send(msg);\n    }\n    /**\n     * Drops all indexes\n     *\n     * @param bucket Indexes will be dropped for the given bucket\n     * @return\n     */\n    dropAllIndexes(bucket) {\n        const msg = new message.DropAllIndexes(bucket);\n        return this.entityManagerFactory.send(msg);\n    }\n    /**\n     * Loads all indexes for the given bucket\n     *\n     * @param bucket Current indexes will be loaded for the given bucket\n     * @return\n     */\n    getIndexes(bucket) {\n        const msg = new message.ListIndexes(bucket);\n        return this.entityManagerFactory.send(msg)\n            .then((response) => response.entity.map((el) => new DbIndex(el.keys, el.unique)))\n            .catch((e) => {\n            if (e.status === StatusCode.BUCKET_NOT_FOUND || e.status === StatusCode.OBJECT_NOT_FOUND) {\n                return null;\n            }\n            throw e;\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","import { CollectionType, PluralAttribute } from './PluralAttribute';\nexport class CollectionAttribute extends PluralAttribute {\n    /**\n     * @inheritDoc\n     */\n    get collectionType() {\n        return CollectionType.COLLECTION;\n    }\n    /**\n     * @param name - the name of the attribute\n     * @param typeConstructor - The collection constructor of the attribute\n     * @param elementType - The element type of the collection\n     */\n    constructor(name, typeConstructor, elementType) {\n        super(name, typeConstructor, elementType);\n        super(name, typeConstructor, elementType);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29sbGVjdGlvbkF0dHJpYnV0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNvbGxlY3Rpb25BdHRyaWJ1dGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUlwRSxNQUFNLE9BQWdCLG1CQUEwQixTQUFRLGVBQXFCO0lBQzNFOztPQUVHO0lBQ0gsSUFBSSxjQUFjO1FBQ2hCLE9BQU8sY0FBYyxDQUFDLFVBQVUsQ0FBQztJQUNuQyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFlBQXNCLElBQVksRUFBRSxlQUF5QixFQUFFLFdBQW9CO1FBQ2pGLEtBQUssQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQzFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsZUFBZSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7Q0FDRiJ9","export { Metamodel } from './Metamodel';\nexport { DbIndex } from './DbIndex';\nexport { Type, PersistenceType } from './Type';\nexport { SingularAttribute } from './SingularAttribute';\nexport { SetAttribute } from './SetAttribute';\nexport { PluralAttribute, CollectionType } from './PluralAttribute';\nexport { ModelBuilder } from './ModelBuilder';\nexport { MapAttribute } from './MapAttribute';\nexport { ManagedType } from './ManagedType';\nexport { ListAttribute } from './ListAttribute';\nexport { EntityType } from './EntityType';\nexport { EmbeddableType } from './EmbeddableType';\nexport { CollectionAttribute } from './CollectionAttribute';\nexport { BasicType } from './BasicType';\nexport { Attribute, PersistentAttributeType } from './Attribute';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDcEMsT0FBTyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxlQUFlLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQzFDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxhQUFhLENBQUMifQ==","import { Permission } from './intersection/Permission';\n/**\n * Creates a new Acl object, with an empty rule set for an object\n */\nexport class Acl {\n    constructor() {\n        /**\n         * The read permission of the object\n         */\n        this.read = new Permission();\n        /**\n         * The write permission of the object\n         */\n        this.write = new Permission();\n    }\n    /**\n     * Removes all acl rules, read and write access is public afterwards\n     *\n     * @return\n     * */\n    clear() {\n        this.read.clear();\n        this.write.clear();\n    }\n    /**\n     * Copies permissions from another ACL\n     *\n     * @param acl The ACL to copy from\n     * @return\n     */\n    copy(acl) {\n        this.read.copy(acl.read);\n        this.write.copy(acl.write);\n        return this;\n    }\n    /**\n     * Gets whenever all users and roles have the permission to read the object\n     *\n     * @return <code>true</code> If public access is allowed\n     */\n    isPublicReadAllowed() {\n        return this.read.isPublicAllowed();\n    }\n    /**\n     * Sets whenever all users and roles should have the permission to read the object\n     *\n     * Note: All other allow read rules will be removed.\n     *\n     * @return\n     * */\n    setPublicReadAllowed() {\n        return this.read.setPublicAllowed();\n    }\n    /**\n     * Checks whenever the user or role is explicit allowed to read the object\n     *\n     * @param userOrRole The user or role to check for\n     * @return <code>true</code> if read access is explicitly allowed for the given user or role\n     */\n    isReadAllowed(userOrRole) {\n        return this.read.isAllowed(userOrRole);\n    }\n    /**\n     * Checks whenever the user or role is explicit denied to read the object\n     *\n     * @param userOrRole The user or role to check for\n     * @return <code>true</code> if read access is explicitly denied for the given user or role\n     */\n    isReadDenied(userOrRole) {\n        return this.read.isDenied(userOrRole);\n    }\n    /**\n     * Allows the given user or rule to read the object\n     *\n     * @param userOrRole The user or role to allow\n     * @return this acl object\n     */\n    allowReadAccess(...userOrRole) {\n        this.read.allowAccess(...userOrRole);\n        return this;\n    }\n    /**\n     * Denies the given user or rule to read the object\n     *\n     * @param userOrRole The user or role to deny\n     * @return this acl object\n     */\n    denyReadAccess(...userOrRole) {\n        this.read.denyAccess(...userOrRole);\n        return this;\n    }\n    /**\n     * Deletes any read allow/deny rule for the given user or role\n     *\n     * @param userOrRole The user or role\n     * @return this acl object\n     */\n    deleteReadAccess(...userOrRole) {\n        this.read.deleteAccess(...userOrRole);\n        return this;\n    }\n    /**\n     * Gets whenever all users and roles have the permission to write the object\n     *\n     * @return <code>true</code> If public access is allowed\n     */\n    isPublicWriteAllowed() {\n        return this.write.isPublicAllowed();\n    }\n    /**\n     * Sets whenever all users and roles should have the permission to write the object\n     *\n     * Note: All other allow write rules will be removed.\n     *\n     * @return\n     * */\n    setPublicWriteAllowed() {\n        return this.write.setPublicAllowed();\n    }\n    /**\n     * Checks whenever the user or role is explicit allowed to write the object\n     *\n     * @param userOrRole The user or role to check for\n     * @return <code>true</code> if write access is explicitly allowed for the given user or role\n     */\n    isWriteAllowed(userOrRole) {\n        return this.write.isAllowed(userOrRole);\n    }\n    /**\n     * Checks whenever the user or role is explicit denied to write the object\n     *\n     * @param userOrRole The user or role to check for\n     * @return <code>true</code> if write access is explicitly denied for the given user or role\n     */\n    isWriteDenied(userOrRole) {\n        return this.write.isDenied(userOrRole);\n    }\n    /**\n     * Allows the given user or rule to write the object\n     *\n     * @param userOrRole The user or role to allow\n     * @return this acl object\n     */\n    allowWriteAccess(...userOrRole) {\n        this.write.allowAccess(...userOrRole);\n        return this;\n    }\n    /**\n     * Denies the given user or rule to write the object\n     *\n     * @param userOrRole The user or role to deny\n     * @return this acl object\n     */\n    denyWriteAccess(...userOrRole) {\n        this.write.denyAccess(...userOrRole);\n        return this;\n    }\n    /**\n     * Deletes any write allow/deny rule for the given user or role\n     *\n     * @param userOrRole The user or role\n     * @return this acl object\n     */\n    deleteWriteAccess(...userOrRole) {\n        this.write.deleteAccess(...userOrRole);\n        return this;\n    }\n    /**\n     * A JSON representation of the set of rules\n     *\n     * @return\n     */\n    toJSON() {\n        return {\n            read: this.read.toJSON(),\n            write: this.write.toJSON(),\n        };\n    }\n    /**\n     * Sets the acl rules form JSON\n     *\n     * @param json The json encoded acls\n     * @return\n     */\n    fromJSON(json) {\n        this.read.fromJSON(json.read || {});\n        this.write.fromJSON(json.write || {});\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQWNsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUl2RDs7R0FFRztBQUNILE1BQU0sT0FBTyxHQUFHO0lBQWhCO1FBQ0U7O1dBRUc7UUFDTSxTQUFJLEdBQWUsSUFBSSxVQUFVLEVBQUUsQ0FBQztRQUU3Qzs7V0FFRztRQUNNLFVBQUssR0FBZSxJQUFJLFVBQVUsRUFBRSxDQUFDO0lBZ01oRCxDQUFDO0lBOUxDOzs7O1NBSUs7SUFDTCxLQUFLO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILElBQUksQ0FBQyxHQUFRO1FBQ1gsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsbUJBQW1CO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUQ7Ozs7OztTQU1LO0lBQ0wsb0JBQW9CO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILGFBQWEsQ0FBQyxVQUF5QjtRQUNyQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILFlBQVksQ0FBQyxVQUF5QjtRQUNwQyxPQUFPLElBQUksQ0FB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","/**\n * Creates a new GeoPoint instance\n * From latitude and longitude\n * From a json object\n * Or an tuple of latitude and longitude\n */\nexport class GeoPoint {\n    /**\n     * @param latitude A coordinate pair (latitude first),\n     * a GeoPoint like object or the GeoPoint's latitude\n     * @param longitude The GeoPoint's longitude\n     */\n    constructor(latitude, longitude) {\n        let lat;\n        let lng;\n        if (typeof latitude === 'string') {\n            const index = latitude.indexOf(';');\n            lat = Number(latitude.substring(0, index));\n            lng = Number(latitude.substring(index + 1));\n        }\n        else if (Array.isArray(latitude)) {\n            [lat, lng] = latitude;\n        }\n        else if (typeof latitude === 'object') {\n            lat = latitude.latitude;\n            lng = latitude.longitude;\n        }\n        else {\n            lat = typeof latitude === 'number' ? latitude : 0;\n            lng = typeof longitude === 'number' ? longitude : 0;\n        }\n        this.longitude = lng;\n        this.latitude = lat;\n        if (this.latitude < -90 || this.latitude > 90) {\n            throw new Error(`Latitude ${this.latitude} is not in bound of -90 <= latitude <= 90`);\n        }\n        if (this.longitude < -180 || this.longitude > 180) {\n            throw new Error(`Longitude ${this.longitude} is not in bound of -180 <= longitude <= 180`);\n        }\n    }\n    /**\n     * Creates a GeoPoint with the user's current location, if available.\n     * @return A promise that will be resolved with a GeoPoint\n     */\n    static current() {\n        return new Promise(((resolve, reject) => {\n            if (!navigator) {\n                reject(new Error('This seems not to be a browser context.'));\n            }\n            if (!navigator.geolocation) {\n                reject(new Error('This browser does not support geolocation.'));\n            }\n            navigator.geolocation.getCurrentPosition((location) => {\n                resolve(new GeoPoint(location.coords.latitude, location.coords.longitude));\n            }, (error) => {\n                reject(error);\n            });\n        }));\n    }\n    /**\n     * Returns the distance from this GeoPoint to another in kilometers.\n     * @param point another GeoPoint\n     * @return The distance in kilometers\n     *\n     * @see GeoPoint#radiansTo\n     */\n    kilometersTo(point) {\n        return Number((GeoPoint.EARTH_RADIUS_IN_KILOMETERS * this.radiansTo(point)).toFixed(3));\n    }\n    /**\n     * Returns the distance from this GeoPoint to another in miles.\n     * @param point another GeoPoint\n     * @return The distance in miles\n     *\n     * @see GeoPoint#radiansTo\n     */\n    milesTo(point) {\n        return Number((GeoPoint.EARTH_RADIUS_IN_MILES * this.radiansTo(point)).toFixed(3));\n    }\n    /**\n     * Computes the arc, in radian, between two WGS-84 positions.\n     *\n     * The haversine formula implementation is taken from:\n     * {@link http://www.movable-type.co.uk/scripts/latlong.html}\n     *\n     * Returns the distance from this GeoPoint to another in radians.\n     * @param point another GeoPoint\n     * @return the arc, in radian, between two WGS-84 positions\n     *\n     * @see http://en.wikipedia.org/wiki/Haversine_formula\n     */\n    radiansTo(point) {\n        const from = this;\n        const to = point;\n        const rad1 = from.latitude * GeoPoint.DEG_TO_RAD;\n        const rad2 = to.latitude * GeoPoint.DEG_TO_RAD;\n        const dLng = (to.longitude - from.longitude) * GeoPoint.DEG_TO_RAD;\n        return Math.acos((Math.sin(rad1) * Math.sin(rad2)) + (Math.cos(rad1) * Math.cos(rad2) * Math.cos(dLng)));\n    }\n    /**\n     * A String representation in latitude, longitude format\n     * @return The string representation of this class\n     */\n    toString() {\n        return `${this.latitude};${this.longitude}`;\n    }\n    /**\n     * Returns a JSON representation of the GeoPoint\n     * @return A GeoJson object of this GeoPoint\n     */\n    toJSON() {\n        return { latitude: this.latitude, longitude: this.longitude };\n    }\n}\n/**\n * How many radians fit in one degree.\n */\nGeoPoint.DEG_TO_RAD = Math.PI / 180;\n/**\n * The Earth radius in kilometers used by {@link GeoPoint#kilometersTo}\n */\nGeoPoint.EARTH_RADIUS_IN_KILOMETERS = 6371;\n/**\n * The Earth radius in miles used by {@link GeoPoint#milesTo}\n */\nGeoPoint.EARTH_RADIUS_IN_MILES = 3956;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR2VvUG9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJHZW9Qb2ludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyxRQUFRO0lBK0NuQjs7OztPQUlHO0lBQ0gsWUFBWSxRQUF1RixFQUNqRyxTQUFrQjtRQUNsQixJQUFJLEdBQVcsQ0FBQztRQUNoQixJQUFJLEdBQVcsQ0FBQztRQUNoQixJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsRUFBRTtZQUNoQyxNQUFNLEtBQUssR0FBRyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3BDLEdBQUcsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUMzQyxHQUFHLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDN0M7YUFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDbEMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEdBQUcsUUFBUSxDQUFDO1NBQ3ZCO2FBQU0sSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7WUFDdkMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUM7WUFDeEIsR0FBRyxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUM7U0FDMUI7YUFBTTtZQUNMLEdBQUcsR0FBRyxPQUFPLFFBQVEsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xELEdBQUcsR0FBRyxPQUFPLFNBQVMsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3JEO1FBRUQsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUM7UUFDckIsSUFBSSxDQUFD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","import { EntityManagerFactory } from './EntityManagerFactory';\nexport const db = (() => {\n    const emf = new EntityManagerFactory();\n    const bq = emf.createEntityManager(true);\n    Object.assign(bq, {\n        configure(options) {\n            emf.configure(options);\n            return this;\n        },\n        connect(hostOrApp, secure, doneCallback, failCallback) {\n            if (secure instanceof Function) {\n                return this.connect(hostOrApp, undefined, secure, doneCallback);\n            }\n            emf.connect(hostOrApp, secure);\n            return this.ready(doneCallback, failCallback);\n        },\n    });\n    return bq;\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFxZW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYmFxZW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBOEI5RCxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEVBQUU7SUFDdEIsTUFBTSxHQUFHLEdBQUcsSUFBSSxvQkFBb0IsRUFBRSxDQUFDO0lBQ3ZDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUV6QyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRTtRQUNoQixTQUFTLENBQWUsT0FBTztZQUM3QixHQUFHLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3ZCLE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQztRQUVELE9BQU8sQ0FBZSxTQUFpQixFQUFFLE1BQTJCLEVBQUUsWUFBa0IsRUFBRSxZQUFrQjtZQUMxRyxJQUFJLE1BQU0sWUFBWSxRQUFRLEVBQUU7Z0JBQzlCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQzthQUNqRTtZQUVELEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQy9CLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7UUFDaEQsQ0FBQztLQUNpQixDQUFDLENBQUM7SUFFdEIsT0FBTyxFQUFZLENBQUM7QUFDdEIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyJ9","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as messages from './message';\nimport { FileFactory, LoginOption, } from './binding';\nimport { atob, deprecated, isNode, Lockable, uuid, } from './util';\nimport { StatusCode, OAuthMessages, } from './connector';\nimport { BloomFilter } from './caching';\nimport { GeoPoint } from './GeoPoint';\nimport { Builder } from './query';\nimport { EntityExistsError, IllegalEntityError, PersistentError } from './error';\nimport { MapAttribute, PluralAttribute, } from './metamodel';\nimport { Logger, Metadata, Modules, ValidationResult, Validator, } from './intersection';\nconst DB_PREFIX = '/db/';\nexport class EntityManager extends Lockable {\n    /**\n     * @param entityManagerFactory The factory which of this entityManager instance\n     */\n    constructor(entityManagerFactory) {\n        super();\n        /**\n         * Constructor for a new List collection\n         */\n        this.List = Array;\n        /**\n         * Constructor for a new Set collection\n         */\n        this.Set = Set;\n        /**\n         * Constructor for a new Map collection\n         */\n        this.Map = Map;\n        /**\n         * Constructor for a new GeoPoint\n         */\n        this.GeoPoint = GeoPoint;\n        /**\n         * Log messages can created by calling log directly as function, with a specific log level or with the helper\n         * methods, which a members of the log method.\n         *\n         * Logs will be filtered by the client logger and the before they persisted. The default log level is\n         * 'info' therefore all log messages below the given message aren't persisted.\n         *\n         * Examples:\n         * <pre class=\"prettyprint\">\n         // default log level ist info\n         db.log('test message %s', 'my string');\n         // info: test message my string\n      \n         // pass a explicit log level as the first argument, one of ('trace', 'debug', 'info', 'warn', 'error')\n         db.log('warn', 'test message %d', 123);\n         // warn: test message 123\n      \n         // debug log level will not be persisted by default, since the default logging level is info\n         db.log('debug', 'test message %j', {number: 123}, {});\n         // debug: test message {\"number\":123}\n         // data = {}\n      \n         // One additional json object can be provided, which will be persisted together with the log entry\n         db.log('info', 'test message %s, %s', 'first', 'second', {number: 123});\n         // info: test message first, second\n         // data = {number: 123}\n      \n         //use the log level helper\n         db.log.info('test message', 'first', 'second', {number: 123});\n         // info: test message first second\n         // data = {number: 123}\n      \n         //change the default log level to trace, i.e. all log levels will be persisted, note that the log level can be\n         //additionally configured in the baqend\n         db.log.level = 'trace';\n      \n         //trace will be persisted now\n         db.log.trace('test message', 'first', 'second', {number: 123});\n         // info: test message first second\n         // data = {number: 123}\n         * </pre>\n         */\n        this.log = Logger.create(this);\n        /**\n         * The connector used for requests\n         */\n        this.connection = null;\n        /**\n         * All managed and cached entity instances\n         * @type Map<String,Entity>\n         * @private\n         */\n        this.entities = {};\n        this.modules = new Modules(this);\n        /**\n         * The current logged in user object\n         */\n        this.me = null;\n        /**\n         * The current registered device object\n         */\n        this.deviceMe = null;\n        /**\n         * Returns the tokenStorage which will be used to authorize all requests.\n         */\n        this.tokenStorage = null; // is never null after em is ready\n        /**\n         * The bloom filter which contains staleness information of cached objects\n         */\n        this.bloomFilter = null;\n        /**\n         * Set of object ids that were revalidated after the Bloom filter was loaded.\n         */\n        this.cacheWhiteList = null;\n        /**\n         * Set of object ids that were updated but are not yet included in the bloom filter.\n         * This set essentially implements revalidation by side effect which does not work in Chrome.\n         */\n        this.cacheBlackList = null;\n        /**\n         * Bloom filter refresh interval in seconds.\n         */\n        this.bloomFilterRefresh = 60;\n        /**\n         * Bloom filter refresh Promise\n         */\n        this.bloomFilterLock = new Lockable();\n        /**\n         * A File factory for file objects.\n         * The file factory can be called to create new instances for files.\n         * The created instances implements the {@link File} interface\n         */\n        this.File = null; // is never null after the em is ready\n        this.entityManagerFactory = entityManagerFactory;\n        this.metamodel = entityManagerFactory.metamodel;\n        this.code = entityManagerFactory.code;\n    }\n    /**\n     * Determine whether the entity manager is open.\n     * true until the entity manager has been closed\n     */\n    get isOpen() {\n        return !!this.connection;\n    }\n    /**\n     * The authentication token if the user is logged in currently\n     */\n    get token() {\n        return this.tokenStorage.token;\n    }\n    /**\n     * Whether caching is disabled\n     * @deprecated\n     */\n    get isCachingDisabled() {\n        return !this.isCachingEnabled();\n    }\n    /**\n     * Whether caching is enabled\n     */\n    isCachingEnabled() {\n        return !!this.bloomFilter;\n    }\n    /**\n     * Returns true if the device token is already registered, otherwise false.\n     */\n    get isDeviceRegistered() {\n        return !!this.deviceMe;\n    }\n    /**\n     * The authentication token if the user is logged in currently\n     * @param value\n     */\n    set token(value) {\n        this.tokenStorage.update(value);\n    }\n    /**\n     * Connects this entityManager, used for synchronous and asynchronous initialization\n     * @param connector\n     * @param connectData\n     * @param tokenStorage The used tokenStorage for token persistence\n     */\n    connected(connector, connectData, tokenStorage) {\n        this.connection = connector;\n        this.tokenStorage = tokenStorage;\n        this.bloomFilterRefresh = this.entityManagerFactory.staleness;\n        this.File = FileFactory.create(this);\n        this._createObjectFactory(this.metamodel.embeddables);\n        this._createObjectFactory(this.metamodel.entities);\n        if (connectData) {\n            if (connectData.device) {\n                this._updateDevice(connectData.device);\n            }\n            if (connectData.user && tokenStorage.token) {\n                this._updateUser(connectData.user, true);\n            }\n            if (this.bloomFilterRefresh > 0 && connectData.bloomFilter && atob && !isNode) {\n                this._updateBloomFilter(connectData.bloomFilter);\n            }\n        }\n    }\n    /**\n     * @param types\n     * @return    * @private\n     */\n    _createObjectFactory(types) {\n        const values = Object.values(types);\n        for (let i = 0; i < values.length; i += 1) {\n            const type = values[i];\n            const { name } = type;\n            if (this[name]) {\n                type.typeConstructor = this[name];\n                Object.defineProperty(this, name, {\n                    value: type.createObjectFactory(this),\n                });\n            }\n            else {\n                Object.defineProperty(this, name, {\n                    get() {\n                        Object.defineProperty(this, name, {\n                            value: type.createObjectFactory(this),\n                        });\n                        return this[name];\n                    },\n                    set(typeConstructor) {\n                        type.typeConstructor = typeConstructor;\n                    },\n                    configurable: true,\n                });\n            }\n        }\n    }\n    send(message, ignoreCredentialError = true) {\n        if (!this.connection) {\n            throw new Error('This EntityManager is not connected.');\n        }\n        const msg = message;\n        msg.tokenStorage(this.tokenStorage);\n        let result = this.connection.send(msg);\n        if (!ignoreCredentialError) {\n            result = result.catch((e) => {\n                if (e.status === StatusCode.BAD_CREDENTIALS) {\n                    this._logout();\n                }\n                throw e;\n            });\n        }\n        return result;\n    }\n    /**\n     * Get an instance whose state may be lazily fetched\n     *\n     * If the requested instance does not exist in the database, the\n     * EntityNotFoundError is thrown when the instance state is first accessed.\n     * The application should not expect that the instance state will be available upon detachment,\n     * unless it was accessed by the application while the entity manager was open.\n     *\n     * @param entityClass\n     * @param key\n     * @return\n     */\n    getReference(entityClass, key) {\n        let id = null;\n        let type;\n        if (key) {\n            const keyAsStr = key;\n            type = this.metamodel.entity(entityClass);\n            if (keyAsStr.indexOf(DB_PREFIX) === 0) {\n                id = keyAsStr;\n            }\n            else {\n                id = `${type.ref}/${encodeURIComponent(keyAsStr)}`;\n            }\n        }\n        else if (typeof entityClass === 'string') {\n            const keyIndex = entityClass.indexOf('/', DB_PREFIX.length); // skip /db/\n            if (keyIndex !== -1) {\n                id = entityClass;\n            }\n            type = this.metamodel.entity(keyIndex !== -1 ? entityClass.substring(0, keyIndex) : entityClass);\n        }\n        else {\n            type = this.metamodel.entity(entityClass);\n        }\n        let entity = this.entities[id];\n        if (!entity) {\n            entity = type.create();\n            const metadata = Metadata.get(entity);\n            if (id) {\n                metadata.id = id;\n            }\n            metadata.setUnavailable();\n            this._attach(entity);\n        }\n        return entity;\n    }\n    /**\n     * Creates an instance of {@link Builder<T>} for query creation and execution\n     *\n     * The query results are instances of the resultClass argument.\n     *\n     * @param resultClass - the type of the query result\n     * @return A query builder to create one ore more queries for the specified class\n     */\n    createQueryBuilder(resultClass) {\n        return new Builder(this, resultClass);\n    }\n    /**\n     * Clear the persistence context, causing all managed entities to become detached\n     *\n     * Changes made to entities that have not been flushed to the database will not be persisted.\n     *\n     * @return\n     */\n    clear() {\n        this.entities = {};\n    }\n    /**\n     * Close an application-managed entity manager\n     *\n     * After the close method has been invoked, all methods on the EntityManager instance\n     * and any Query and TypedQuery objects obtained from it will throw the IllegalStateError\n     * except for transaction, and isOpen (which will return false). If this method\n     * is called when the entity manager is associated with an active transaction,\n     * the persistence context remains managed until the transaction completes.\n     *\n     * @return\n     */\n    close() {\n        this.connection = null;\n        return this.clear();\n    }\n    /**\n     * Check if the instance is a managed entity instance belonging to the current persistence context\n     *\n     * @param entity - entity instance\n     * @return boolean indicating if entity is in persistence context\n     */\n    contains(entity) {\n        return !!entity && !!entity.id && this.entities[entity.id] === entity;\n    }\n    /**\n     * Check if an object with the id from the given entity is already attached\n     *\n     * @param entity - entity instance\n     * @return boolean indicating if entity with same id is attached\n     */\n    containsById(entity) {\n        return !!(entity && entity.id && this.entities[entity.id]);\n    }\n    /**\n     * Remove the given entity from the persistence context, causing a managed entity to become detached\n     *\n     * Unflushed changes made to the entity if any (including removal of the entity),\n     * will not be synchronized to the database. Entities which previously referenced the detached entity will continue\n     * to reference it.\n     *\n     * @param entity The entity instance to detach.\n     * @return\n     */\n    detach(entity) {\n        const state = Metadata.get(entity);\n        return state.withLock(() => {\n            this.removeReference(entity);\n            return Promise.resolve(entity);\n        });\n    }\n    /**\n     * Resolve the depth by loading the referenced objects of the given entity\n     *\n     * @param entity - entity instance\n     * @param [options] The load options\n     * @return\n     */\n    resolveDepth(entity, options) {\n        if (!options || !options.depth) {\n            return Promise.resolve(entity);\n        }\n        const resolved = options.resolved || [];\n        const promises = [];\n        const subOptions = Object.assign(Object.assign({}, options), { resolved, depth: options.depth === true ? true : options.depth - 1 });\n        this.getSubEntities(entity, 1).forEach((subEntity) => {\n            if (subEntity !== null && resolved.indexOf(subEntity) === -1 && subEntity.id) {\n                resolved.push(subEntity);\n                promises.push(this.load(subEntity.id, undefined, subOptions));\n            }\n        });\n        return Promise.all(promises).then(() => entity);\n    }\n    /**\n     * Search for an entity of the specified oid\n     *\n     * If the entity instance is contained in the persistence context, it is returned from there.\n     *\n     * @param entityClass - entity class\n     * @param oid - Object ID\n     * @param [options] The load options.\n     * @return the loaded entity or null\n     */\n    load(entityClass, oid, options) {\n        const opt = options || {};\n        const entity = this.getReference(entityClass, oid);\n        const state = Metadata.get(entity);\n        if (!opt.refresh && opt.local && state.isAvailable) {\n            return this.resolveDepth(entity, opt);\n        }\n        const msg = new messages.GetObject(state.bucket, state.key);\n        this.ensureCacheHeader(entity.id, msg, opt.refresh);\n        return this.send(msg).then((response) => {\n            // refresh object if loaded older version from cache\n            // chrome doesn't using cache when ifNoneMatch is set\n            if (entity.version && entity.version > response.entity.version) {\n                opt.refresh = true;\n                return this.load(entityClass, oid, opt);\n            }\n            this.addToWhiteList(response.entity.id);\n            if (response.status !== StatusCode.NOT_MODIFIED) {\n                state.type.fromJsonValue(state, response.entity, entity, { persisting: true });\n            }\n            return this.resolveDepth(entity, opt);\n        }, (e) => {\n            if (e.status === StatusCode.OBJECT_NOT_FOUND) {\n                this.removeReference(entity);\n                state.setRemoved();\n                return null;\n            }\n            throw e;\n        });\n    }\n    /**\n     * @param entity\n     * @param options\n     * @return\n     */\n    insert(entity, options) {\n        const opt = options || {};\n        let isNew;\n        return this._save(entity, opt, (state, json) => {\n            if (state.version) {\n                throw new PersistentError('Existing objects can\\'t be inserted.');\n            }\n            isNew = !state.id;\n            return new messages.CreateObject(state.bucket, json);\n        }).then((val) => {\n            if (isNew) {\n                this._attach(entity);\n            }\n            return val;\n        });\n    }\n    /**\n     * @param entity\n     * @param options\n     * @return\n     */\n    update(entity, options) {\n        const opt = options || {};\n        return this._save(entity, opt, (state, json) => {\n            if (!state.version) {\n                throw new PersistentError('New objects can\\'t be inserted.');\n            }\n            if (opt.force) {\n                const { version } = json, jsonWithoutVersion = __rest(json, [\"version\"]);\n                return new messages.ReplaceObject(state.bucket, state.key, jsonWithoutVersion)\n                    .ifMatch('*');\n            }\n            return new messages.ReplaceObject(state.bucket, state.key, json)\n                .ifMatch(`${state.version}`);\n        });\n    }\n    /**\n     * @param entity\n     * @param options The save options\n     * @param withoutLock Set true to save the entity without locking\n     * @return\n     */\n    save(entity, options, withoutLock = false) {\n        const opt = options || {};\n        const msgFactory = (state, json) => {\n            if (opt.force) {\n                if (!state.id) {\n                    throw new PersistentError('New special objects can\\'t be forcefully saved.');\n                }\n                const { version } = json, jsonWithoutVersion = __rest(json, [\"version\"]);\n                return new messages.ReplaceObject(state.bucket, state.key, jsonWithoutVersion);\n            }\n            if (state.version) {\n                return new messages.ReplaceObject(state.bucket, state.key, json)\n                    .ifMatch(state.version);\n            }\n            return new messages.CreateObject(state.bucket, json);\n        };\n        return withoutLock ? this._locklessSave(entity, opt, msgFactory) : this._save(entity, opt, msgFactory);\n    }\n    /**\n     * @param entity\n     * @param cb pre-safe callback\n     * @return\n     */\n    optimisticSave(entity, cb) {\n        return Metadata.get(entity).withLock(() => this._optimisticSave(entity, cb));\n    }\n    /**\n     * @param entity\n     * @param cb pre-safe callback\n     * @return\n     * @private\n     */\n    _optimisticSave(entity, cb) {\n        let abort = false;\n        const abortFn = () => {\n            abort = true;\n        };\n        const promise = Promise.resolve(cb(entity, abortFn));\n        if (abort) {\n            return Promise.resolve(entity);\n        }\n        return promise.then(() => (this.save(entity, {}, true)\n            .catch((e) => {\n            if (e.status === 412) {\n                return this.refresh(entity, {})\n                    .then(() => this._optimisticSave(entity, cb));\n            }\n            throw e;\n        })));\n    }\n    /**\n     * Save the object state without locking\n     * @param entity\n     * @param options\n     * @param msgFactory\n     * @return\n     * @private\n     */\n    _locklessSave(entity, options, msgFactory) {\n        this.attach(entity);\n        const state = Metadata.get(entity);\n        let refPromises;\n        let json;\n        if (state.isAvailable) {\n            // getting json will check all collections changes, therefore we must do it before proofing the dirty state\n            json = state.type.toJsonValue(state, entity, {\n                persisting: true,\n            });\n        }\n        if (state.isDirty) {\n            if (!options.refresh) {\n                state.setPersistent();\n            }\n            const sendPromise = this.send(msgFactory(state, json)).then((response) => {\n                if (state.id && state.id !== response.entity.id) {\n                    this.removeReference(entity);\n                    state.id = response.entity.id;\n                    this._attach(entity);\n                }\n                state.type.fromJsonValue(state, response.entity, entity, {\n                    persisting: options.refresh,\n                    onlyMetadata: !options.refresh,\n                });\n                return entity;\n            }, (e) => {\n                if (e.status === StatusCode.OBJECT_NOT_FOUND) {\n                    this.removeReference(entity);\n                    state.setRemoved();\n                    return null;\n                }\n                state.setDirty();\n                throw e;\n            });\n            refPromises = [sendPromise];\n        }\n        else {\n            refPromises = [Promise.resolve(entity)];\n        }\n        const subOptions = Object.assign({}, options);\n        subOptions.depth = 0;\n        this.getSubEntities(entity, options.depth).forEach((sub) => {\n            refPromises.push(this._save(sub, subOptions, msgFactory));\n        });\n        return Promise.all(refPromises).then(() => entity);\n    }\n    /**\n     * Save and lock the object state\n     * @param entity\n     * @param options\n     * @param msgFactory\n     * @return\n     * @private\n     */\n    _save(entity, options, msgFactory) {\n        this.ensureBloomFilterFreshness();\n        const state = Metadata.get(entity);\n        if (state.version) {\n            this.addToBlackList(entity.id);\n        }\n        return state.withLock(() => this._locklessSave(entity, options, msgFactory));\n    }\n    /**\n     * Returns all referenced sub entities for the given depth and root entity\n     * @param entity\n     * @param depth\n     * @param [resolved]\n     * @param initialEntity\n     * @return\n     */\n    getSubEntities(entity, depth, resolved = [], initialEntity) {\n        if (!depth) {\n            return resolved;\n        }\n        const obj = initialEntity || entity;\n        const state = Metadata.get(entity);\n        const iter = state.type.references();\n        for (let item = iter.next(); !item.done; item = iter.next()) {\n            const { value } = item;\n            const subEntities = this.getSubEntitiesByPath(entity, value.path);\n            for (let i = 0, len = subEntities.length; i < len; i += 1) {\n                const subEntity = subEntities[i];\n                if (resolved.indexOf(subEntity) === -1 && subEntity !== obj) {\n                    resolved.push(subEntity);\n                    this.getSubEntities(subEntity, depth === true ? depth : depth - 1, resolved, obj);\n                }\n            }\n        }\n        return resolved;\n    }\n    /**\n     * Returns all referenced one level sub entities for the given path\n     * @param entity\n     * @param path\n     * @return\n     */\n    getSubEntitiesByPath(entity, path) {\n        let subEntities = [entity];\n        path.forEach((attributeName) => {\n            const tmpSubEntities = [];\n            subEntities.forEach((subEntity) => {\n                const curEntity = subEntity[attributeName];\n                if (!curEntity) {\n                    return;\n                }\n                const attribute = this.metamodel.managedType(subEntity.constructor).getAttribute(attributeName);\n                if (attribute instanceof PluralAttribute) {\n                    const iter = curEntity.entries();\n                    for (let item = iter.next(); !item.done; item = iter.next()) {\n                        const entry = item.value;\n                        tmpSubEntities.push(entry[1]);\n                        if (attribute instanceof MapAttribute && attribute.keyType.isEntity) {\n                            tmpSubEntities.push(entry[0]);\n                        }\n                    }\n                }\n                else {\n                    tmpSubEntities.push(curEntity);\n                }\n            });\n            subEntities = tmpSubEntities;\n        });\n        return subEntities;\n    }\n    /**\n     * Delete the entity instance.\n     * @param entity\n     * @param options The delete options\n     * @return\n     */\n    delete(entity, options) {\n        const opt = options || {};\n        this.attach(entity);\n        const state = Metadata.get(entity);\n        return state.withLock(() => {\n            if (!state.version && !opt.force) {\n                throw new IllegalEntityError(entity);\n            }\n            const msg = new messages.DeleteObject(state.bucket, state.key);\n            this.addToBlackList(entity.id);\n            if (!opt.force) {\n                msg.ifMatch(`${state.version}`);\n            }\n            const refPromises = [this.send(msg).then(() => {\n                    this.removeReference(entity);\n                    state.setRemoved();\n                    return entity;\n                })];\n            const subOptions = Object.assign({}, opt);\n            subOptions.depth = 0;\n            this.getSubEntities(entity, opt.depth).forEach((sub) => {\n                refPromises.push(this.delete(sub, subOptions));\n            });\n            return Promise.all(refPromises).then(() => entity);\n        });\n    }\n    /**\n     * Synchronize the persistence context to the underlying database.\n     *\n     * @return\n     */\n    flush() {\n        throw new Error('Not implemented.');\n    }\n    /**\n     * Make an instance managed and persistent.\n     * @param entity - entity instance\n     * @return\n     */\n    persist(entity) {\n        this.attach(entity);\n    }\n    /**\n     * Refresh the state of the instance from the database, overwriting changes made to the entity, if any.\n     * @param entity - entity instance\n     * @param options The refresh options\n     * @return\n     */\n    refresh(entity, options) {\n        if (!entity.id) {\n            // entity is not persisted so far\n            return Promise.resolve(entity);\n        }\n        return this.load(entity.id, undefined, Object.assign(Object.assign({}, options), { refresh: true }));\n    }\n    /**\n     * Attach the instance to this database context, if it is not already attached\n     * @param entity The entity to attach\n     * @return\n     */\n    attach(entity) {\n        if (!this.contains(entity)) {\n            const type = this.metamodel.entity(entity.constructor);\n            if (!type) {\n                throw new IllegalEntityError(entity);\n            }\n            if (this.containsById(entity)) {\n                throw new EntityExistsError(entity);\n            }\n            this._attach(entity);\n        }\n    }\n    _attach(entity) {\n        const metadata = Metadata.get(entity);\n        if (metadata.isAttached) {\n            if (metadata.db !== this) {\n                throw new EntityExistsError(entity);\n            }\n        }\n        else {\n            metadata.db = this;\n        }\n        if (!metadata.id) {\n            if (metadata.type.name !== 'User' && metadata.type.name !== 'Role' && metadata.type.name !== 'logs.AppLog') {\n                metadata.id = `${DB_PREFIX + metadata.type.name}/${uuid()}`;\n            }\n        }\n        if (metadata.id) {\n            this.entities[metadata.id] = entity;\n        }\n    }\n    removeReference(entity) {\n        const state = Metadata.get(entity);\n        if (!state || !state.id) {\n            throw new IllegalEntityError(entity);\n        }\n        delete this.entities[state.id];\n    }\n    register(user, password, loginOption) {\n        const login = loginOption > LoginOption.NO_LOGIN;\n        if (this.me && login) {\n            throw new PersistentError('User is already logged in.');\n        }\n        return this.withLock(() => {\n            const msg = new messages.Register({ user, password, login });\n            return this._userRequest(msg, loginOption);\n        });\n    }\n    login(username, password, loginOption) {\n        if (this.me) {\n            throw new PersistentError('User is already logged in.');\n        }\n        return this.withLock(() => {\n            const msg = new messages.Login({ username, password });\n            return this._userRequest(msg, loginOption);\n        });\n    }\n    logout() {\n        return this.withLock(() => this.send(new messages.Logout()).then(this._logout.bind(this)));\n    }\n    loginWithOAuth(provider, clientID, options) {\n        if (!this.connection) {\n            throw new Error('This EntityManager is not connected.');\n        }\n        if (this.me) {\n            throw new PersistentError('User is already logged in.');\n        }\n        const opt = Object.assign({ title: `Login with ${provider}`, timeout: 5 * 60 * 1000, state: {}, loginOption: true }, options);\n        if (opt.redirect) {\n            Object.assign(opt.state, { redirect: opt.redirect, loginOption: opt.loginOption });\n        }\n        let msg;\n        if (OAuthMessages[provider]) {\n            msg = new OAuthMessages[provider](clientID, opt.scope, JSON.stringify(opt.state));\n            msg.addRedirectOrigin(this.connection.origin + this.connection.basePath);\n        }\n        else {\n            throw new Error(`OAuth provider ${provider} not supported.`);\n        }\n        if (opt.path) {\n            msg.path(opt.path);\n        }\n        const windowOptions = { width: `${opt.width}`, height: `${opt.height}` };\n        if (opt.redirect) {\n            // use oauth via redirect by opening the login in the same window\n            // for app wrappers we need to open the system browser\n            const isBrowser = document.URL.indexOf('http://') !== -1 || document.URL.indexOf('https://') !== -1;\n            this.openOAuthWindow(msg.request.path, isBrowser ? '_self' : '_system', windowOptions);\n            return new Promise(() => { });\n        }\n        const req = this._userRequest(msg, opt.loginOption);\n        this.openOAuthWindow(msg.request.path, opt.title, windowOptions);\n        return new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => {\n                reject(new PersistentError('OAuth login timeout.'));\n            }, opt.timeout);\n            req.then(resolve, reject).then(() => {\n                clearTimeout(timeout);\n            });\n        });\n    }\n    /**\n     * Opens a new window use for OAuth logins\n     * @param url The url to open\n     * @param targetOrTitle The target of the window, or the title of the popup\n     * @param options Additional window options\n     * @return\n     */\n    openOAuthWindow(url, targetOrTitle, options) {\n        const str = Object.keys(options)\n            .filter((key) => options[key] !== undefined)\n            .map((key) => `${key}=${options[key]}`)\n            .join(',');\n        open(url, targetOrTitle, str); // eslint-disable-line no-restricted-globals\n    }\n    renew(loginOption) {\n        return this.withLock(() => {\n            const msg = new messages.Me();\n            return this._userRequest(msg, loginOption);\n        });\n    }\n    newPassword(username, password, newPassword) {\n        return this.withLock(() => {\n            const msg = new messages.NewPassword({ username, password, newPassword });\n            return this.send(msg, true).then((response) => this._updateUser(response.entity));\n        });\n    }\n    newPasswordWithToken(token, newPassword, loginOption) {\n        return this.withLock(() => (this._userRequest(new messages.NewPassword({ token, newPassword }), loginOption)));\n    }\n    resetPassword(username) {\n        return this.send(new messages.ResetPassword({ username }));\n    }\n    changeUsername(username, newUsername, password) {\n        return this.send(new messages.ChangeUsername({ username, newUsername, password }));\n    }\n    _updateUser(obj, updateMe = false) {\n        const user = this.getReference(obj.id);\n        const metadata = Metadata.get(user);\n        metadata.type.fromJsonValue(metadata, obj, user, { persisting: true });\n        if (updateMe) {\n            this.me = user;\n        }\n        return user;\n    }\n    _logout() {\n        this.me = null;\n        this.token = null;\n    }\n    _userRequest(msg, loginOption) {\n        const opt = loginOption === undefined ? true : loginOption;\n        const login = opt > LoginOption.NO_LOGIN;\n        if (login) {\n            this.tokenStorage.temporary = opt < LoginOption.PERSIST_LOGIN;\n        }\n        return this.send(msg, !login)\n            .then((response) => (response.entity ? this._updateUser(response.entity, login) : null), (e) => {\n            if (e.status === StatusCode.OBJECT_NOT_FOUND) {\n                if (login) {\n                    this._logout();\n                }\n                return null;\n            }\n            throw e;\n        });\n    }\n    /**\n     * @param deviceType The OS of the device (IOS/Android)\n     * @param subscription WebPush subscription\n     * @param device\n     * @return\n     */\n    registerDevice(deviceType, subscription, device) {\n        const msg = new messages.DeviceRegister({ devicetype: deviceType, subscription: subscription, device });\n        msg.withCredentials = true;\n        return this.send(msg)\n            .then((response) => this._updateDevice(response.entity));\n    }\n    _updateDevice(obj) {\n        const device = this.getReference(obj.id);\n        const metadata = Metadata.get(device);\n        metadata.type.fromJsonValue(metadata, obj, device, { persisting: true });\n        this.deviceMe = device;\n        return device;\n    }\n    checkDeviceRegistration() {\n        return this.send(new messages.DeviceRegistered())\n            .then(() => true, (e) => {\n            if (e.status === StatusCode.OBJECT_NOT_FOUND) {\n                return false;\n            }\n            throw e;\n        });\n    }\n    pushDevice(pushMessage) {\n        return this.send(new messages.DevicePush(pushMessage.toJSON()));\n    }\n    /**\n     * The given entity will be checked by the validation code of the entity type.\n     *\n     * @param entity\n     * @return result\n     */\n    validate(entity) {\n        const { type } = Metadata.get(entity);\n        const result = new ValidationResult();\n        const iter = type.attributes();\n        for (let item = iter.next(); !item.done; item = iter.next()) {\n            const validate = new Validator(item.value.name, entity);\n            result.fields[validate.key] = validate;\n        }\n        const { validationCode } = type;\n        if (validationCode) {\n            validationCode(result.fields);\n        }\n        return result;\n    }\n    /**\n     * Adds the given object id to the cacheWhiteList if needed.\n     * @param objectId The id to add.\n     * @return\n     */\n    addToWhiteList(objectId) {\n        if (this.isCachingEnabled()) {\n            if (this.bloomFilter.contains(objectId)) {\n                this.cacheWhiteList.add(objectId);\n            }\n            this.cacheBlackList.delete(objectId);\n        }\n    }\n    /**\n     * Adds the given object id to the cacheBlackList if needed.\n     * @param objectId The id to add.\n     * @return\n     */\n    addToBlackList(objectId) {\n        if (this.isCachingEnabled() && objectId) {\n            if (!this.bloomFilter.contains(objectId)) {\n                this.cacheBlackList.add(objectId);\n            }\n            this.cacheWhiteList.delete(objectId);\n        }\n    }\n    refreshBloomFilter() {\n        if (!this.isCachingEnabled()) {\n            return Promise.resolve(null);\n        }\n        const msg = new messages.GetBloomFilter();\n        msg.noCache();\n        return this.send(msg).then((response) => {\n            this._updateBloomFilter(response.entity);\n            return this.bloomFilter;\n        });\n    }\n    _updateBloomFilter(bloomFilter) {\n        this.bloomFilter = new BloomFilter(bloomFilter);\n        this.cacheWhiteList = new Set();\n        this.cacheBlackList = new Set();\n    }\n    /**\n     * Checks the freshness of the bloom filter and does a reload if necessary\n     */\n    ensureBloomFilterFreshness() {\n        if (!this.isCachingEnabled()) {\n            return;\n        }\n        const now = new Date().getTime();\n        const refreshRate = this.bloomFilterRefresh * 1000;\n        if (this.bloomFilterLock.isReady && now - this.bloomFilter.creation > refreshRate) {\n            this.bloomFilterLock.withLock(() => this.refreshBloomFilter());\n        }\n    }\n    /**\n     * Checks for a given id, if revalidation is required, the resource is stale or caching was disabled\n     * @param id The object id to check\n     * @return Indicates if the resource must be revalidated\n     */\n    mustRevalidate(id) {\n        if (isNode) {\n            return false;\n        }\n        this.ensureBloomFilterFreshness();\n        if (!this.isCachingEnabled() || !this.bloomFilterLock.isReady) {\n            return true;\n        }\n        return !this.cacheWhiteList.has(id) && (this.cacheBlackList.has(id) || this.bloomFilter.contains(id));\n    }\n    /**\n     * @param id To check the bloom filter\n     * @param message To attach the headers\n     * @param refresh To force the reload headers\n     * @return\n     */\n    ensureCacheHeader(id, message, refresh) {\n        const noCache = refresh || !id || this.mustRevalidate(id);\n        if (noCache) {\n            message.noCache();\n        }\n    }\n    /**\n     * Creates a absolute url for the given relative one\n     * @param relativePath the relative url\n     * @param authorize indicates if authorization credentials should be generated and be attached to the url\n     * @return a absolute url which is optionally signed with a resource token which authenticates the currently\n     * logged in user\n     */\n    createURL(relativePath, authorize) {\n        const { connection } = this;\n        if (!connection) {\n            throw new Error('This EntityManager is not connected.');\n        }\n        return this.tokenStorage.signPath(connection.basePath + relativePath, authorize)\n            .then((path) => {\n            let url = connection.origin + path;\n            if (this.mustRevalidate(relativePath)) {\n                url += `${authorize ? '&' : '?'}BCB`;\n            }\n            return url;\n        });\n    }\n    /**\n     * Requests a perpetual token for the given user\n     *\n     * Only users with the admin role are allowed to request an API token.\n     *\n     * @param entityClass\n     * @param user The user object or id of the user object\n     * @return\n     */\n    requestAPIToken(entityClass, user) {\n        const userObj = this._getUserReference(entityClass, user);\n        const msg = new messages.UserToken(userObj.key);\n        return this.send(msg).then((resp) => resp.entity);\n    }\n    /**\n     * Revoke all created tokens for the given user\n     *\n     * This method will revoke all previously issued tokens and the user must login again.\n     *\n     * @param entityClass\n     * @param user The user object or id of the user object\n     */\n    revokeAllTokens(entityClass, user) {\n        const userObj = this._getUserReference(entityClass, user);\n        const msg = new messages.RevokeUserToken(userObj.key);\n        return this.send(msg);\n    }\n    _getUserReference(entityClass, user) {\n        if (typeof user === 'string') {\n            return this.getReference(entityClass, user);\n        }\n        return user;\n    }\n}\n__decorate([\n    deprecated('EntityManager.isCachingEnabled()')\n], EntityManager.prototype, \"isCachingDisabled\", null);\n//# sourceMappingURL=data:application/json;base64,","import { EntityManager } from './EntityManager';\nimport * as message from './message';\nimport { Connector, WebSocketConnector, } from './connector';\nimport { Lockable } from './util';\nimport { TokenStorage, Code } from './intersection';\nimport { Metamodel } from './metamodel';\nconst CONNECTED = Symbol('Connected');\nconst WS = Symbol('WebSocket');\nexport class EntityManagerFactory extends Lockable {\n    /**\n     * Creates a new EntityManagerFactory connected to the given destination\n     * @param [options] The destination to connect with, or an options object\n     * @param [options.host] The destination to connect with\n     * @param [options.port=80|443] The optional destination port to connect with\n     * @param [options.secure=false] <code>true</code> To use a secure ssl encrypted connection\n     * @param [options.basePath=\"/v1\"] The base path of the api\n     * @param [options.schema=null] The serialized schema as json used to initialize the metamodel\n     * @param [options.tokenStorage] The tokenStorage which should be used by this emf\n     * @param [options.tokenStorageFactory] The tokenStorage factory implementation which\n     * should be used for token storage\n     * @param [options.staleness=60] The maximum staleness of objects that are acceptable while reading cached\n     * data\n     */\n    constructor(options = {}) {\n        super();\n        this.connection = null;\n        this.metamodel = this.createMetamodel();\n        this.code = new Code(this.metamodel, this);\n        this.tokenStorageFactory = TokenStorage.WEB_STORAGE || TokenStorage.GLOBAL;\n        this.tokenStorage = null;\n        this.staleness = null;\n        const opt = typeof options === 'string' ? { host: options } : options || {};\n        this.configure(opt);\n        let isReady = true;\n        let ready = new Promise((success) => {\n            this[CONNECTED] = success;\n        });\n        if (opt.host) {\n            this.connect(opt.host, opt.port, opt.secure, opt.basePath);\n        }\n        else {\n            isReady = false;\n        }\n        if (!this.tokenStorage) {\n            isReady = false;\n            ready = ready\n                .then(() => this.tokenStorageFactory.create(this.connection.origin))\n                .then((tokenStorage) => {\n                this.tokenStorage = tokenStorage;\n            });\n        }\n        if (opt.schema) {\n            this.connectData = opt;\n            this.metamodel.init(opt.schema);\n        }\n        else {\n            isReady = false;\n            ready = ready.then(() => {\n                const msg = new message.Connect();\n                msg.withCredentials = true; // used for registered devices\n                if (this.staleness === 0) {\n                    msg.noCache();\n                }\n                return this.send(msg);\n            }).then((response) => {\n                this.connectData = response.entity;\n                if (this.staleness === null) {\n                    this.staleness = this.connectData.bloomFilterRefresh || 60;\n                }\n                if (!this.metamodel.isInitialized) {\n                    this.metamodel.init(this.connectData.schema);\n                }\n                this.tokenStorage.update(this.connectData.token);\n            });\n        }\n        if (!isReady) {\n            this.withLock(() => ready, true);\n        }\n    }\n    /**\n     * Retrieves the websocket connection if the websocket SDK is available\n     */\n    get websocket() {\n        if (!this[WS]) {\n            const { secure } = this.connection;\n            let url;\n            if (this.connectData.websocket) {\n                url = (secure ? 'wss:' : 'ws:') + this.connectData.websocket;\n            }\n            else {\n                url = `${this.connection.origin.replace(/^http/, 'ws') + this.connection.basePath}/events`;\n            }\n            this[WS] = WebSocketConnector.create(url);\n        }\n        return this[WS];\n    }\n    /**\n     * Apply additional configurations to this EntityManagerFactory\n     * @param options The additional configuration options\n     * @param [options.tokenStorage] The tokenStorage which should be used by this emf\n     * @param [options.tokenStorageFactory] The tokenStorage factory implementation which\n     * should be used for token storage\n     * @param [options.staleness=60] The maximum staleness of objects that are acceptable while reading cached\n     * data, <code>0</code> to always bypass the browser cache\n     * @return\n     */\n    configure(options) {\n        if (this.connection) {\n            throw new Error('The EntityManagerFactory can only be configured before is is connected.');\n        }\n        if (options.tokenStorage) {\n            this.tokenStorage = options.tokenStorage;\n        }\n        if (options.tokenStorageFactory) {\n            this.tokenStorageFactory = options.tokenStorageFactory;\n        }\n        if (options.staleness !== undefined) {\n            this.staleness = options.staleness;\n        }\n    }\n    connect(hostOrApp, port, secure, basePath) {\n        if (this.connection) {\n            throw new Error('The EntityManagerFactory is already connected.');\n        }\n        if (typeof port === 'boolean') {\n            return this.connect(hostOrApp, 0, port, secure);\n        }\n        this.connection = Connector.create(hostOrApp, port, secure, basePath);\n        this[CONNECTED]();\n        return this.ready();\n    }\n    /**\n     * Creates a new Metamodel instance, which is not connected\n     * @return A new Metamodel instance\n     */\n    createMetamodel() {\n        return new Metamodel(this);\n    }\n    /**\n     * Create a new application-managed EntityManager.\n     *\n     * @param useSharedTokenStorage The token storage to persist the authorization token, or\n     * <code>true</code> To use the shared token storage of the emf.\n     * <code>false</code> To use a instance based storage.\n     *\n     * @return a new entityManager\n     */\n    createEntityManager(useSharedTokenStorage) {\n        const em = new EntityManager(this);\n        if (this.isReady) {\n            em.connected(this.connection, this.connectData, useSharedTokenStorage ? this.tokenStorage : new TokenStorage(this.connection.origin));\n        }\n        else {\n            em.withLock(() => this.ready().then(() => {\n                em.connected(this.connection, this.connectData, useSharedTokenStorage ? this.tokenStorage : new TokenStorage(this.connection.origin));\n            }), true);\n        }\n        return em;\n    }\n    send(msg) {\n        if (!msg.tokenStorage()) {\n            msg.tokenStorage(this.tokenStorage);\n        }\n        return this.connection.send(msg);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW50aXR5TWFuYWdlckZhY3RvcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFbnRpdHlNYW5hZ2VyRmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxLQUFLLE9BQU8sTUFBTSxXQUFXLENBQUM7QUFDckMsT0FBTyxFQUNMLFNBQVMsRUFBcUIsa0JBQWtCLEdBQ2pELE1BQU0sYUFBYSxDQUFDO0FBQ3JCLE9BQU8sRUFBVyxRQUFRLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDM0MsT0FBTyxFQUFFLFlBQVksRUFBdUIsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDekUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4QyxNQUFNLFNBQVMsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDdEMsTUFBTSxFQUFFLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBWS9CLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxRQUFRO0lBb0NoRDs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ0gsWUFBWSxVQVNDLEVBQUU7UUFDYixLQUFLLEVBQUUsQ0FBQztRQTNESCxlQUFVLEdBQXFCLElBQUksQ0FBQztRQUVwQyxjQUFTLEdBQWMsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBRTlDLFNBQUksR0FBUyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRTVDLHdCQUFtQixHQUF3QixZQUFZLENBQUMsV0FBVyxJQUFJLFlBQVksQ0FBQyxNQUFNLENBQUM7UUFFM0YsaUJBQVksR0FBd0IsSUFBSSxDQUFDO1FBRXpDLGNBQVMsR0FBa0IsSUFBSSxDQUFDO1FBbURyQyxNQUFNLEdBQUcsR0FBRyxPQUFPLE9BQU8sS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFF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","/**\n * An abstract Query which allows retrieving results\n */\nexport class Query {\n    /**\n     * @param entityManager - The owning EntityManager of this query\n     * @param resultClass - The result class of this query\n     */\n    constructor(entityManager, resultClass) {\n        this.entityManager = entityManager;\n        this.resultClass = resultClass;\n    }\n    /**\n     * Add an ascending sort for the specified field to this query\n     * @param field The field to sort\n     * @return The resulting Query\n     */\n    ascending(field) {\n        return this.addOrder(field, 1);\n    }\n    /**\n     * Add an decending sort for the specified field to this query\n     * @param field The field to sort\n     * @return The resulting Query\n     */\n    descending(field) {\n        return this.addOrder(field, -1);\n    }\n    /**\n     * Sets the sort of the query and discard all existing paramaters\n     * @param sort The new sort of the query which is an object whose keys are fields and the\n     * values are either +1 for ascending order or -1 for descending order\n     * @return The resulting Query\n     *\n     * @see http://docs.mongodb.org/manual/reference/method/cursor.sort/\n     */\n    sort(sort) {\n        if (typeof sort !== 'object' || Object.getPrototypeOf(sort) !== Object.prototype) {\n            throw new Error('sort must be an object.');\n        }\n        return this.addOrder(sort);\n    }\n    /**\n     * Sets the offset of the query, i.e. how many elements should be skipped\n     * @param offset The offset of this query\n     * @return The resulting Query\n     *\n     * @see http://docs.mongodb.org/manual/reference/method/cursor.skip/\n     */\n    offset(offset) {\n        if (offset < 0) {\n            throw new Error('The offset can\\'t be nagative.');\n        }\n        return this.addOffset(offset);\n    }\n    /**\n     * Sets the limit of this query, i.e hox many objects should be returnd\n     * @param limit The limit of this query\n     * @return The resulting Query\n     *\n     * @see http://docs.mongodb.org/manual/reference/method/cursor.limit/\n     */\n    limit(limit) {\n        if (limit < 0) {\n            throw new Error('The limit can\\'t be nagative.');\n        }\n        return this.addLimit(limit);\n    }\n}\nQuery.MAX_URI_SIZE = 2000;\nexport function flatArgs(args) {\n    return Array.prototype.concat.apply([], args);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJRdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTs7R0FFRztBQUNILE1BQU0sT0FBZ0IsS0FBSztJQUd6Qjs7O09BR0c7SUFDSCxZQUNrQixhQUE0QixFQUM1QixXQUFxQjtRQURyQixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUM1QixnQkFBVyxHQUFYLFdBQVcsQ0FBVTtJQUNwQyxDQUFDO0lBRUo7Ozs7T0FJRztJQUNILFNBQVMsQ0FBQyxLQUFhO1FBQ3JCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxVQUFVLENBQUMsS0FBYTtRQUN0QixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDSCxJQUFJLENBQUMsSUFBK0I7UUFDbEMsSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxNQUFNLENBQUMsU0FBUyxFQUFFO1lBQ2hGLE1BQU0sSUFBSSxLQUFLLENBQUMseUJBQXlCLENBQUMsQ0FBQztTQUM1QztRQUVELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0gsTUFBTSxDQUFDLE1BQWM7UUFDbkIsSUFBSSxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ2QsTUFBTSxJQUFJLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1NBQ25EO1FBRUQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSCxLQUFLLENBQUMsS0FBYTtRQUNqQixJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUU7WUFDYixNQUFNLElBQUksS0FBSyxDQUFDLCtCQUErQixDQUFDLENBQUM7U0FDbEQ7UUFFRCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7QUF6RXNCLGtCQUFZLEdBQUcsSUFBSSxDQUFDO0FBMlE3QyxNQUFNLFVBQVUsUUFBUSxDQUFDLElBQVc7SUFDbEMsT0FBTyxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2hELENBQUMifQ==","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Observable } from '../util/observable';\nimport { uuid } from '../util';\nimport { Metadata } from '../intersection';\nexport class Stream {\n    /**\n     * Creates a live updating object stream for a query\n     *\n     * @param entityManager The owning entity manager of this query\n     * @param query The query options\n     * @param query.query The serialized query\n     * @param query.bucket The Bucket on which the streaming query is performed\n     * @param query.sort the sort string\n     * @param query.limit the count, i.e. the number of items in the result\n     * @param query.offset offset, i.e. the number of items to skip\n     * @param query.initial Indicates if the initial result should be returned\n     * @param options an object containing parameters\n     * @return The query result as a live updating stream of objects\n     */\n    static createEventStream(entityManager, query, options) {\n        const opt = options || {};\n        opt.reconnects = 0;\n        return Stream.streamObservable(entityManager, query, opt, (msg, next) => {\n            const { type } = msg, eventProps = __rest(msg, [\"type\"]);\n            if (msg.type === 'result') {\n                msg.data.forEach((obj, index) => {\n                    const event = Object.assign(Object.assign(Object.assign({ matchType: 'add', operation: 'none', initial: true }, eventProps), { data: Stream.resolveObject(entityManager, obj) }), (query.sort && { index }));\n                    next(event);\n                });\n            }\n            if (msg.type === 'match') {\n                next(Object.assign(Object.assign({ initial: false }, eventProps), { data: Stream.resolveObject(entityManager, msg.data) }));\n            }\n        });\n    }\n    /**\n     * Creates a live updating result stream for a query\n     *\n     * @alias query.Stream.createStreamResult<T>\n     * @param entityManager The owning entity manager of this query\n     * @param query The query options\n     * @param query.query The serialized query\n     * @param query.bucket The Bucket on which the streaming query is performed\n     * @param query.sort the sort string\n     * @param query.limit the count, i.e. the number of items in the result\n     * @param query.offset offset, i.e. the number of items to skip\n     * @param options an object containing parameters\n     * @return The query result as a live updating query result\n     */\n    static createResultStream(entityManager, query, options) {\n        const opt = options || {};\n        opt.initial = true;\n        opt.matchTypes = 'all';\n        opt.operations = 'any';\n        let result;\n        const ordered = !!query.sort;\n        return Stream.streamObservable(entityManager, query, opt, (event, next) => {\n            if (event.type === 'result') {\n                result = event.data.map((obj) => Stream.resolveObject(entityManager, obj));\n                next(result.slice());\n            }\n            if (event.type === 'match') {\n                const obj = Stream.resolveObject(entityManager, event.data);\n                if (event.matchType === 'remove' || event.matchType === 'changeIndex') {\n                    // if we have removed the instance our self, we do not have the cached instances anymore\n                    // therefore we can't find it anymore in the result by identity\n                    for (let i = 0, len = result.length; i < len; i += 1) {\n                        if (result[i].id === event.data.id) {\n                            result.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n                if (event.matchType === 'add' || event.matchType === 'changeIndex') {\n                    if (ordered) {\n                        result.splice(event.index, 0, obj);\n                    }\n                    else {\n                        result.push(obj);\n                    }\n                }\n                next(result.slice());\n            }\n        });\n    }\n    static streamObservable(entityManager, query, options, mapper) {\n        const opt = Stream.parseOptions(options);\n        const socket = entityManager.entityManagerFactory.websocket;\n        const observable = new Observable((subscriber) => {\n            const id = uuid();\n            const stream = socket.openStream(entityManager.tokenStorage, id);\n            stream.send(Object.assign(Object.assign({ type: 'subscribe' }, query), opt));\n            let closed = false;\n            const next = subscriber.next.bind(subscriber);\n            const subscription = stream.subscribe({\n                complete() {\n                    closed = true;\n                    subscriber.complete();\n                },\n                error(e) {\n                    closed = true;\n                    subscriber.error(e);\n                },\n                next(msg) {\n                    mapper(msg, next);\n                },\n            });\n            return () => {\n                if (!closed) { // send unsubscribe only when we aren't completed by the socket and call it only once\n                    stream.send({ type: 'unsubscribe' });\n                    subscription.unsubscribe();\n                    closed = true;\n                }\n            };\n        });\n        return Stream.cachedObservable(observable, opt);\n    }\n    static cachedObservable(observable, options) {\n        let subscription = null;\n        const observers = [];\n        return new Observable((observer) => {\n            if (!subscription) {\n                let remainingRetries = options.reconnects;\n                let backoff = 1;\n                const subscriptionObserver = {\n                    next(msg) {\n                        // reset the backoff if we get a message\n                        backoff = 1;\n                        observers.forEach((o) => o.next(msg));\n                    },\n                    error(e) {\n                        observers.forEach((o) => o.error(e));\n                    },\n                    complete() {\n                        if (remainingRetries !== 0) {\n                            remainingRetries = remainingRetries < 0 ? -1 : remainingRetries - 1;\n                            setTimeout(() => {\n                                subscription = observable.subscribe(subscriptionObserver);\n                            }, backoff * 1000);\n                            backoff *= 2;\n                        }\n                        else {\n                            observers.forEach((o) => o.complete());\n                        }\n                    },\n                };\n                subscription = observable.subscribe(subscriptionObserver);\n            }\n            observers.push(observer);\n            return () => {\n                observers.splice(observers.indexOf(observer), 1);\n                if (!observers.length && subscription) {\n                    subscription.unsubscribe();\n                    subscription = null;\n                }\n            };\n        });\n    }\n    /**\n     * Parses the StreamOptions\n     *\n     * @param [options] object containing partial options\n     * @returns an object containing VALID options\n     */\n    static parseOptions(options) {\n        const opt = options || {};\n        const verified = {\n            initial: opt.initial === undefined || !!opt.initial,\n            matchTypes: Stream.normalizeMatchTypes(opt.matchTypes),\n            operations: Stream.normalizeOperations(opt.operations),\n            reconnects: Stream.normalizeReconnects(opt.reconnects),\n        };\n        if (verified.matchTypes.indexOf('all') === -1 && verified.operations.indexOf('any') === -1) {\n            throw new Error('Only subscriptions for either operations or matchTypes are allowed. You cannot subscribe to a query using matchTypes and operations at the same time!');\n        }\n        return verified;\n    }\n    static normalizeMatchTypes(list) {\n        return Stream.normalizeSortedSet(list, 'all', 'match types', ['add', 'change', 'changeIndex', 'match', 'remove']);\n    }\n    static normalizeReconnects(reconnects) {\n        if (reconnects === undefined) {\n            return -1;\n        }\n        return reconnects < 0 ? -1 : Number(reconnects);\n    }\n    static normalizeOperations(list) {\n        return Stream.normalizeSortedSet(list, 'any', 'operations', ['delete', 'insert', 'none', 'update']);\n    }\n    static normalizeSortedSet(list, wildcard, itemType, allowedItems) {\n        if (!list) {\n            return [wildcard];\n        }\n        const li = Array.isArray(list) ? list : [list];\n        if (li.length === 0) { // undefined or empty list --> default value\n            return [wildcard];\n        }\n        // sort, remove duplicates and check whether all values are allowed\n        li.sort();\n        let item;\n        let lastItem = null;\n        for (let i = li.length - 1; i >= 0; i -= 1) {\n            item = li[i];\n            if (!item) { // undefined and null item in the list --> invalid!\n                throw new Error('undefined and null not allowed!');\n            }\n            if (item === lastItem) { // remove duplicates\n                li.splice(i, 1);\n            }\n            if (item === wildcard) {\n                return [wildcard];\n            }\n            if (allowedItems.indexOf(item) === -1) { // raise error on invalid elements\n                throw new Error(`${item} not allowed for ${itemType}! (permitted: ${allowedItems}.)`);\n            }\n            lastItem = item;\n        }\n        return li;\n    }\n    static resolveObject(entityManager, object) {\n        const entity = entityManager.getReference(object.id);\n        const metadata = Metadata.get(entity);\n        if (!object.version) {\n            metadata.setRemoved();\n            entityManager.removeReference(entity);\n        }\n        else if (entity.version <= object.version) {\n            metadata.type.fromJsonValue(metadata, object, entity, { persisting: true });\n        }\n        return entity;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","import { Entity } from '../binding';\nimport { Query, } from './Query';\nimport * as message from '../message';\nimport { Metadata } from '../intersection';\nimport { Stream } from './Stream';\n/**\n * A Query Node saves the state of the query being built\n */\nexport class Node extends Query {\n    constructor() {\n        super(...arguments);\n        /**\n         * The offset how many results should be skipped\n         */\n        this.firstResult = 0;\n        /**\n         * The limit how many objects should be returned\n         * @type number\n         * @readonly\n         */\n        this.maxResults = -1;\n        /**\n         * The properties which should be used sort the result\n         */\n        this.order = {};\n    }\n    eventStream(options, onNext, onError, onComplete) {\n        if (options instanceof Function) {\n            return this.eventStream({}, options, onNext, onError);\n        }\n        const observable = Stream.createEventStream(this.entityManager, this.createRealTimeQuery(), options);\n        if (onNext instanceof Function) {\n            return observable.subscribe(onNext, onError, onComplete);\n        }\n        return observable;\n    }\n    resultStream(options, onNext, onError, onComplete) {\n        if (options instanceof Function) {\n            return this.resultStream({}, options, onNext, onError);\n        }\n        const observable = Stream.createResultStream(this.entityManager, this.createRealTimeQuery(), options);\n        if (onNext instanceof Function) {\n            return observable.subscribe(onNext, onError, onComplete);\n        }\n        return observable;\n    }\n    /**\n     * @inheritDoc\n     */\n    resultList(options, doneCallback, failCallback) {\n        var _a;\n        if (options instanceof Function) {\n            return this.resultList({}, options, doneCallback);\n        }\n        const type = this.resultClass ? this.entityManager.metamodel.entity(this.resultClass) : null;\n        if (!type) {\n            throw new Error('Only typed queries can be executed.');\n        }\n        const query = this.serializeQuery();\n        const sort = this.serializeSort();\n        const uriSize = (((_a = this.entityManager.connection) === null || _a === void 0 ? void 0 : _a.host.length) || 0) + query.length + sort.length;\n        let msg;\n        if (uriSize > Query.MAX_URI_SIZE) {\n            msg = new message.AdhocQueryPOST(type.name, this.firstResult, this.maxResults, sort)\n                .entity(query, 'text');\n        }\n        else {\n            msg = new message.AdhocQuery(type.name, query, this.firstResult, this.maxResults, sort);\n        }\n        return this.entityManager.send(msg)\n            .then((response) => this.createResultList(response.entity, options))\n            .then(doneCallback, failCallback);\n    }\n    /**\n     * @inheritDoc\n     */\n    singleResult(options, doneCallback, failCallback) {\n        var _a;\n        if (options instanceof Function) {\n            return this.singleResult({}, options, doneCallback);\n        }\n        const type = this.resultClass ? this.entityManager.metamodel.entity(this.resultClass) : null;\n        if (!type) {\n            throw new Error('Only typed queries can be executed.');\n        }\n        const query = this.serializeQuery();\n        const sort = this.serializeSort();\n        const uriSize = (((_a = this.entityManager.connection) === null || _a === void 0 ? void 0 : _a.host.length) || 0) + query.length;\n        let msg;\n        if (uriSize > Query.MAX_URI_SIZE) {\n            msg = new message.AdhocQueryPOST(type.name, this.firstResult, 1, sort)\n                .entity(query, 'text');\n        }\n        else {\n            msg = new message.AdhocQuery(type.name, query, this.firstResult, 1, sort);\n        }\n        return this.entityManager.send(msg)\n            .then((response) => this.createResultList(response.entity, options))\n            .then((list) => (list.length ? list[0] : null))\n            .then(doneCallback, failCallback);\n    }\n    /**\n     * @inheritDoc\n     */\n    count(doneCallback, failCallback) {\n        var _a;\n        const type = this.resultClass ? this.entityManager.metamodel.entity(this.resultClass) : null;\n        if (!type) {\n            throw new Error('Only typed queries can be executed.');\n        }\n        const query = this.serializeQuery();\n        const uriSize = (((_a = this.entityManager.connection) === null || _a === void 0 ? void 0 : _a.host.length) || 0) + query.length;\n        let msg;\n        if (uriSize > Query.MAX_URI_SIZE) {\n            msg = new message.AdhocCountQueryPOST(type.name)\n                .entity(query, 'text');\n        }\n        else {\n            msg = new message.AdhocCountQuery(type.name, query);\n        }\n        return this.entityManager.send(msg)\n            .then((response) => response.entity.count)\n            .then(doneCallback, failCallback);\n    }\n    serializeQuery() {\n        return JSON.stringify(this, function argSerializer(k, v) {\n            // this referees here to the object which owns the key k\n            const typedValue = this[k];\n            if (typedValue instanceof Date) {\n                return { $date: v };\n            }\n            if (typedValue instanceof Entity) {\n                return typedValue.id;\n            }\n            return v;\n        });\n    }\n    serializeSort() {\n        return JSON.stringify(this.order);\n    }\n    createResultList(result, options) {\n        if (result.length) {\n            return Promise.all(result.map((el) => {\n                if (el.id) {\n                    const entity = this.entityManager.getReference(this.resultClass, el.id);\n                    const metadata = Metadata.get(entity);\n                    metadata.type.fromJsonValue(metadata, el, entity, { persisting: true });\n                    return this.entityManager.resolveDepth(entity, options);\n                }\n                return this.entityManager.load(Object.keys(el)[0]);\n            }))\n                .then((objects) => objects.filter((val) => !!val));\n        }\n        return Promise.resolve([]);\n    }\n    createRealTimeQuery() {\n        const type = this.resultClass ? this.entityManager.metamodel.entity(this.resultClass) : null;\n        if (!type) {\n            throw new Error('Only typed queries can be executed.');\n        }\n        const query = {\n            bucket: type.name,\n            query: this.serializeQuery(),\n        };\n        const sort = this.serializeSort();\n        if (sort && sort !== '{}') {\n            query.sort = sort;\n        }\n        if (this.maxResults > 0) {\n            query.limit = this.maxResults;\n        }\n        if (this.firstResult > 0) {\n            query.offset = this.firstResult;\n        }\n        return query;\n    }\n    addOrder(fieldOrSort, order) {\n        if (typeof fieldOrSort === 'string') {\n            this.order[fieldOrSort] = order;\n        }\n        else {\n            this.order = fieldOrSort;\n        }\n        return this;\n    }\n    addOffset(offset) {\n        this.firstResult = offset;\n        return this;\n    }\n    addLimit(limit) {\n        this.maxResults = limit;\n        return this;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIk5vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUdwQyxPQUFPLEVBT0wsS0FBSyxHQUtOLE1BQU0sU0FBUyxDQUFDO0FBQ2pCLE9BQU8sS0FBSyxPQUFPLE1BQU0sWUFBWSxDQUFDO0FBR3RDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRWxDOztHQUVHO0FBQ0gsTUFBTSxPQUFPLElBQXVCLFNBQVEsS0FBUTtJQUFwRDs7UUFDRTs7V0FFRztRQUNJLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBRS9COzs7O1dBSUc7UUFDSSxlQUFVLEdBQVcsQ0FBQyxDQUFDLENBQUM7UUFFL0I7O1dBRUc7UUFDSSxVQUFLLEdBQWdDLEVBQUUsQ0FBQztJQXFOakQsQ0FBQztJQWhOQyxXQUFXLENBQUMsT0FBbUQsRUFBRSxNQUE0QyxFQUMzRyxPQUF5QyxFQUFFLFVBQTZCO1FBRXhFLElBQUksT0FBTyxZQUFZLFFBQVEsRUFBRTtZQUMvQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsRUFBRSxFQUFFLE9BQStCLEVBQUUsTUFBc0IsRUFBRSxPQUEyQixDQUFDLENBQUM7U0FDbkg7UUFFRCxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsaUJBQWlCLENBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUV4RyxJQUFJLE1BQU0sWUFBWSxRQUFRLEVBQUU7WUFDOUIsT0FBTyxVQUFVLENBQUMsU0FBUyxDQUFDLE1BQThCLEVBQUUsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1NBQ2xGO1FBRUQsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztJQUtELFlBQVksQ0FBQyxP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","import { flatArgs } from './Query';\nexport const Condition = {\n    where(conditions) {\n        return this.addFilter(null, null, conditions);\n    },\n    equal(field, value) {\n        return this.addFilter(field, null, value);\n    },\n    notEqual(field, value) {\n        return this.addFilter(field, '$ne', value);\n    },\n    greaterThan(field, value) {\n        return this.addFilter(field, '$gt', value);\n    },\n    greaterThanOrEqualTo(field, value) {\n        return this.addFilter(field, '$gte', value);\n    },\n    lessThan(field, value) {\n        return this.addFilter(field, '$lt', value);\n    },\n    lessThanOrEqualTo(field, value) {\n        return this.addFilter(field, '$lte', value);\n    },\n    between(field, greaterValue, lessValue) {\n        return this\n            .addFilter(field, '$gt', greaterValue)\n            .addFilter(field, '$lt', lessValue);\n    },\n    in(field, ...args) {\n        return this.addFilter(field, '$in', flatArgs(args));\n    },\n    notIn(field, ...args) {\n        return this.addFilter(field, '$nin', flatArgs(args));\n    },\n    isNull(field) {\n        return this.equal(field, null);\n    },\n    isNotNull(field) {\n        return this.addFilter(field, '$exists', true)\n            .addFilter(field, '$ne', null);\n    },\n    containsAll(field, ...args) {\n        return this.addFilter(field, '$all', flatArgs(args));\n    },\n    mod(field, divisor, remainder) {\n        return this.addFilter(field, '$mod', [divisor, remainder]);\n    },\n    matches(field, regExp) {\n        const reg = regExp instanceof RegExp ? regExp : new RegExp(regExp);\n        if (reg.ignoreCase) {\n            throw new Error('RegExp.ignoreCase flag is not supported.');\n        }\n        if (reg.global) {\n            throw new Error('RegExp.global flag is not supported.');\n        }\n        if (reg.source.indexOf('^') !== 0) {\n            throw new Error('regExp must be an anchored expression, i.e. it must be started with a ^.');\n        }\n        const result = this.addFilter(field, '$regex', reg.source);\n        if (reg.multiline) {\n            result.addFilter(field, '$options', 'm');\n        }\n        return result;\n    },\n    size(field, size) {\n        return this.addFilter(field, '$size', size);\n    },\n    near(field, geoPoint, maxDistance) {\n        return this.addFilter(field, '$nearSphere', {\n            $geometry: {\n                type: 'Point',\n                coordinates: [geoPoint.longitude, geoPoint.latitude],\n            },\n            $maxDistance: maxDistance,\n        });\n    },\n    withinPolygon(field, ...args) {\n        const geoPoints = flatArgs(args);\n        return this.addFilter(field, '$geoWithin', {\n            $geometry: {\n                type: 'Polygon',\n                coordinates: [geoPoints.map((geoPoint) => [geoPoint.longitude, geoPoint.latitude])],\n            },\n        });\n    },\n};\n// aliases\nObject.assign(Condition, {\n    eq: Condition.equal,\n    ne: Condition.notEqual,\n    lt: Condition.lessThan,\n    le: Condition.lessThanOrEqualTo,\n    gt: Condition.greaterThan,\n    ge: Condition.greaterThanOrEqualTo,\n    containsAny: Condition.in,\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZGl0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQ29uZGl0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxTQUFTLENBQUM7QUE0VW5DLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBNEI7SUFDaEQsS0FBSyxDQUF1QixVQUFVO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFRCxLQUFLLENBQXVCLEtBQUssRUFBRSxLQUFLO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxRQUFRLENBQXVCLEtBQUssRUFBRSxLQUFLO1FBQ3pDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxXQUFXLENBQXVCLEtBQUssRUFBRSxLQUFLO1FBQzVDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxvQkFBb0IsQ0FBdUIsS0FBSyxFQUFFLEtBQUs7UUFDckQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELFFBQVEsQ0FBdUIsS0FBSyxFQUFFLEtBQUs7UUFDekMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVELGlCQUFpQixDQUF1QixLQUFLLEVBQUUsS0FBSztRQUNsRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxL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","import { Node } from './Node';\nimport { Condition } from './Condition';\nexport class Filter extends Node {\n    constructor() {\n        super(...arguments);\n        /**\n         * The actual filters of this node\n         */\n        this.filter = {};\n    }\n    /**\n     * @inheritDoc\n     */\n    addFilter(field, filter, value) {\n        if (field !== null) {\n            if (typeof field !== 'string') {\n                throw new Error('Field must be a string.');\n            }\n            if (filter) {\n                const currentFilter = this.filter[field];\n                let fieldFilter;\n                if (typeof currentFilter === 'object' && Object.getPrototypeOf(currentFilter) === Object.prototype) {\n                    fieldFilter = currentFilter;\n                }\n                else {\n                    fieldFilter = {};\n                    this.filter[field] = fieldFilter;\n                }\n                fieldFilter[filter] = value;\n            }\n            else {\n                this.filter[field] = value;\n            }\n        }\n        else {\n            Object.assign(this.filter, value);\n        }\n        return this;\n    }\n    toJSON() {\n        return this.filter;\n    }\n}\nObject.assign(Filter.prototype, Condition);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiRmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDOUIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQVd4QyxNQUFNLE9BQU8sTUFBeUIsU0FBUSxJQUFPO0lBQXJEOztRQUNFOztXQUVHO1FBQ2EsV0FBTSxHQUFpQixFQUFFLENBQUM7SUFtQzVDLENBQUM7SUFqQ0M7O09BRUc7SUFDSCxTQUFTLENBQUMsS0FBb0IsRUFBRSxNQUFxQixFQUFFLEtBQVU7UUFDL0QsSUFBSSxLQUFLLEtBQUssSUFBSSxFQUFFO1lBQ2xCLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO2dCQUM3QixNQUFNLElBQUksS0FBSyxDQUFDLHlCQUF5QixDQUFDLENBQUM7YUFDNUM7WUFFRCxJQUFJLE1BQU0sRUFBRTtnQkFDVixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUN6QyxJQUFJLFdBQXlCLENBQUM7Z0JBQzlCLElBQUksT0FBTyxhQUFhLEtBQUssUUFBUSxJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLEtBQUssTUFBTSxDQUFDLFNBQVMsRUFBRTtvQkFDbEcsV0FBVyxHQUFHLGFBQTZCLENBQUM7aUJBQzdDO3FCQUFNO29CQUNMLFdBQVcsR0FBRyxFQUFFLENBQUM7b0JBQ2pCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsV0FBVyxDQUFDO2lCQUNsQztnQkFFRCxXQUFXLENBQUMsTUFBTSxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQzdCO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQzVCO1NBQ0Y7YUFBTTtZQUNMLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztTQUNuQztRQUVELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELE1BQU07UUFDSixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDckIsQ0FBQztDQUNGO0FBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDIn0=","import { Node } from './Node';\n/**\n * An Operator saves the state of a combined query\n */\nexport class Operator extends Node {\n    /**\n     * @param entityManager The owning entity manager of this query\n     * @param resultClass The query result class\n     * @param operator The operator used to join the childes\n     * @param childes The childes to join\n     */\n    constructor(entityManager, resultClass, operator, childes) {\n        super(entityManager, resultClass);\n        this.operator = operator;\n        this.childes = childes;\n    }\n    toJSON() {\n        const json = {};\n        json[this.operator] = this.childes;\n        return json;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3BlcmF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJPcGVyYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBSTlCOztHQUVHO0FBQ0gsTUFBTSxPQUFPLFFBQTJCLFNBQVEsSUFBTztJQVdyRDs7Ozs7T0FLRztJQUNILFlBQVksYUFBNEIsRUFBRSxXQUFxQixFQUFFLFFBQWdCLEVBQUUsT0FBa0I7UUFDbkcsS0FBSyxDQUFDLGFBQWEsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRUQsTUFBTTtRQUNKLE1BQU0sSUFBSSxHQUFzQyxFQUFFLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ25DLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztDQUNGIn0=","import { Filter } from './Filter';\nimport { Condition } from './Condition';\nimport { Operator } from './Operator';\nimport { Query, flatArgs, } from './Query';\nimport { Node } from './Node';\nexport class Builder extends Query {\n    /**\n     * Joins the conditions by an logical AND\n     * @param args The query nodes to join\n     * @return Returns a new query which joins the given queries by a logical AND\n     */\n    and(...args) {\n        return this.addOperator('$and', flatArgs(args));\n    }\n    /**\n     * Joins the conditions by an logical OR\n     * @param args The query nodes to join\n     * @return Returns a new query which joins the given queries by a logical OR\n     */\n    or(...args) {\n        return this.addOperator('$or', flatArgs(args));\n    }\n    /**\n     * Joins the conditions by an logical NOR\n     * @param args The query nodes to join\n     * @return Returns a new query which joins the given queries by a logical NOR\n     */\n    nor(...args) {\n        return this.addOperator('$nor', flatArgs(args));\n    }\n    eventStream(options, onNext, onError, onComplete) {\n        return this.where({}).eventStream(options, onNext, onError, onComplete);\n    }\n    resultStream(options, onNext, onError, onComplete) {\n        return this.where({}).resultStream(options, onNext, onError, onComplete);\n    }\n    /**\n     * @inheritDoc\n     */\n    resultList(options, doneCallback, failCallback) {\n        return this.where({}).resultList(options, doneCallback, failCallback);\n    }\n    /**\n     * @inheritDoc\n     */\n    singleResult(options, doneCallback, failCallback) {\n        return this.where({}).singleResult(options, doneCallback, failCallback);\n    }\n    /**\n     * @inheritDoc\n     */\n    count(doneCallback, failCallback) {\n        return this.where({}).count(doneCallback, failCallback);\n    }\n    addOperator(operator, args) {\n        if (args.length < 2) {\n            throw new Error(`Only two or more queries can be joined with an ${operator} operator.`);\n        }\n        args.forEach((arg, index) => {\n            if (!(arg instanceof Node)) {\n                throw new Error(`Argument at index ${index} is not a query.`);\n            }\n        });\n        return new Operator(this.entityManager, this.resultClass, operator, args);\n    }\n    addOrder(fieldOrSort, order) {\n        return new Filter(this.entityManager, this.resultClass).addOrder(fieldOrSort, order);\n    }\n    addFilter(field, filter, value) {\n        return new Filter(this.entityManager, this.resultClass).addFilter(field, filter, value);\n    }\n    addOffset(offset) {\n        return new Filter(this.entityManager, this.resultClass).addOffset(offset);\n    }\n    addLimit(limit) {\n        return new Filter(this.entityManager, this.resultClass).addLimit(limit);\n    }\n}\nObject.assign(Builder.prototype, Condition);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnVpbGRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkJ1aWxkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNsQyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEMsT0FBTyxFQUtMLEtBQUssRUFFd0YsUUFBUSxHQUN0RyxNQUFNLFNBQVMsQ0FBQztBQUVqQixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBTzlCLE1BQU0sT0FBTyxPQUEwQixTQUFRLEtBQVE7SUFDckQ7Ozs7T0FJRztJQUNILEdBQUcsQ0FBQyxHQUFHLElBQWtDO1FBQ3ZDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxFQUFFLENBQUMsR0FBRyxJQUFrQztRQUN0QyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsR0FBRyxDQUFDLEdBQUcsSUFBa0M7UUFDdkMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBUUQsV0FBVyxDQUFDLE9BQW1ELEVBQUUsTUFBNEMsRUFDM0csT0FBeUMsRUFDekMsVUFBNkI7UUFDN0IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBUUQsWUFBWSxDQUFDLE9BQXFELEVB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","export { Builder } from './Builder';\nexport { Condition } from './Condition';\nexport { Filter } from './Filter';\nexport { Node } from './Node';\nexport { Operator } from './Operator';\nexport { flatArgs, Query, } from './Query';\nexport { Stream } from './Stream';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFnQixNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDaEQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUM5QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ3RDLE9BQU8sRUFPTCxRQUFRLEVBS1IsS0FBSyxHQUNOLE1BQU0sU0FBUyxDQUFDO0FBRWpCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUMifQ==","export class UpdateOperation {\n    /**\n     * @param name\n     * @param path\n     * @param [value]\n     */\n    constructor(name, path, value) {\n        this.name = name;\n        this.path = path;\n        this.value = value;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXBkYXRlT3BlcmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVXBkYXRlT3BlcmF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxlQUFlO0lBQzFCOzs7O09BSUc7SUFDSCxZQUFtQixJQUFZLEVBQVMsSUFBWSxFQUFTLEtBQVc7UUFBckQsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUFTLFNBQUksR0FBSixJQUFJLENBQVE7UUFBUyxVQUFLLEdBQUwsS0FBSyxDQUFNO0lBQUcsQ0FBQztDQUM3RSJ9","import { UpdateOperation } from './UpdateOperation';\nconst ALLOWED_OPERATIONS = [\n    '$add',\n    '$and',\n    '$currentDate',\n    '$dec',\n    '$inc',\n    '$max',\n    '$min',\n    '$mul',\n    '$or',\n    '$pop',\n    '$push',\n    '$put',\n    '$remove',\n    '$rename',\n    '$replace',\n    '$set',\n    '$shift',\n    '$unshift',\n    '$xor',\n];\nexport class PartialUpdateBuilder {\n    /**\n     * @param operations\n     */\n    constructor(operations) {\n        this.operations = [];\n        if (operations) {\n            this.addOperations(operations);\n        }\n    }\n    /**\n     * Sets a field to a given value\n     *\n     * @param field The field to set\n     * @param value The value to set to\n     * @return\n     */\n    set(field, value) {\n        let val = value;\n        if (val instanceof Set) {\n            val = Array.from(val);\n        }\n        else if (val instanceof Map) {\n            const newValue = {};\n            val.forEach((v, k) => {\n                newValue[k] = v;\n            });\n            val = newValue;\n        }\n        return this.addOperation(field, '$set', val);\n    }\n    /**\n     * Increments a field by a given value\n     *\n     * @param field The field to increment\n     * @param by The number to increment by, defaults to 1\n     * @return\n     */\n    inc(field, by) {\n        return this.addOperation(field, '$inc', typeof by === 'number' ? by : 1);\n    }\n    /**\n     * Decrements a field by a given value\n     *\n     * @param field The field to decrement\n     * @param by The number to decrement by, defaults to 1\n     * @return\n     */\n    dec(field, by) {\n        return this.inc(field, typeof by === 'number' ? -by : -1);\n    }\n    /**\n     * Multiplies a field by a given number\n     *\n     * @param field The field to multiply\n     * @param multiplicator The number to multiply by\n     * @return\n     */\n    mul(field, multiplicator) {\n        if (typeof multiplicator !== 'number') {\n            throw new Error('Multiplicator must be a number.');\n        }\n        return this.addOperation(field, '$mul', multiplicator);\n    }\n    /**\n     * Divides a field by a given number\n     *\n     * @param field The field to divide\n     * @param divisor The number to divide by\n     * @return\n     */\n    div(field, divisor) {\n        if (typeof divisor !== 'number') {\n            throw new Error('Divisor must be a number.');\n        }\n        return this.addOperation(field, '$mul', 1 / divisor);\n    }\n    /**\n     * Sets the highest possible value of a field\n     *\n     * @param field The field to compare with\n     * @param value The highest possible value\n     * @return\n     */\n    min(field, value) {\n        if (typeof value !== 'number') {\n            throw new Error('Value must be a number');\n        }\n        return this.addOperation(field, '$min', value);\n    }\n    /**\n     * Sets the smallest possible value of a field\n     *\n     * @param field The field to compare with\n     * @param value The smalles possible value\n     * @return\n     */\n    max(field, value) {\n        if (typeof value !== 'number') {\n            throw new Error('Value must be a number');\n        }\n        return this.addOperation(field, '$max', value);\n    }\n    /**\n     * Removes an item from an array or map\n     *\n     * @param field The field to perform the operation on\n     * @param item The item to add\n     * @return\n     */\n    remove(field, item) {\n        return this.addOperation(field, '$remove', item);\n    }\n    /**\n     * Puts an item from an array or map\n     *\n     * @param field The field to perform the operation on\n     * @param key The map key to put the value to or an object of arguments\n     * @param [value] The value to put if a key was used\n     * @return\n     */\n    put(field, key, value) {\n        const obj = {};\n        if (typeof key === 'string' || typeof key === 'number') {\n            obj[key] = value;\n        }\n        else if (typeof key === 'object') {\n            Object.assign(obj, key);\n        }\n        return this.addOperation(field, '$put', obj);\n    }\n    /**\n     * Pushes an item into a list\n     *\n     * @param field The field to perform the operation on\n     * @param item The item to add\n     * @return\n     */\n    push(field, item) {\n        return this.addOperation(field, '$push', item);\n    }\n    /**\n     * Unshifts an item into a list\n     *\n     * @param field The field to perform the operation on\n     * @param item The item to add\n     * @return\n     */\n    unshift(field, item) {\n        return this.addOperation(field, '$unshift', item);\n    }\n    /**\n     * Pops the last item out of a list\n     *\n     * @param field The field to perform the operation on\n     * @return\n     */\n    pop(field) {\n        return this.addOperation(field, '$pop');\n    }\n    /**\n     * Shifts the first item out of a list\n     *\n     * @param field The field to perform the operation on\n     * @return\n     */\n    shift(field) {\n        return this.addOperation(field, '$shift');\n    }\n    /**\n     * Adds an item to a set\n     *\n     * @param field The field to perform the operation on\n     * @param item The item to add\n     * @return\n     */\n    add(field, item) {\n        return this.addOperation(field, '$add', item);\n    }\n    /**\n     * Replaces an item at a given index\n     *\n     * @param path The path to perform the operation on\n     * @param index The index where the item will be replaced\n     * @param item The item to replace with\n     * @return\n     */\n    replace(path, index, item) {\n        if (this.hasOperationOnPath(path)) {\n            throw new Error(`You cannot update ${path} multiple times`);\n        }\n        return this.addOperation(`${path}.${index}`, '$replace', item);\n    }\n    /**\n     * Sets a datetime field to the current moment\n     *\n     * @param field The field to perform the operation on\n     * @return\n     */\n    currentDate(field) {\n        return this.addOperation(field, '$currentDate');\n    }\n    /**\n     * Performs a bitwise AND on a path\n     *\n     * @param path The path to perform the operation on\n     * @param bitmask The bitmask taking part in the operation\n     * @return\n     */\n    and(path, bitmask) {\n        return this.addOperation(path, '$and', bitmask);\n    }\n    /**\n     * Performs a bitwise OR on a path\n     *\n     * @param path The path to perform the operation on\n     * @param bitmask The bitmask taking part in the operation\n     * @return\n     */\n    or(path, bitmask) {\n        return this.addOperation(path, '$or', bitmask);\n    }\n    /**\n     * Performs a bitwise XOR on a path\n     *\n     * @param path The path to perform the operation on\n     * @param bitmask The bitmask taking part in the operation\n     * @return\n     */\n    xor(path, bitmask) {\n        return this.addOperation(path, '$xor', bitmask);\n    }\n    /**\n     * Renames a field\n     *\n     * @param oldPath The old field name\n     * @param newPath The new field name\n     * @return\n     */\n    rename(oldPath, newPath) {\n        return this.addOperation(oldPath, '$rename', newPath);\n    }\n    /**\n     * Returns a JSON representation of this partial update\n     *\n     * @return\n     */\n    toJSON() {\n        return this.operations.reduce((json, operation) => (Object.assign(Object.assign({}, json), { [operation.name]: Object.assign(Object.assign({}, json[operation.name]), { [operation.path]: operation.value }) })), {});\n    }\n    /**\n     * Executes the partial update\n     *\n     * @return The promise resolves when the partial update has been executed successfully\n     * @abstract\n     */\n    execute() {\n        throw new Error('Cannot call \"execute\" on abstract PartialUpdateBuilder');\n    }\n    /**\n     * Adds an update operation on the partial update\n     *\n     * @param path The path which gets modified by the operation\n     * @param operator The operator of the operation to add\n     * @param [value] The value used to execute the operation\n     * @return\n     * @private\n     */\n    addOperation(path, operator, value) {\n        if (typeof path !== 'string') {\n            throw new Error('Path must be a string');\n        }\n        if (ALLOWED_OPERATIONS.indexOf(operator) === -1) {\n            throw new Error(`Operation invalid: ${operator}`);\n        }\n        if (this.hasOperationOnPath(path)) {\n            throw new Error(`You cannot update ${path} multiple times`);\n        }\n        // Check for illegal values\n        if (typeof value === 'number') {\n            if (Number.isNaN(value)) {\n                throw new Error('NaN is not a supported value');\n            }\n            if (!Number.isFinite(value)) {\n                throw new Error('Infinity is not a supported value');\n            }\n        }\n        // Add the new operation\n        const normalizedValue = typeof value === 'undefined' ? null : value;\n        const updateOperation = new UpdateOperation(operator, path, normalizedValue);\n        this.operations.push(updateOperation);\n        return this;\n    }\n    /**\n     * Adds initial operations\n     *\n     * @param json\n     * @private\n     */\n    addOperations(json) {\n        Object.keys(json).forEach((key) => {\n            const pathValueDictionary = json[key];\n            Object.keys(pathValueDictionary).forEach((path) => {\n                const value = pathValueDictionary[path];\n                this.operations.push(new UpdateOperation(key, path, value));\n            });\n        });\n    }\n    /**\n     * Checks whether an operation on the field exists already\n     *\n     * @param path The path where the operation is executed on\n     * @return True, if the operation does exist\n     * @private\n     */\n    hasOperationOnPath(path) {\n        return this.operations.some((op) => op.path === path);\n    }\n}\n// aliases\nObject.assign(PartialUpdateBuilder.prototype, {\n    increment: PartialUpdateBuilder.prototype.inc,\n    decrement: PartialUpdateBuilder.prototype.dec,\n    multiply: PartialUpdateBuilder.prototype.mul,\n    divide: PartialUpdateBuilder.prototype.div,\n    atMost: PartialUpdateBuilder.prototype.min,\n    atLeast: PartialUpdateBuilder.prototype.max,\n    toNow: PartialUpdateBuilder.prototype.currentDate,\n});\n//# sourceMappingURL=data:application/json;base64,","import { PartialUpdateBuilder } from './PartialUpdateBuilder';\nimport * as message from '../message';\nimport { Metadata } from '../intersection';\nexport class EntityPartialUpdateBuilder extends PartialUpdateBuilder {\n    /**\n     * @param entity\n     * @param operations\n     */\n    constructor(entity, operations) {\n        super(operations);\n        this.entity = entity;\n    }\n    /**\n     * @inheritDoc\n     */\n    execute() {\n        const state = Metadata.get(this.entity);\n        const body = JSON.stringify(this);\n        const msg = new message.UpdatePartially(state.bucket, state.key, body);\n        return state.withLock(() => (state.db.send(msg).then((response) => {\n            // Update the entity’s values\n            state.type.fromJsonValue(state, response.entity, this.entity, { persisting: true });\n            return this.entity;\n        })));\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW50aXR5UGFydGlhbFVwZGF0ZUJ1aWxkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFbnRpdHlQYXJ0aWFsVXBkYXRlQnVpbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUU5RCxPQUFPLEtBQUssT0FBTyxNQUFNLFlBQVksQ0FBQztBQUV0QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFM0MsTUFBTSxPQUFPLDBCQUE2QyxTQUFRLG9CQUF1QjtJQUN2Rjs7O09BR0c7SUFDSCxZQUE0QixNQUFTLEVBQUUsVUFBbUI7UUFDeEQsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBRFEsV0FBTSxHQUFOLE1BQU0sQ0FBRztJQUVyQyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxPQUFPO1FBQ0wsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDeEMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQyxNQUFNLEdBQUcsR0FBRyxJQUFJLE9BQU8sQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRXZFLE9BQU8sS0FBSyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUMxQixLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtZQUNuQyw2QkFBNkI7WUFDN0IsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1lBQ3BGLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUNyQixDQUFDLENBQUMsQ0FDSCxDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0YifQ==","export { EntityPartialUpdateBuilder } from './EntityPartialUpdateBuilder';\nexport { PartialUpdateBuilder } from './PartialUpdateBuilder';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQyJ9","/* eslint-disable no-bitwise,default-case,no-fallthrough */\nimport { atob } from '../util';\n/**\n * A Bloom Filter is a client-side kept cache sketch of the server cache\n */\nexport class BloomFilter {\n    /**\n     * @param bloomFilter The raw Bloom filter.\n     * @param bloomFilter.m The raw Bloom filter bits.\n     * @param bloomFilter.h The raw Bloom filter hashes.\n     * @param bloomFilter.b The Base64-encoded raw Bloom filter bytes.\n     */\n    constructor(bloomFilter) {\n        this.bytes = atob(bloomFilter.b);\n        this.bits = bloomFilter.m;\n        this.hashes = bloomFilter.h;\n        this.creation = Date.now();\n    }\n    /**\n     * Returns whether this Bloom filter contains the given element.\n     *\n     * @param element The element to check if it is contained.\n     * @return True, if the element is contained in this Bloom filter.\n     */\n    contains(element) {\n        const hashes = BloomFilter.getHashes(element, this.bits, this.hashes);\n        for (let i = 0, len = hashes.length; i < len; i += 1) {\n            if (!this.isSet(hashes[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Checks whether a bit is set at a given position.\n     *\n     * @param index The position index to check.\n     * @return True, if the bit is set at the given position.\n     */\n    isSet(index) {\n        const pos = Math.floor(index / 8);\n        const bit = 1 << (index % 8);\n        // Extract byte as int or NaN if out of range\n        const byte = this.bytes.charCodeAt(pos);\n        // Bit-wise AND should be non-zero (NaN always yields false)\n        return (byte & bit) !== 0;\n    }\n    /**\n     * Returns the hases of a given element in the Bloom filter.\n     *\n     * @param element The element to check.\n     * @param bits The amount of bits.\n     * @param hashes The amount of hashes.\n     * @return The hashes of an element in the Bloom filter.\n     */\n    static getHashes(element, bits, hashes) {\n        const hashValues = new Array(hashes);\n        const hash1 = BloomFilter.murmur3(0, element);\n        const hash2 = BloomFilter.murmur3(hash1, element);\n        for (let i = 0; i < hashes; i += 1) {\n            hashValues[i] = (hash1 + (i * hash2)) % bits;\n        }\n        return hashValues;\n    }\n    /**\n     * Calculate a Murmur3 hash.\n     *\n     * @param seed A seed to use for the hashing.\n     * @param key A key to check.\n     * @return A hashed value of key.\n     */\n    static murmur3(seed, key) {\n        const remainder = key.length & 3;\n        const bytes = key.length - remainder;\n        const c1 = 0xcc9e2d51;\n        const c2 = 0x1b873593;\n        let h1;\n        let h1b;\n        let k1;\n        let i;\n        h1 = seed;\n        i = 0;\n        while (i < bytes) {\n            k1 = ((key.charCodeAt(i) & 0xff))\n                | ((key.charCodeAt(i += 1) & 0xff) << 8)\n                | ((key.charCodeAt(i += 1) & 0xff) << 16)\n                | ((key.charCodeAt(i += 1) & 0xff) << 24);\n            i += 1;\n            k1 = ((((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16))) & 0xffffffff;\n            k1 = (k1 << 15) | (k1 >>> 17);\n            k1 = ((((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16))) & 0xffffffff;\n            h1 ^= k1;\n            h1 = (h1 << 13) | (h1 >>> 19);\n            h1b = ((((h1 & 0xffff) * 5) + ((((h1 >>> 16) * 5) & 0xffff) << 16))) & 0xffffffff;\n            h1 = (((h1b & 0xffff) + 0x6b64) + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16));\n        }\n        k1 = 0;\n        switch (remainder) {\n            case 3:\n                k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n            case 2:\n                k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n            case 1:\n                k1 ^= (key.charCodeAt(i) & 0xff);\n                k1 = (((k1 & 0xffff) * c1) + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n                k1 = (k1 << 15) | (k1 >>> 17);\n                k1 = (((k1 & 0xffff) * c2) + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n                h1 ^= k1;\n        }\n        h1 ^= key.length;\n        h1 ^= h1 >>> 16;\n        h1 = (((h1 & 0xffff) * 0x85ebca6b) + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n        h1 ^= h1 >>> 13;\n        h1 = ((((h1 & 0xffff) * 0xc2b2ae35) + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16))) & 0xffffffff;\n        h1 ^= h1 >>> 16;\n        return h1 >>> 0;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQmxvb21GaWx0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJCbG9vbUZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwyREFBMkQ7QUFFM0QsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUUvQjs7R0FFRztBQUNILE1BQU0sT0FBTyxXQUFXO0lBNkJ0Qjs7Ozs7T0FLRztJQUNILFlBQVksV0FBZ0Q7UUFDMUQsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxJQUFJLEdBQUcsV0FBVyxDQUFDLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsTUFBTSxHQUFHLFdBQVcsQ0FBQyxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsUUFBUSxDQUFDLE9BQWU7UUFDdEIsTUFBTSxNQUFNLEdBQUcsV0FBVyxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEUsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3BELElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMxQixPQUFPLEtBQUssQ0FBQzthQUNkO1NBQ0Y7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNLLEtBQUssQ0FBQyxLQUFhO1FBQ3pCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFD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","export { BloomFilter } from './BloomFilter';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDIn0=","/**\n * An aggregation of access rules for given object metadata.\n */\nexport class Permission {\n    constructor() {\n        this.rules = {};\n    }\n    /**\n     * Returns a list of user and role references of all rules\n     * @return a list of references\n     */\n    allRules() {\n        return Object.keys(this.rules);\n    }\n    /**\n     * Removes all rules from this permission object\n     * @return\n     */\n    clear() {\n        this.rules = {};\n    }\n    /**\n     * Copies permissions from another permission object\n     * @param permission The permission to copy from\n     * @return\n     */\n    copy(permission) {\n        this.rules = Object.assign({}, permission.rules);\n        return this;\n    }\n    /**\n     * Gets whenever all users and roles have the permission to perform the operation\n     * @return <code>true</code> If public access is allowed\n     */\n    isPublicAllowed() {\n        if ('*' in this.rules) {\n            return false;\n        }\n        return !this.allRules().some((ref) => this.rules[ref] === 'allow');\n    }\n    /**\n     * Sets whenever all users and roles should have the permission to perform the operation\n     *\n     * Note: All other allow rules will be removed.\n     *\n     * @return\n     */\n    setPublicAllowed() {\n        this.allRules().forEach((ref) => {\n            if (this.rules[ref] === 'allow') {\n                delete this.rules[ref];\n            }\n        });\n    }\n    /**\n     * Returns the actual rule of the given user or role.\n     * @param userOrRole The user or role to check for\n     * @return The actual access rule or undefined if no rule was found\n     */\n    getRule(userOrRole) {\n        return this.rules[this.ref(userOrRole)];\n    }\n    /**\n     * Checks whenever the user or role is explicit allowed to perform the operation.\n     *\n     * @param userOrRole The user or role to check for\n     * @return <code>true</code> If the given user or role is allowed\n     */\n    isAllowed(userOrRole) {\n        return this.rules[this.ref(userOrRole)] === 'allow';\n    }\n    /**\n     * Checks whenever the user or role is explicit denied to perform the operation.\n     *\n     * @param userOrRole The user or role to check for\n     * @return <code>true</code> If the given user or role is denied\n     */\n    isDenied(userOrRole) {\n        return this.rules[this.ref(userOrRole)] === 'deny';\n    }\n    /**\n     * Allows the given users or rules to perform the operation\n     * @param userOrRole The users or roles to allow\n     * @return this permission object\n     */\n    allowAccess(...userOrRole) {\n        for (let i = 0; i < userOrRole.length; i += 1) {\n            this.rules[this.ref(userOrRole[i])] = 'allow';\n        }\n        return this;\n    }\n    /**\n     * Denies the given users or rules to perform the operation\n     * @param userOrRole The users or roles to deny\n     * @return this permission object\n     */\n    denyAccess(...userOrRole) {\n        for (let i = 0; i < userOrRole.length; i += 1) {\n            this.rules[this.ref(userOrRole[i])] = 'deny';\n        }\n        return this;\n    }\n    /**\n     * Deletes any allow/deny rules for the given users or roles\n     * @param userOrRole The users or roles to delete rules for\n     * @return this permission object\n     */\n    deleteAccess(...userOrRole) {\n        for (let i = 0; i < userOrRole.length; i += 1) {\n            delete this.rules[this.ref(userOrRole[i])];\n        }\n        return this;\n    }\n    /**\n     * A Json representation of the set of rules\n     * @return\n     */\n    toJSON() {\n        return Object.assign({}, this.rules);\n    }\n    /**\n     * Sets the permission rules from json\n     * @param json The permission json representation\n     * @return\n     */\n    fromJSON(json) {\n        this.rules = json;\n    }\n    /**\n     * Creates a permission from the given rules.\n     * @param json The rules.\n     * @return The permission.\n     */\n    static fromJSON(json) {\n        const permission = new this();\n        permission.fromJSON(json);\n        return permission;\n    }\n    /**\n     * Resolves user and role references and validate given references\n     * @param userOrRole The user, role or reference\n     * @return The resolved and validated reference\n     */\n    ref(userOrRole) {\n        const ref = typeof userOrRole === 'string' ? userOrRole : userOrRole.id;\n        if (ref.indexOf('/db/User/') === 0 || ref.indexOf('/db/Role/') === 0) {\n            return ref;\n        }\n        throw new TypeError('The given object isn\\'t a user, role or a valid reference.');\n    }\n}\nPermission.BASE_PERMISSIONS = ['load', 'update', 'delete', 'query', 'insert'];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGVybWlzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlBlcm1pc3Npb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUE7O0dBRUc7QUFDSCxNQUFNLE9BQU8sVUFBVTtJQUF2QjtRQUdTLFVBQUssR0FBNEIsRUFBRSxDQUFDO0lBcUs3QyxDQUFDO0lBbktDOzs7T0FHRztJQUNILFFBQVE7UUFDTixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRDs7O09BR0c7SUFDSCxLQUFLO1FBQ0gsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7SUFDbEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxJQUFJLENBQUMsVUFBc0I7UUFDekIsSUFBSSxDQUFDLEtBQUsscUJBQVEsVUFBVSxDQUFDLEtBQUssQ0FBRSxDQUFDO1FBQ3JDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVEOzs7T0FHRztJQUNILGVBQWU7UUFDYixJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ3JCLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxPQUFPLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0gsZ0JBQWdCO1FBQ2QsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1lBQzlCLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxPQUFPLEVBQUU7Z0JBQy9CLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUN4QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FB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","function optionalRxjsDependency() {\n    throw new Error('This functionality is only available, if the optional rxjs dependency is also provided.');\n}\nlet rxjs = {\n    Observable: optionalRxjsDependency,\n    Subscription: optionalRxjsDependency,\n    Subscriber: optionalRxjsDependency,\n};\ntry {\n    // we load this module as an optional external dependency\n    // eslint-disable-next-line global-require\n    rxjs = require('rxjs');\n}\ncatch (e) {\n    // ignore loading optional module error\n}\nconst { Observable, Subscription, Subscriber } = rxjs;\nexport { Observable, Subscription, Subscriber };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JzZXJ2YWJsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm9ic2VydmFibGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsU0FBUyxzQkFBc0I7SUFDN0IsTUFBTSxJQUFJLEtBQUssQ0FBQyx5RkFBeUYsQ0FBQyxDQUFDO0FBQzdHLENBQUM7QUFFRCxJQUFJLElBQUksR0FBRztJQUNULFVBQVUsRUFBRSxzQkFBc0Q7SUFDbEUsWUFBWSxFQUFFLHNCQUFzRDtJQUNwRSxVQUFVLEVBQUUsc0JBQXNEO0NBQ25FLENBQUM7QUFFRixJQUFJO0lBQ0YseURBQXlEO0lBQ3pELDBDQUEwQztJQUMxQyxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0NBQ3hCO0FBQUMsT0FBTyxDQUFDLEVBQUU7SUFDVix1Q0FBdUM7Q0FDeEM7QUFNRCxNQUFNLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsR0FBRyxJQUFJLENBQUM7QUFFdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLENBQUMifQ==","/* (ignored) */","/* (ignored) */","//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIn0=","if(typeof rxjs === 'undefined') {var e = new Error(\"Cannot find module 'rxjs'\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = rxjs;","if(typeof validator === 'undefined') {var e = new Error(\"Cannot find module 'validator'\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = validator;","import * as binding from './binding';\nimport * as connector from './connector';\nimport * as error from './error';\nimport * as message from './message';\nimport * as util from './util';\nimport * as caching from './caching';\nimport * as query from './query';\nimport * as partialupdate from './partialupdate';\nimport * as intersection from './intersection';\nimport * as metamodel from './metamodel';\nimport { Permission, Metadata, TokenStorage, Validator, PushMessage, Code, Modules, Logger, } from './intersection';\nimport { Metamodel } from './metamodel';\nimport { EntityManagerFactory } from './EntityManagerFactory';\nimport { EntityManager } from './EntityManager';\nimport { Acl } from './Acl';\nimport { db } from './baqend';\nimport { deprecated } from './util';\nfunction deprecateExports(target, targetName, newImportSignature, exports) {\n    Object.keys(exports).forEach((exported) => {\n        const decorate = deprecated(newImportSignature.replace('$export', exported));\n        Object.defineProperty(target, exported, decorate(targetName, exported, {\n            get() {\n                return exports[exported];\n            },\n        }));\n    });\n}\ndeprecateExports(util, 'util', 'intersection.$export', {\n    Permission, Metadata, TokenStorage, Validator, PushMessage, Code, Modules, Logger,\n});\ndeprecateExports(EntityManager.prototype, 'db', 'import { $export } from \\'baqend\\'', {\n    db,\n    binding,\n    connector,\n    error,\n    message,\n    util,\n    caching,\n    query,\n    partialupdate,\n    intersection,\n    EntityManagerFactory,\n    EntityManager,\n    Acl,\n});\ndeprecateExports(Metamodel.prototype, 'metamodel', 'import { metamodel } from \\'baqend\\';', metamodel);\nexport function configure() {\n    throw new Error('Please use Baqend.db.configure() or import { db } from \\'baqend\\' instead.');\n}\nexport function connect() {\n    throw new Error('Please use Baqend.db.connect() or import { db } from \\'baqend\\' instead.');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVwZXJlY2F0ZWQtZXhwb3J0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRlcGVyZWNhdGVkLWV4cG9ydHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLE9BQU8sTUFBTSxXQUFXLENBQUM7QUFDckMsT0FBTyxLQUFLLFNBQVMsTUFBTSxhQUFhLENBQUM7QUFDekMsT0FBTyxLQUFLLEtBQUssTUFBTSxTQUFTLENBQUM7QUFDakMsT0FBTyxLQUFLLE9BQU8sTUFBTSxXQUFXLENBQUM7QUFDckMsT0FBTyxLQUFLLElBQUksTUFBTSxRQUFRLENBQUM7QUFDL0IsT0FBTyxLQUFLLE9BQU8sTUFBTSxXQUFXLENBQUM7QUFDckMsT0FBTyxLQUFLLEtBQUssTUFBTSxTQUFTLENBQUM7QUFDakMsT0FBTyxLQUFLLGFBQWEsTUFBTSxpQkFBaUIsQ0FBQztBQUNqRCxPQUFPLEtBQUssWUFBWSxNQUFNLGdCQUFnQixDQUFDO0FBQy9DLE9BQU8sS0FBSyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBRXpDLE9BQU8sRUFDTCxVQUFVLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsTUFBTSxHQUNsRixNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFFNUIsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUM5QixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRXBDLFNBQVMsZ0JBQWdCLENBQUMsTUFBYyxFQUFFLFVBQWtCLEVBQUUsa0JBQTBCLEVBQUUsT0FFekY7SUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsRUFBRSxFQUFFO1FBQ3hDLE1BQU0sUUFBUSxHQUFHLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDN0UsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFO1lBQ3JFLEdBQUc7Z0JBQ0QsT0FBUSxPQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDcEMsQ0FBQztTQUNGLENBQUMsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBRUQsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxzQkFBc0IsRUFBRTtJQUNyRCxVQUFVLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsTUFBTTtDQUNsRixDQUFDLENBQUM7QUFFSCxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxvQ0FBb0MsRUFBRTtJQUNwRixFQUFFO0lBQ0YsT0FBTztJQUNQLFNBQVM7SUFDVCxLQUFLO0lBQ0wsT0FBTztJQUNQLElBQUk7SUFDSixPQUFPO0lBQ1AsS0FBSztJQUNMLGFBQWE7SUFDYixZQUFZO0lBRVosb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYixHQUFHO0NBQ0osQ0FBQyxDQUFDO0FBRUgsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUUsdUNBQXVDLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFFdkcsTUFBTSxVQUFVLFNBQVM7SUFDdkIsTUFBTSxJQUFJLEtBQUssQ0FBQyw0RUFBNEUsQ0FBQyxDQUFDO0FBQ2hHLENBQUM7QUFFRCxNQUFNLFVBQVUsT0FBTztJQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLDBFQUEwRSxDQUFDLENBQUM7QUFDOUYsQ0FBQyJ9","import { db } from './baqend';\nimport * as binding_1 from './binding';\nexport { binding_1 as binding };\nimport * as connector_1 from './connector';\nexport { connector_1 as connector };\nimport * as error_1 from './error';\nexport { error_1 as error };\nimport * as message_1 from './message';\nexport { message_1 as message };\nimport * as metamodel_1 from './metamodel';\nexport { metamodel_1 as metamodel };\nimport * as util_1 from './util';\nexport { util_1 as util };\nimport * as intersection_1 from './intersection';\nexport { intersection_1 as intersection };\nimport * as caching_1 from './caching';\nexport { caching_1 as caching };\nimport * as query_1 from './query';\nexport { query_1 as query };\nimport * as partialupdate_1 from './partialupdate';\nexport { partialupdate_1 as partialupdate };\nimport * as model_1 from './model';\nexport { model_1 as model };\nexport { EntityManagerFactory } from './EntityManagerFactory';\nexport { EntityManager } from './EntityManager';\nexport { Acl } from './Acl';\nexport { GeoPoint } from './GeoPoint';\nexport { db } from './baqend';\nexport { connect, configure } from './deperecated-exports';\nconst SetType = Set;\nconst MapType = Map;\nconst ListType = Array;\nexport { SetType as Set, ListType as List, MapType as Map };\n// Use one global default export of this module\n// eslint-disable-next-line import/no-default-export\nexport default db;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sVUFBVSxDQUFDOzJCQUVMLFdBQVc7c0JBQXhCLE9BQU87NkJBQ1EsYUFBYTt3QkFBNUIsU0FBUzt5QkFDRSxTQUFTO29CQUFwQixLQUFLOzJCQUNRLFdBQVc7c0JBQXhCLE9BQU87NkJBQ1EsYUFBYTt3QkFBNUIsU0FBUzt3QkFDQyxRQUFRO21CQUFsQixJQUFJO2dDQUNjLGdCQUFnQjsyQkFBbEMsWUFBWTsyQkFDQyxXQUFXO3NCQUF4QixPQUFPO3lCQUNJLFNBQVM7b0JBQXBCLEtBQUs7aUNBQ2MsaUJBQWlCOzRCQUFwQyxhQUFhO3lCQUNGLFNBQVM7b0JBQXBCLEtBQUs7QUFFakIsT0FBTyxFQUFFLG9CQUFvQixFQUFlLE1BQU0sd0JBQXdCLENBQUM7QUFDM0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDNUIsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUN0QyxPQUFPLEVBQUUsRUFBRSxFQUFVLE1BQU0sVUFBVSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFM0QsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDO0FBQ3BCLE1BQU0sT0FBTyxHQUFHLEdBQUcsQ0FBQztBQUNwQixNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUM7QUFFdkIsT0FBTyxFQUFFLE9BQU8sSUFBSSxHQUFHLEVBQUUsUUFBUSxJQUFJLElBQUksRUFBRSxPQUFPLElBQUksR0FBRyxFQUFFLENBQUM7QUFFNUQsK0NBQStDO0FBQy9DLG9EQUFvRDtBQUNwRCxlQUFlLEVBQUUsQ0FBQyJ9"],"sourceRoot":""}