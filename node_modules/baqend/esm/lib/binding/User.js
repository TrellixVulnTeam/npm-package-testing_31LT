var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { enumerable } from '../util/enumerable';
import { Entity } from './Entity';
export class User extends Entity {
    /**
     * Change the password of the given user
     *
     * @param currentPassword Current password of the user
     * @param password New password of the user
     * @param doneCallback Called when the operation succeed.
     * @param failCallback Called when the operation failed.
     * @return
     */
    newPassword(currentPassword, password, doneCallback, failCallback) {
        return this._metadata.db.newPassword(this.username, currentPassword, password).then(doneCallback, failCallback);
    }
    /**
     * Change the username of the current user
     *
     * @param newUsername New username for the current user
     * @param password The password of the current user
     * @param doneCallback Called when the operation succeed.
     * @param failCallback Called when the operation failed.
     * @return
     */
    changeUsername(newUsername, password, doneCallback, failCallback) {
        return this._metadata.db.changeUsername(this.username, newUsername, password).then(doneCallback, failCallback);
    }
    /**
     * Requests a perpetual token for the user
     *
     * Only users with the admin role are allowed to request an API token.
     *
     * @param doneCallback Called when the operation succeed.
     * @param failCallback Called when the operation failed.
     * @return
     */
    requestAPIToken(doneCallback, failCallback) {
        return this._metadata.db.requestAPIToken(this.constructor, this)
            .then(doneCallback, failCallback);
    }
}
__decorate([
    enumerable(false)
], User.prototype, "newPassword", null);
__decorate([
    enumerable(false)
], User.prototype, "changeUsername", null);
__decorate([
    enumerable(false)
], User.prototype, "requestAPIToken", null);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9iaW5kaW5nL1VzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2hELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFJbEMsTUFBTSxPQUFPLElBQUssU0FBUSxNQUFNO0lBVzlCOzs7Ozs7OztPQVFHO0lBRUgsV0FBVyxDQUFDLGVBQXVCLEVBQUUsUUFBZ0IsRUFBRSxZQUFrQixFQUFFLFlBQWtCO1FBQzNGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxRQUFVLEVBQUUsZUFBZSxFQUFFLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDcEgsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBRUgsY0FBYyxDQUFDLFdBQW1CLEVBQUUsUUFBZ0IsRUFBRSxZQUFrQixFQUFFLFlBQWtCO1FBQzFGLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFVLEVBQUUsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDbkgsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBRUgsZUFBZSxDQUFDLFlBQWtCLEVBQUUsWUFBa0I7UUFDcEQsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQWdDLEVBQUUsSUFBSSxDQUFDO2FBQ2xGLElBQUksQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDdEMsQ0FBQztDQUNGO0FBaENDO0lBREMsVUFBVSxDQUFDLEtBQUssQ0FBQzt1Q0FHakI7QUFZRDtJQURDLFVBQVUsQ0FBQyxLQUFLLENBQUM7MENBR2pCO0FBWUQ7SUFEQyxVQUFVLENBQUMsS0FBSyxDQUFDOzJDQUlqQiJ9