import { Accessor } from '../binding';
export var PersistentAttributeType;
(function (PersistentAttributeType) {
    PersistentAttributeType[PersistentAttributeType["BASIC"] = 0] = "BASIC";
    PersistentAttributeType[PersistentAttributeType["ELEMENT_COLLECTION"] = 1] = "ELEMENT_COLLECTION";
    PersistentAttributeType[PersistentAttributeType["EMBEDDED"] = 2] = "EMBEDDED";
    PersistentAttributeType[PersistentAttributeType["MANY_TO_MANY"] = 3] = "MANY_TO_MANY";
    PersistentAttributeType[PersistentAttributeType["MANY_TO_ONE"] = 4] = "MANY_TO_ONE";
    PersistentAttributeType[PersistentAttributeType["ONE_TO_MANY"] = 5] = "ONE_TO_MANY";
    PersistentAttributeType[PersistentAttributeType["ONE_TO_ONE"] = 6] = "ONE_TO_ONE";
})(PersistentAttributeType || (PersistentAttributeType = {}));
const ATTACHED_STATE = Symbol('AttachedState');
const ATTACHED_SIZE = Symbol('AttachedSize');
export class Attribute {
    /**
     * @param name The attribute name
     * @param isMetadata <code>true</code> if the attribute is an metadata attribute
     */
    constructor(name, isMetadata) {
        this.isId = false;
        this.isVersion = false;
        this.isAcl = false;
        this.order = null;
        this.accessor = null;
        this.declaringType = null;
        this.metadata = null;
        this.isMetadata = !!isMetadata;
        this.name = name;
    }
    static attachState(obj, state, overwriteExistingValue = false) {
        if (state !== undefined && (overwriteExistingValue || obj[ATTACHED_STATE] === undefined)) {
            // ensure that this property is not visible on browsers which do not support Symbols
            Object.defineProperty(obj, ATTACHED_STATE, { value: state, configurable: true });
        }
        return obj[ATTACHED_STATE];
    }
    /**
     * Attach and returns the the given size on the collection, in a meaner that it isn't enumerable
     * @param {Set<*>|Map<*,*>} collection The collection where the size is attached on
     * @param {number} size The size which should be attached, the previously attached size will be
     * returned if omitted
     * @return {number} The actual or new attached size whenever a new size was provided or not
     */
    static attachSize(collection, size) {
        if (size !== undefined) {
            // ensure that this property is not visible on browsers which do not support Symbols
            Object.defineProperty(collection, ATTACHED_SIZE, { value: size, configurable: true });
        }
        return collection[ATTACHED_SIZE] || -1;
    }
    /**
     * Returns the persistent attribute type
     */
    get persistentAttributeType() {
        return -1;
    }
    /**
     * @type boolean
     * @readonly
     */
    get isAssociation() {
        return this.persistentAttributeType > PersistentAttributeType.EMBEDDED;
    }
    get isCollection() {
        return this.persistentAttributeType === PersistentAttributeType.ELEMENT_COLLECTION;
    }
    /**
     * @param declaringType The type that owns this attribute
     * @param order Position of the attribute
     * @return
     */
    init(declaringType, order) {
        if (this.declaringType) {
            throw new Error('The attribute is already initialized.');
        }
        this.order = order;
        this.accessor = new Accessor();
        this.declaringType = declaringType;
    }
    /**
     * @param entity
     * @return
     */
    getValue(entity) {
        return this.accessor.getValue(entity, this);
    }
    /**
     * @param entity
     * @param value
     */
    setValue(entity, value) {
        this.accessor.setValue(entity, this, value);
    }
    /**
     * Retrieves whether this type has specific metadata
     *
     * @param key
     * @return
     */
    hasMetadata(key) {
        return !!this.metadata && key in this.metadata;
    }
    /**
     * Gets some metadata of this type
     *
     * @param key
     * @return
     */
    getMetadata(key) {
        if (!this.hasMetadata(key)) {
            return null;
        }
        return this.metadata[key] || null;
    }
    /**
     * Converts this attribute field to json
     * @return The attribute description as json
     */
    toJSON() {
        return Object.assign({ name: this.name, order: this.order }, (this.metadata && { metadata: this.metadata }));
    }
}
Attribute.PersistentAttributeType = PersistentAttributeType;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXR0cmlidXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL21ldGFtb2RlbC9BdHRyaWJ1dGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBVyxNQUFNLFlBQVksQ0FBQztBQUsvQyxNQUFNLENBQU4sSUFBWSx1QkFRWDtBQVJELFdBQVksdUJBQXVCO0lBQ2pDLHVFQUFTLENBQUE7SUFDVCxpR0FBc0IsQ0FBQTtJQUN0Qiw2RUFBWSxDQUFBO0lBQ1oscUZBQWdCLENBQUE7SUFDaEIsbUZBQWUsQ0FBQTtJQUNmLG1GQUFlLENBQUE7SUFDZixpRkFBYyxDQUFBO0FBQ2hCLENBQUMsRUFSVyx1QkFBdUIsS0FBdkIsdUJBQXVCLFFBUWxDO0FBRUQsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQy9DLE1BQU0sYUFBYSxHQUFHLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUU3QyxNQUFNLE9BQWdCLFNBQVM7SUFrRjdCOzs7T0FHRztJQUNILFlBQXNCLElBQVksRUFBRSxVQUFvQjtRQWpGakQsU0FBSSxHQUFHLEtBQUssQ0FBQztRQUViLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFFbEIsVUFBSyxHQUFHLEtBQUssQ0FBQztRQUlkLFVBQUssR0FBa0IsSUFBSSxDQUFDO1FBRTVCLGFBQVEsR0FBb0IsSUFBSSxDQUFDO1FBRWpDLGtCQUFhLEdBQTRCLElBQUksQ0FBQztRQUU5QyxhQUFRLEdBQW9DLElBQUksQ0FBQztRQW9FdEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDO1FBQy9CLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUFsREQsTUFBTSxDQUFDLFdBQVcsQ0FBSSxHQUFvRCxFQUFFLEtBQVMsRUFDbkYseUJBQWtDLEtBQUs7UUFDdkMsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLENBQUMsc0JB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