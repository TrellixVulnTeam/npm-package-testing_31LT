import { Attribute, PersistentAttributeType } from './Attribute';
import { PersistenceType } from './Type';
export class SingularAttribute extends Attribute {
    /**
     * @param name
     * @param type
     * @param isMetadata <code>true</code> if the attribute is an metadata attribute
     */
    constructor(name, type, isMetadata) {
        super(name, isMetadata);
        this.type = type;
    }
    /**
     * The constructor of the element type of this attribute
     */
    get typeConstructor() {
        return this.type.typeConstructor;
    }
    /**
     * @inheritDoc
     */
    get persistentAttributeType() {
        switch (this.type.persistenceType) {
            case PersistenceType.BASIC:
                return PersistentAttributeType.BASIC;
            case PersistenceType.EMBEDDABLE:
                return PersistentAttributeType.EMBEDDED;
            case PersistenceType.ENTITY:
                return PersistentAttributeType.ONE_TO_MANY;
            default:
                throw new Error('Unknown persistent attribute type.');
        }
    }
    /**
     * @inheritDoc
     */
    getJsonValue(state, object, options) {
        const persistedState = Attribute.attachState(object, {});
        const value = this.getValue(object);
        const changed = persistedState[this.name] !== value;
        if (options.persisting) {
            persistedState[this.name] = value;
        }
        if (changed) {
            state.setDirty();
        }
        return this.type.toJsonValue(state, value, options);
    }
    /**
     * @inheritDoc
     */
    setJsonValue(state, object, jsonValue, options) {
        const value = this.type.fromJsonValue(state, jsonValue, this.getValue(object), options);
        if (options.persisting) {
            const persistedState = Attribute.attachState(object, {});
            persistedState[this.name] = value;
        }
        this.setValue(object, value);
    }
    /**
     * @inheritDoc
     */
    toJSON() {
        return Object.assign({ type: this.type.ref }, super.toJSON());
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2luZ3VsYXJBdHRyaWJ1dGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvbWV0YW1vZGVsL1Npbmd1bGFyQXR0cmlidXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDakUsT0FBTyxFQUFFLGVBQWUsRUFBUSxNQUFNLFFBQVEsQ0FBQztBQU8vQyxNQUFNLE9BQU8saUJBQXFCLFNBQVEsU0FBWTtJQTBCcEQ7Ozs7T0FJRztJQUNILFlBQVksSUFBWSxFQUFFLElBQWEsRUFBRSxVQUFvQjtRQUMzRCxLQUFLLENBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7SUEvQkQ7O09BRUc7SUFDSCxJQUFJLGVBQWU7UUFDakIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUNuQyxDQUFDO0lBRUQ7O09BRUc7SUFDSCxJQUFJLHVCQUF1QjtRQUN6QixRQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ2pDLEtBQUssZUFBZSxDQUFDLEtBQUs7Z0JBQ3hCLE9BQU8sdUJBQXVCLENBQUMsS0FBSyxDQUFDO1lBQ3ZDLEtBQUssZUFBZSxDQUFDLFVBQVU7Z0JBQzdCLE9BQU8sdUJBQXVCLENBQUMsUUFBUSxDQUFDO1lBQzFDLEtBQUssZUFBZSxDQUFDLE1BQU07Z0JBQ3pCLE9BQU8sdUJBQXVCLENBQUMsV0FBVyxDQUFDO1lBQzdDO2dCQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsb0NBQW9DLENBQUMsQ0FBQztTQUN6RDtJQUNILENBQUM7SUFZRDs7T0FFRztJQUNILFlBQVksQ0FBQyxLQUFtQixFQUFFLE1BQWUsRUFDL0MsT0FBcUY7UUFDckYsTUFBTSxjQUFjLEdBQTJCLFNBQVMsQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ2pGLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEMsTUFBTSxPQUFPLEdBQUcsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUM7UUFFcEQsSUFBSSxPQUFPLENBQUMsVUFBVSxFQUFFO1lBQ3RCLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDO1NBQ25DO1FBRUQsSUFBSSxPQUFPLEVBQUU7WUFDWCxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDbEI7UUFFRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVEOztPQUVHO0lBQ0gsWUFBWSxDQUFDLEtBQW1CLEVBQUUsTUFBZSxFQUFFLFNBQWUsRUFDaEUsT0FBd0Q7UUFDeEQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRXhGLElBQUksT0FBTyxDQUFDLFVBQVUsRUFBRTtZQUN0QixNQUFNLGNBQWMsR0FBMkIsU0FBUyxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7WUFDakYsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLENBQUM7U0FDbkM7UUFFRCxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNO1FBQ0osdUJBQ0UsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUNoQixLQUFLLENBQUMsTUFBTSxFQUFFLEVBQ2pCO0lBQ0osQ0FBQztDQUNGIn0=